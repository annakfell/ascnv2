[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Applied Statistics",
    "section": "",
    "text": "Preface\nThis document is a set of course notes for several Applied Statistics courses at California State University, Chico. This is not a textbook replacement, and topics covered will vary depending on the instructor. To make this clear we use the term notebook to refer to this document so as not to be confused with a traditional textbook.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#data",
    "href": "index.html#data",
    "title": "Applied Statistics",
    "section": "Data",
    "text": "Data\nSome data and examples in this notebook are drawn from Practical Multivariate Analysis, 6th ed, Afifi, May, Donatello, Clark and used with permission by the authors. The data with corresponding codebooks can be downloaded from https://norcalbiostat.github.io/pma6_code/\nThis work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#acknowledgments",
    "href": "index.html#acknowledgments",
    "title": "Applied Statistics",
    "section": "Acknowledgments",
    "text": "Acknowledgments\nAnnabelle Feller (@annakfell)",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "dataprep.html",
    "href": "dataprep.html",
    "title": "1  Workflow and Data Cleaning",
    "section": "",
    "text": "1.1 Reproducible workflows\nReproducibility is the ability for any researcher to take the same data set and run the same set of software program instructions as another researcher and achieve the same results.\nThe goal is to create an exact record of what was done to a data set to produce a specific result. To achieve reproducibility, we believe that three things must be present:",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Workflow and Data Cleaning</span>"
    ]
  },
  {
    "objectID": "dataprep.html#reproducible-workflows",
    "href": "dataprep.html#reproducible-workflows",
    "title": "1  Workflow and Data Cleaning",
    "section": "",
    "text": "The unprocessed data are connected directly to software code file(s) that perform data preparation techniques.\nThe processed data are connected directly to other software code file(s) that perform the analyses.\nAll data and code files are self-contained such that they could be given to another researcher to execute the code commands on a separate computer and achieve the same results as the original author.\n\n\n\n\n\n\n\n\nThink about it\n\n\n\nWhy do we need a codebook?\n\nYou are your own collaborator 6 months from now. Make sure you will be able to understand what you were doing.\nInvesting the time to do things clearly and in a reproducible manner will make your future self happy.\nComment your code with explanations and instructions.\n\nHow did you get from point A to B?\nWhy did you recode this variable in this manner?\n\nWe need to record those steps (not just for posterity).\nThis means your code must be saved in a script file.\n\nInclude sufficient notes to yourself describing what you are doing and why.\nFor R, this can be in a .R, .Rmd or .qmd file. I always prefer the latter.\nFor SAS you’ll use a .sas file\nFor STATA this will be a .do file\n\n\n\n\n\n\n\nFigure Credits: Roger Peng\n\n\n\n1.1.1 Literate programming\n\nProgramming paradigm introduced by Knuth (1984)\nExplain the logic of the program or analysis process in a natural language\nSmall code snippets included at each step act as a full set of instructions that can be executed to reproduce the result/analysis being discussed.\n\nLiterate programming tools are integrated into most common statistical packages, including:\n\nMarkdown (R, Stata), Quarto (R, Python, Julia, and JavaScript)\n\\(\\LaTeX\\) (R, SAS, Stata)\n\n\n\n\n\n\n\nLearn more\n\n\n\nThe current gold standard for writing reproducible literate documents in R is to use Quarto. Quarto documents can integrate code snippets from several languages and other code editing platforms, like Jupyter Notebook.\n\n\nPracticing reproducible research techniques using literate programming tools allows such major updates to be a simple matter of recompiling all coded instructions using the updated data set.\nThe effort then is reduced to a careful review and update of any written results.\nUsing literate programming tools, you can create formatted documents with\n\nsection headers\nbold and italicized words\ntables and graphics with built-in captions\n\nin a streamlined manner that is fully synchronized with the code itself.\nThe author writes the text explanations, interpretations, and code in the statistical software program itself, and the program will execute all commands and combine the text, code and output all together into a final dynamic document.\n\n\n\n\n\n\nThink about it\n\n\n\nWhat stages of the pipeline shown above can we conduct using literate programming tools?",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Workflow and Data Cleaning</span>"
    ]
  },
  {
    "objectID": "dataprep.html#import-data",
    "href": "dataprep.html#import-data",
    "title": "1  Workflow and Data Cleaning",
    "section": "1.2 Import data",
    "text": "1.2 Import data\nThis section uses the raw depression data set from the Afifi et. al. textbook. This is a tab-delimited data set, so we opt to use read.table here. We include arguments sep=\"\\t\" to indicate columns are separated with tabs and header=TRUE to indicate the first row of the data is the variable names.\n\ndepress_raw &lt;- read.table(here::here(\"data/Depress.txt\"), \n                      sep=\"\\t\", header=TRUE)  \n\n\n\n\n\n\n\nLearn more\n\n\n\nSee R for Data Science (2e) for more instruction on importing different types of data and ways you can streamline your data import.\n\n\nThe absolute first thing you should do is to look at your raw data table. Are the column headers variable names? Did all the rows get read in? Are there any extra columns or rows included?",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Workflow and Data Cleaning</span>"
    ]
  },
  {
    "objectID": "dataprep.html#data-management",
    "href": "dataprep.html#data-management",
    "title": "1  Workflow and Data Cleaning",
    "section": "1.3 Data management",
    "text": "1.3 Data management\nQuestions to ask yourself while reviewing the codebook to choose variables to be used in an analysis.\n\nAre there codes that indicate missing data? E.g. MISSING or -99?\nDo you need to make response codes more logical?\n\nSome systems will record 1=YES and 2=NO. This should be changed to 0=NO.\n\nDo you need to recode numerical variables to categorical?\n\nSometimes categorical data will be recorded as 1, 2, 3 etc. when those numbers represent named categories.\n\nDo you need to create secondary variables such as an average across measures to create a score?\nAre the variable names user-friendly? Mixtures of CAPS and lower case, names with spaces or special characters should all be changed.\n\nSome of these answers will come only after you look at your data. This can be looking at the raw data itself but also looking at tables and charts generated from the data. Often when you try to create a plot or table you will encounter an error or something odd looking that will be the notification that something has to be adjusted.\nThe next sections go over a few of the common data management processes, but is not comprehensive, and may only show one method for cleaning. There are always different ways to accomplish tasks.\n\n1.3.1 Renaming variable names for sanity’s sake\n\nhead(names(depress_raw))\n\n[1] \"ID\"      \"SEX\"     \"AGE\"     \"MARITAL\" \"EDUCAT\"  \"EMPLOY\" \n\n\nPeeking at the names of the variables we note that they are all in upper case. If that is fine with you, awesome. I prefer to have everything lower case so that I don’t ever have to remember which are the capital letters. Here are two ways to accomplish this:\n\nbasejanitor\n\n\nA base R solution is to use tolower() to turn all variable names to lower case. This code is not run here because it would overwrite the variable names in the same data set (depress_raw). Keep the imported (aka. “raw”) data untouched, and then make a copy of the data once you start making changes.\n\nnames(depress_raw) &lt;- tolower(names(depress_raw))\n\n\n\nA highly recommended method is to use the clean_names() function from the janitor package. This will also remove any special characters, spaces and capital letters from your variable names.\n\ndepress &lt;- depress_raw %&gt;% janitor::clean_names()\n\nI am “staging” the data set at this point because i’m making a major change away from the ‘raw’ data. So i’m saving the changes to the variable names in a new data set called depress.\n\n\n\n\n\n\nNote the use of :: between the package name janitor and the function within that package clean_names. This is a shortcut that allows you to use a function from a specific package without loading the entire package. This can also reduce in function name conflicts that we’ll mention below.\n\n\n\n\n\n\n\n\n1.3.2 Identifying variable types\n\nbasetidyverse\n\n\nThe str function is short for structure. This shows you the variable names, what data types R thinks each variable are, and some of the raw data.\n\nstr(depress)\n\n'data.frame':   294 obs. of  37 variables:\n $ id      : int  1 2 3 4 5 6 7 8 9 10 ...\n $ sex     : int  2 1 2 2 2 1 2 1 2 1 ...\n $ age     : int  68 58 45 50 33 24 58 22 47 30 ...\n $ marital : int  5 3 2 3 4 2 2 1 2 2 ...\n $ educat  : int  2 4 3 3 3 3 2 3 3 2 ...\n $ employ  : int  4 1 1 3 1 1 5 1 4 1 ...\n $ income  : int  4 15 28 9 35 11 11 9 23 35 ...\n $ relig   : int  1 1 1 1 1 1 1 1 2 4 ...\n $ c1      : int  0 0 0 0 0 0 2 0 0 0 ...\n $ c2      : int  0 0 0 0 0 0 1 1 1 0 ...\n $ c3      : int  0 1 0 0 0 0 1 2 1 0 ...\n $ c4      : int  0 0 0 0 0 0 2 0 0 0 ...\n $ c5      : int  0 0 1 1 0 0 1 2 0 0 ...\n $ c6      : int  0 0 0 1 0 0 0 1 3 0 ...\n $ c7      : int  0 0 0 0 0 0 0 0 0 0 ...\n $ c8      : int  0 0 0 3 3 0 2 0 0 0 ...\n $ c9      : int  0 0 0 0 3 1 2 0 0 0 ...\n $ c10     : int  0 0 0 0 0 0 0 0 0 0 ...\n $ c11     : int  0 0 0 0 0 0 0 0 0 0 ...\n $ c12     : int  0 1 0 0 0 1 0 0 3 0 ...\n $ c13     : int  0 0 0 0 0 2 0 0 0 0 ...\n $ c14     : int  0 0 1 0 0 0 0 0 3 0 ...\n $ c15     : int  0 1 1 0 0 0 3 0 2 0 ...\n $ c16     : int  0 0 1 0 0 2 0 1 3 0 ...\n $ c17     : int  0 1 0 0 0 1 0 1 0 0 ...\n $ c18     : int  0 0 0 0 0 0 0 1 0 0 ...\n $ c19     : int  0 0 0 0 0 0 0 1 0 0 ...\n $ c20     : int  0 0 0 0 0 0 1 0 0 0 ...\n $ cesd    : int  0 4 4 5 6 7 15 10 16 0 ...\n $ cases   : int  0 0 0 0 0 0 0 0 1 0 ...\n $ drink   : int  2 1 1 2 1 1 2 2 1 1 ...\n $ health  : int  2 1 2 1 1 1 3 1 4 1 ...\n $ regdoc  : int  1 1 1 1 1 1 1 2 1 1 ...\n $ treat   : int  1 1 1 2 1 1 1 2 1 2 ...\n $ beddays : int  0 0 0 0 1 0 0 0 1 0 ...\n $ acuteill: int  0 0 0 0 1 1 1 1 0 0 ...\n $ chronill: int  1 1 0 1 0 1 1 0 1 0 ...\n\n\nTo check the data type of just one variable, you have two options:\n\nThe typeof function\n\n\ntypeof(depress$marital)\n\n[1] \"integer\"\n\n\n\nThe class function\n\n\nclass(depress$age)\n\n[1] \"integer\"\n\n\n\n\nA tidyverse alternative is glimpse()\n\nglimpse(depress)\n\nRows: 294\nColumns: 37\n$ id       &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ sex      &lt;int&gt; 2, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2…\n$ age      &lt;int&gt; 68, 58, 45, 50, 33, 24, 58, 22, 47, 30, 20, 57, 39, 61, 23, 2…\n$ marital  &lt;int&gt; 5, 3, 2, 3, 4, 2, 2, 1, 2, 2, 1, 2, 2, 5, 2, 1, 1, 4, 1, 5, 1…\n$ educat   &lt;int&gt; 2, 4, 3, 3, 3, 3, 2, 3, 3, 2, 2, 3, 2, 3, 3, 2, 4, 2, 6, 2, 3…\n$ employ   &lt;int&gt; 4, 1, 1, 3, 1, 1, 5, 1, 4, 1, 3, 2, 1, 4, 1, 1, 1, 3, 1, 4, 1…\n$ income   &lt;int&gt; 4, 15, 28, 9, 35, 11, 11, 9, 23, 35, 25, 24, 28, 13, 15, 6, 8…\n$ relig    &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 2, 4, 4, 1, 1, 1, 2, 1, 1, 1, 1, 4, 2…\n$ c1       &lt;int&gt; 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 1, 3, 1, 0, 0, 0…\n$ c2       &lt;int&gt; 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 3, 0, 0, 0, 0…\n$ c3       &lt;int&gt; 0, 1, 0, 0, 0, 0, 1, 2, 1, 0, 1, 0, 0, 0, 0, 2, 2, 1, 0, 0, 0…\n$ c4       &lt;int&gt; 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0…\n$ c5       &lt;int&gt; 0, 0, 1, 1, 0, 0, 1, 2, 0, 0, 1, 0, 0, 1, 0, 1, 3, 1, 0, 0, 0…\n$ c6       &lt;int&gt; 0, 0, 0, 1, 0, 0, 0, 1, 3, 0, 2, 0, 0, 0, 0, 1, 3, 0, 0, 0, 0…\n$ c7       &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0…\n$ c8       &lt;int&gt; 0, 0, 0, 3, 3, 0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0, 3, 0…\n$ c9       &lt;int&gt; 0, 0, 0, 0, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 0, 0, 0, 3…\n$ c10      &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0…\n$ c11      &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0…\n$ c12      &lt;int&gt; 0, 1, 0, 0, 0, 1, 0, 0, 3, 0, 1, 0, 1, 1, 0, 1, 2, 0, 0, 0, 0…\n$ c13      &lt;int&gt; 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0…\n$ c14      &lt;int&gt; 0, 0, 1, 0, 0, 0, 0, 0, 3, 0, 2, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0…\n$ c15      &lt;int&gt; 0, 1, 1, 0, 0, 0, 3, 0, 2, 0, 1, 2, 0, 0, 1, 1, 3, 0, 0, 0, 0…\n$ c16      &lt;int&gt; 0, 0, 1, 0, 0, 2, 0, 1, 3, 0, 1, 2, 1, 0, 3, 1, 2, 0, 0, 0, 0…\n$ c17      &lt;int&gt; 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0…\n$ c18      &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0…\n$ c19      &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0…\n$ c20      &lt;int&gt; 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 3, 0, 0, 0, 0…\n$ cesd     &lt;int&gt; 0, 4, 4, 5, 6, 7, 15, 10, 16, 0, 18, 4, 8, 4, 8, 21, 42, 6, 0…\n$ cases    &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0…\n$ drink    &lt;int&gt; 2, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1…\n$ health   &lt;int&gt; 2, 1, 2, 1, 1, 1, 3, 1, 4, 1, 2, 2, 3, 1, 1, 3, 1, 3, 2, 2, 1…\n$ regdoc   &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1…\n$ treat    &lt;int&gt; 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1…\n$ beddays  &lt;int&gt; 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0…\n$ acuteill &lt;int&gt; 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0…\n$ chronill &lt;int&gt; 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1…\n\n\n\n\n\nRight away this tells me that R thinks all variables are numeric integers, not categorical variables. Many of these will have to be changed. We’ll get to that in a moment.\n\n\n1.3.3 Convert number to factor\nWhen variables have numerical levels it is necessary to ensure that the program knows it is a factor variable.\nThe following code uses the factor() function to take the marital status variable and convert it into a factor variable with specified labels that match the codebook.\n\ndepress$marital &lt;- factor(depress$marital, \n      labels = c(\"Never Married\", \"Married\", \"Divorced\", \"Separated\", \"Widowed\"))\n\nNote that I am not making a new variable here, but overwriting the same marital variable. If If it did not you will have to re-run the lread in the raw data set again since the variable marital was replaced.\nIt is important to confirm the recode worked. I do this by creating a two-way table between the variable as it exists on the raw data, and how it exists after this line of code. What we are looking for is that all values on the left/rows (original version) line up with what we want them to say on the right (new version), and that no missing data was created or destroyed.\n\ntable(depress_raw$MARITAL, depress$marital, useNA = \"always\")\n\n      \n       Never Married Married Divorced Separated Widowed &lt;NA&gt;\n  1               73       0        0         0       0    0\n  2                0     127        0         0       0    0\n  3                0       0       43         0       0    0\n  4                0       0        0        13       0    0\n  5                0       0        0         0      38    0\n  &lt;NA&gt;             0       0        0         0       0    0\n\n\n\n\n\n\n\n\nLearn more\n\n\n\nSee more examples on Math 130 Lesson 06\n\n\n\n\n1.3.4 Identifying outliers\nLet’s look at the age variable in the depression data set.\n\npar(mfrow=c(1,2))\nboxplot(depress$age)\nhist(depress$age)\n\n\n\n\n\n\n\n\nJust looking at the data graphically raises no red flags. The boxplot shows no outlying values and the histogram does not look wildly skewed. This is where knowledge about the data set is essential. The codebook does not provide a valid range for the data, but the description of the data starting on page 3 in the textbook clarifies that this data set is on adults. In the research world, this specifies 18 years or older.\nNow look back at the graphics. See anything odd? It appears as if the data go pretty far below 20, possibly below 18. Let’s check the numerical summary to get more details.\n\nsummary(depress$age)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   9.00   28.00   42.50   44.38   59.00   89.00 \n\n\nThe minimum value is a 9, which is outside the range of valid values for this variable. This is where you, as a statistician, data analyst or researcher goes back to the PI and asks for advice. Should this data be set to missing, or edited in a way that changes this data point into a valid piece of data?\nAnother example\n\nboxplot(depress$income)\n\n\n\n\n\n\n\n\nWhile there is at least one potential outliers (denoted by the dots), there are none so far away from the rest of the group (or at values such as 99 or -99 that may indicate missing codes) that we need to be concerned about.\n\n\n1.3.5 Changing numeric values\nWhat you didn’t know until now, is that for demonstration purposes I went in and changed a 19 to a 9. So the correct thing to do here is to change that 9, back to a 19.\n\nifelse()direct assign\n\n\nThis is a very good use of the ifelse() function.\n\ndepress$age &lt;- ifelse(depress$age==9, 19, depress$age)\n\nThe logical statement is depress$age9. Wherever this is true, replace the value of depress$age with 19, and wherever this is false keep the value of depress$age unchanged (by “replacing” the new value with the same old value).\n\n\nAlternatively, you can change that one value using bracket notation. Here you are specifying that you only want the rows where age==9, and directly assign a value of 19 to those rows.\n\ndepress$age[depress$age==9] &lt;- 19\n\nConfirm the recode.\n\nsummary(depress$age)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  18.00   28.00   42.50   44.41   59.00   89.00 \n\n\nLooks like it worked.\n\n\n\n\n\n1.3.6 Creating secondary variables\n\n\n1.3.7 Create a binary indicator\nFor analysis purposes you may need to have a numeric binary indicator (0/1) of a variable.\n\ntable(addhealth$eversmoke_c)\n\n\nNon Smoker     Smoker \n      1773       3324 \n\naddhealth$smoker &lt;- ifelse(addhealth$eversmoke_c==\"Smoker\", 1, 0)\ntable(addhealth$eversmoke_c, addhealth$smoker, useNA=\"always\")\n\n            \n                0    1 &lt;NA&gt;\n  Non Smoker 1773    0    0\n  Smoker        0 3324    0\n  &lt;NA&gt;          0    0 1407\n\n\n\n\n\n\n\n\nLearn more\n\n\n\nSee Math 130 lesson 05 for now.",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Workflow and Data Cleaning</span>"
    ]
  },
  {
    "objectID": "dataprep.html#wrangling-factors",
    "href": "dataprep.html#wrangling-factors",
    "title": "1  Workflow and Data Cleaning",
    "section": "1.4 Wrangling factors",
    "text": "1.4 Wrangling factors\n\n\n\n\n\n\nLearn more\n\n\n\nFor more help on renaming, releveling, lumping, and removing levels see Math 130 lesson 06 for now. Also the forcats vignette.\n\n\n\n1.4.1 Collapsing categorical variables into fewer categories\nFor unbiased and accurate results of a statistical analysis, sufficient data has to be present. Often times once you start slicing and dicing the data to only look at certain groups, or if you are interested in the behavior of certain variables across levels of another variable, sometimes you start to run into small sample size problems.\nFor example, consider marital status again. There are only 13 people who report being separated. This could potentially be too small of a group size for valid statistical analysis. One way to deal with insufficient data within a certain category is to collapse categories.\n\n\n\n\n\n\nNote\n\n\n\nNote I am choosing to ‘stage’ my data here. So if I mess something up in this section, I don’t have to re-read in the raw data again or go back and rerun ALL the code, but just up until depress1 is created.\n\n\n\ndepress1 &lt;- depress\n\n\ncarforcats\n\n\nThe following example code uses the recode() function from the car package to create a new variable that I am calling marital2 that combines the Divorced and Separated levels.\n\ndepress1$marital &lt;- car::recode(depress1$marital, \"'Divorced' = 'Sep/Div'; 'Separated' = 'Sep/Div'\")\n\n\n\n\n\n\n\nNote the use of the :: again. Here it is even more important to use this shortcut because the specific recode function we want to use comes from the car package. There are other packages (probably dplyr) that also have a function called recode. So here I use :: as a way to be SUPER EXPLICIT on which function I want to use.\n\n\n\nAlways confirm your recodes. Check a table of the old variable (depress$marital) against the new one depress1$marital.\n\ntable(depress$marital, depress1$marital , useNA=\"always\")\n\n               \n                Married Never Married Sep/Div Widowed &lt;NA&gt;\n  Never Married       0            73       0       0    0\n  Married           127             0       0       0    0\n  Divorced            0             0      43       0    0\n  Separated           0             0      13       0    0\n  Widowed             0             0       0      38    0\n  &lt;NA&gt;                0             0       0       0    0\n\n\nThis confirms that records where depress$marital (rows) is Divorced or Separated have the value of Sep/Div for depress1$marital (columns). And that no missing data crept up in the process.\n\n\nThe fct_collapse() function from the forcats package can do the same process, without worrying about a package/function conflict.\n\ndepress1$marital &lt;- fct_collapse(depress$marital, SepDiv = c(\"Divorced\", \"Separated\"))\n\nAgain, you should always confirm your recodes. Check a table of the old variable (depress$marital) against the new one depress1$marital\n\ntable(depress$marital, depress1$marital , useNA=\"always\")\n\n               \n                Never Married Married SepDiv Widowed &lt;NA&gt;\n  Never Married            73       0      0       0    0\n  Married                   0     127      0       0    0\n  Divorced                  0       0     43       0    0\n  Separated                 0       0     13       0    0\n  Widowed                   0       0      0      38    0\n  &lt;NA&gt;                      0       0      0       0    0\n\n\n\n\n\n\n\n1.4.2 Binning a continuous variable into categorical ranges.\nWe can use the cut function to create a new variable that categorizes income into the following ranges: &lt;30, [30, 40), [40,50), [50, 60), 60+.\n\ndepress1$inc_cut &lt;- cut(depress1$income, breaks=c(0, 30,40,50,60, 100))\ntable(depress1$inc_cut)\n\n\n  (0,30]  (30,40]  (40,50]  (50,60] (60,100] \n     231       28       16        9       10 \n\n\n\n\n1.4.3 Dichotomizing a measure into 2 categories\nDichotomous variables tend to be binary indicator variables where a code of 1 is the level you’re interested in.\n\nExample 1Example 2\n\n\n\n\n\n\n\n\n\nSwitch example from binary gender to different characteristic\n\n\n\n\nIn this study gender is coded as 2=Female and 1=Male. (This data was collected in the ’70s, and so only two genders were provided as options). We want to convert this be a binary indicator of female, where 1=Female and 0=Male.\n\ndepress1$female &lt;- depress1$sex -1 \ntable(depress1$female)\n\n\n  0   1 \n111 183 \n\n\n0/1 binary coding is mandatory for many analyses. One simple reason is that now you can calculate the mean and interpret it as a proportion.\n\nmean(depress1$female)\n\n[1] 0.622449\n\n\n62% of individuals in this data set are female.\n\n\nSometimes the data is recorded as 1/2 (Yes/No), so just subtracting from 1 doesn’t create a positive indicator of the variable. For example, drink=1 if they are a regular drinker, and drink=2 if they are not. We want not drinking to be coded as 0, not 2.\n\ntable(depress_raw$DRINK)\n\n\n  1   2 \n234  60 \n\n\nThe ifelse() function says that if depress$drink has a value equal to 2 ==2, then change the value to 0. Otherwise leave it alone.\n\ndepress1$drink &lt;- ifelse(depress1$drink==2, 0, depress1$drink)\ntable(depress1$drink, depress$drink)\n\n   \n      1   2\n  0   0  60\n  1 234   0",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Workflow and Data Cleaning</span>"
    ]
  },
  {
    "objectID": "dataprep.html#combining-values-across-multiple-variables",
    "href": "dataprep.html#combining-values-across-multiple-variables",
    "title": "1  Workflow and Data Cleaning",
    "section": "1.5 Combining values across multiple variables",
    "text": "1.5 Combining values across multiple variables\nLet’s stage the data again for this section.\n\ndepress2 &lt;- depress1\n\n\n1.5.1 Row-wise sum or average\nThe Center for Epidemiological Studies Depression Scale (CESD) is series of questions asked to a person to measure their level of depression. CESD is calculated as the sum of all 20 component variables, and is already on this data set. Let’s create a new variable named sleep as subscale for sleep quality by adding up question numbers 5, 11, and 19.\nReference: CESD-R\n\nBasemutate + manual\n\n\n\ndepress2$sleep &lt;- depress2$c5 + depress2$c11 + depress2$c19\n\nI’ll confirm it works by looking at a few rows and making sure they all add up.\n\nhead(depress2[c('c5', 'c11', 'c19', 'sleep')])\n\n  c5 c11 c19 sleep\n1  0   0   0     0\n2  0   0   0     0\n3  1   0   0     1\n4  1   0   0     1\n5  0   0   0     0\n6  0   0   0     0\n\n\n\n\n\ndepress2 &lt;- depress %&gt;% mutate(sleep = c5+c11+c19)\nhead(depress2[c('c5', 'c11', 'c19', 'sleep')])\n\n  c5 c11 c19 sleep\n1  0   0   0     0\n2  0   0   0     0\n3  1   0   0     1\n4  1   0   0     1\n5  0   0   0     0\n6  0   0   0     0",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Workflow and Data Cleaning</span>"
    ]
  },
  {
    "objectID": "dataprep.html#assessing-normality",
    "href": "dataprep.html#assessing-normality",
    "title": "1  Workflow and Data Cleaning",
    "section": "1.6 Assessing Normality",
    "text": "1.6 Assessing Normality\n\n1.6.1 Histogram and density plots\n\nhist(depress2$income, prob=TRUE, xlab=\"Annual income (in thousands)\", \n     main=\"Histogram and Density curve of Income\", ylab=\"\")\nlines(density(depress2$income), col=\"blue\")\n\n\n\n\n\n\n\nsummary(depress2$income)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   2.00    9.00   15.00   20.57   28.00   65.00 \n\n\nThe distribution of annual income is slightly skewed right with a mean of $20.5k per year and a median of $15k per year income. The range of values goes from $2k to $65k. Reported income above $40k appear to have been rounded to the nearest $10k, because there are noticeable peaks at $40k, $50k, and $60k.\n\n\n1.6.2 Q-Q plot\nAnother common method of assessing normality is to create a normal probability (or normal quantile) plot.\n\nqqnorm(depress2$income);qqline(depress2$income, col=\"red\")\n\n\n\n\n\n\n\n\nThe points on the normal probability plot do not follow the red reference line very well. The dots show a more curved, or U shaped form rather than following a linear line. This is another indication that the data is skewed and a transformation for normality should be created.\n\n\n1.6.3 Transformations\nAs a demonstration of transformations that can be used to shift a distribution more towards a normal shape, here we create three new variables: log10inc as the log base 10 of Income, loginc as the natural log of Income, and xincome which is equal to the negative of one divided by the cubic root of income.\n\nlog10inc &lt;- log10(depress2$income)\nloginc   &lt;- log(depress2$income)\nxincome  &lt;- -1/(depress2$income)^(-1/3)\n\nCreate a single plot that display normal probability plots for the original, and each of the three transformations of income. Use the base graphics grid organizer par(mfrow=c(r,c)) where r is the number of rows and c is the number of columns. Which transformation does a better job of normalizing the distribution of Income?\n\npar(mfrow=c(2,2)) # Try (4,1) and (1,4) to see how this works. \nqqnorm(depress2$income, main=\"Income\"); qqline(depress2$income,col=\"blue\")\nqqnorm(log10inc, main=\"Log 10\"); qqline(log10inc, col=\"blue\")\nqqnorm(loginc, main = \"Natural Log\"); qqline(loginc, col=\"blue\")\nqqnorm(xincome, main=\"-1/cuberoot(income)\"); qqline(xincome, col=\"blue\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTo transform or not to transform\n\n\n\nIn general, transformations are more effective when the the standard deviation is large relative to the mean. One rule of thumb is if the sd/mean ratio is less than 1/4, a transformation may not be necessary.\n\nsd(depress2$income) / mean(depress2$income)\n\n[1] 0.743147\n\n\nAlternatively Hoaglin, Mosteller and Tukey (1985) showed that if the largest observation divided by the smallest observation is over 2, then the data may not be sufficiently variable for the transformation to be decisive.\n\nmax(depress2$income) / (min(depress2$income)+.1)\n\n[1] 30.95238\n\n\nNote that these rules are not meaningful for data without a natural zero.",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Workflow and Data Cleaning</span>"
    ]
  },
  {
    "objectID": "dataprep.html#missing-data",
    "href": "dataprep.html#missing-data",
    "title": "1  Workflow and Data Cleaning",
    "section": "1.7 Missing data",
    "text": "1.7 Missing data\n\n1.7.1 Identifying missing data\nIn Excel, missing data can show up as a blank cell. R displays missing data as NA values.\nWhy would data be missing? Other than the obvious data entry errors, tech glitches or just non-cooperative plants or people, sometimes values are out of range and you would rather delete them than change their value (data edit).\n\nCategoricalContinuous\n\n\nLets look at the religion variable in the depression data set.\n\ntable(depress2$relig, useNA=\"always\")\n\n\n   1    2    3    4    6 &lt;NA&gt; \n 155   51   30   56    2    0 \n\n\nLooking at the codebook, there is no category 6 for religion. Let’s change all values to NA.\n\ndepress2$relig[depress2$relig==6] &lt;- NA\n\nThis code says take all rows where relig is equal to 6, and change them to NA.\nConfirm recode.\n\ntable(depress2$relig, useNA=\"always\")\n\n\n   1    2    3    4 &lt;NA&gt; \n 155   51   30   56    2 \n\n\nNotice the use of the useNA=\"always\" argument. If we just looked at the base table without this argument, we would have never known there was missing data!\n\ntable(depress2$relig)\n\n\n  1   2   3   4 \n155  51  30  56 \n\n\n\n\nWhat about continuous variables? Well there happens to be no other missing data in this data set, so let’s make up a set of 7 data points stored in a variable named y.\n\ny &lt;- c(1, 2, 3, NA, 4, NA, 6)\ny\n\n[1]  1  2  3 NA  4 NA  6\n\n\nThe #1 way to identify missing data in a continuous variable is by looking at the summary() values.\n\nmean(y)\n\n[1] NA\n\nsummary(y)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n    1.0     2.0     3.0     3.2     4.0     6.0       2 \n\nmean(y, na.rm=TRUE)\n\n[1] 3.2\n\n\nIn R, any arithmetic function (like addition, multiplication) on missing data results in a missing value. The na.rm=TRUE toggle tells R to calculate the complete case mean. This is a biased measure of the mean, but missing data is a topic worthy of it’s own course and is introduced in ?sec-classification.",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Workflow and Data Cleaning</span>"
    ]
  },
  {
    "objectID": "dataprep.html#export-and-save",
    "href": "dataprep.html#export-and-save",
    "title": "1  Workflow and Data Cleaning",
    "section": "1.8 Export and save",
    "text": "1.8 Export and save\nYou’ve just made a ton of changes!\n\nSave or export the new data set to your computer.\nEdit the codebook to reflect the changes that you made.\nKeep the data, codebook and data management file in the same folder.\n\n\ndepress_clean &lt;- depress2\n\n# Save as a .Rdata file for later use in R\nsave(depress_clean, file = \"data/depress_clean.Rdata\") \n\nNow every time you run your data cleaning script file, it will make all the changes and save/overwrite the depress_clean.Rdata data file. This ensures that any analysis script that uses this data has the most up to date variables.\nWe can use dplyr::select to select and save individual variables without storing the entire data frame.\n\nout &lt;- depress %&gt;% select(list of variables)\nsave(out, \"data/var1.Rdata\")\n\n\n\n\n\n\n\nLearn more\n\n\n\nNeed to export to a different software program? Look into the haven package.",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Workflow and Data Cleaning</span>"
    ]
  },
  {
    "objectID": "dataprep.html#wide-long",
    "href": "dataprep.html#wide-long",
    "title": "1  Workflow and Data Cleaning",
    "section": "1.9 Wide vs. long data",
    "text": "1.9 Wide vs. long data\nThe data on Lung function originally was recorded in wide format, with separate variables for mother’s and father’s FEV1 score (MFEV1 and FFEV). In this format, the data is one record per family.\n\nfev &lt;- read.delim(here::here(\"data/Lung.txt\"), sep=\"\\t\", header=TRUE)\nhead(fev[,1:15])\n\n  ID AREA FSEX FAGE FHEIGHT FWEIGHT FFVC FFEV1 MSEX MAGE MHEIGHT MWEIGHT MFVC\n1  1    1    1   53      61     161  391  3.23    2   43      62     136  370\n2  2    1    1   40      72     198  441  3.95    2   38      66     160  411\n3  3    1    1   26      69     210  445  3.47    2   27      59     114  309\n4  4    1    1   34      68     187  433  3.74    2   36      58     123  265\n5  5    1    1   46      61     121  354  2.90    2   39      62     128  245\n6  6    1    1   44      72     153  610  4.91    2   36      66     125  349\n  MFEV1 OCSEX\n1  3.31     2\n2  3.47     1\n3  2.65     1\n4  2.06     2\n5  2.33     1\n6  3.06     1\n\n\nTo analyze the effect of gender on FEV, the data need to be in long format, with a single variable for fev and a separate variable for gender. The following code chunk demonstrates one method of combining data on height, gender, age and FEV1 for both males and females.\n\nfev2 &lt;- data.frame(gender = c(fev$FSEX, fev$MSEX), \n                   rev = c(fev$FFEV1, fev$MFEV1), \n                   ht = c(fev$FHEIGHT, fev$MHEIGHT), \n                   age = c(fev$FAGE, fev$MAGE))\nfev2$gender &lt;- factor(fev2$gender, labels=c(\"M\", \"F\"))\nhead(fev2)  \n\n  gender  rev ht age\n1      M 3.23 61  53\n2      M 3.95 72  40\n3      M 3.47 69  26\n4      M 3.74 68  34\n5      M 2.90 61  46\n6      M 4.91 72  44\n\n\nNearly all analysis procedures and most graphing procedures require the data to be in long format. There are several R packages that can help with this including reshape2 and tidyr.\n\n\n\n\n\n\nLearn more\n\n\n\nRead more on tidy data in R for Data Science 2e, or look into the mice package vignettes.\n\n\n\n1.9.1 Model predictions\nSituation: You want to add model predictions to the data set, but you have missing data that was automatically dropped prior to analysis.\n\n\n\n\n\n\nWarning\n\n\n\n\nAdd methods for dealing with this, once added reference ?sec-classification\n\n\n\nR objects created by methods such as lm and glm will store the data used in the model in the model object itself in model$data.\n\n\n1.9.2 Factor analysis and principal components\nIf your original data had missing values, here are two methods to get the PC’s / factor scores for available data back onto the data set.\n\nMethod 1Method 2\n\n\nCreate an ID column and merge new variables onto original data. (add columns)\n\nIf no ID column exists, create one on the original dataset id = 1:NROW(data)\nUse select() to extract the ID and all variables used in the factor analysis, then do a na.omit() to drop rows with any missing data. Save this as a new complete case data set.\nConduct PCA / Factor analysis on this new complete case data set (MINUS THE ID). Extract the PCs or factor scores.\nUse bind_cols() to add the ID variable to the data containing factor scores.\nThen left_join(original_data, factor_score_data) the factor scores back to the original data, using the ID variable as the joining key.\n\n\n\nSplit the data, analyze one part then concatenate back together. (add rows)\n\nUse the complete.cases() function to create a boolean vector for if each row is complete\nSplit the data into complete and incomplete.\nDo the analysis on the complete rows, extracting the PC’s/Factors\nAdd the PC/Factor data onto the complete rows using bind_cols\nThen bind_rows the two parts back together.\n\n\ncc.idx &lt;- hiv %&gt;% select(starts_with(\"pb\")) %&gt;% complete.cases() # 1\n\ncomplete.rows &lt;- hiv[cc.idx,] #2\nincomplete.rows &lt;- hiv[!cc.idx,]\n\npc.scores &lt;- princomp(pb)$scores #3 \n\ncomplete.add.pc &lt;- bind_cols(complete.rows, pc.scores) #4\n\nhiv.with.pcs &lt;- bind_rows(complete.add.pc, incomplete.rows) #5",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Workflow and Data Cleaning</span>"
    ]
  },
  {
    "objectID": "data_viz.html",
    "href": "data_viz.html",
    "title": "2  Visualizing Data",
    "section": "",
    "text": "2.1 Choosing your audience\nThe level of detail you put into your graphs/tables will depend on who the graph/table is for. In general, you will be visualizing data for three audience types: yourself and/or your data management team, an internal audience (other specialties within your organization, research coordinators), and external, professional audiences. The tabs below describe the three audience types and show an example graph for each.\nWho is your audience?",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualizing Data</span>"
    ]
  },
  {
    "objectID": "data_viz.html#choosing-your-audience",
    "href": "data_viz.html#choosing-your-audience",
    "title": "2  Visualizing Data",
    "section": "",
    "text": "YourselfInternal AudienceProfessional\n\n\nGraphs/tables for yourself and/or your working team can be “quick and dirty.” These graphs are for getting a quick look at the data and are meant for people who are already familiar with the data.\n\n\nShow the code\nplot_frq(pen$island)\n\n\n\n\n\n\n\n\n\n\n\nWhen presenting for an audience with some familiarity with the project and the data analysis process, your graphs don’t have to be completely perfect, but they should be fairly polished and be understandable. A good rule of thumb for these graphs is if they were to end up being published as-is without your knowledge, you wouldn’t be completely embarrassed to see them in print.\n\n\nShow the code\nplot_frq(pen$island, title = \"Count of Penguins by Island\") +\n        xlab(\"Island\") +\n        theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nProfessional quality graphs and tables have the highest amount of detail and take the most amount of time to make. They should be able to be interpreted by people not familiar with the project or data analysis, even without reading the rest of the report.\n\n\nShow the code\nplot_frq(pen$island, title = \"Count of Penguins by Island\") +\n          labs(subtitle = \"Includes penguins of Adelie, Gentoo, and Chinstrap species\") +\n          xlab(\"Island\") +\n          ylab(\"Penguin Count\") + \n          theme_minimal()",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualizing Data</span>"
    ]
  },
  {
    "objectID": "data_viz.html#the-data",
    "href": "data_viz.html#the-data",
    "title": "2  Visualizing Data",
    "section": "2.2 The Data",
    "text": "2.2 The Data\nWe will use the penguins dataset that comes with the palmerpenguins package. This dataset contains size measurements for three penguin species observed on three islands in the Palmer Archipelago, Antarctica. Review ?penguins to learn about the variables we will be using.\n\npen &lt;- palmerpenguins::penguins\n\n\n\n\n\n\n\n\n[RAD] write a paragraph here about how this section is organized.",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualizing Data</span>"
    ]
  },
  {
    "objectID": "data_viz.html#one-categorical-variable",
    "href": "data_viz.html#one-categorical-variable",
    "title": "2  Visualizing Data",
    "section": "2.3 One Categorical Variable",
    "text": "2.3 One Categorical Variable\nBoth Nominal and Ordinal data types can be visualized using the same methods: tables, barcharts and pie charts.\n\n2.3.1 Tables\nFrequency and proportion (relative frequency) tables are the most common way to get summary statistics of a categorical variable.\n\nbasegtsummary\n\n\nThe table() function produces a frequency table, where each entry represents the number of records in the data set holding the corresponding labeled value.\n\ntable(pen$species)\n\n\n   Adelie Chinstrap    Gentoo \n      152        68       124 \n\n\nThere are 152 Adelie penguins, 68 Chinstrap penguins, and 124 Gentoo penguins in this dataset.\n\n\n\n\n\n\n\n\n\nRobin add text here.\n\nbrief explanation of how it works. Defaults to creating a summary table of the entire data set, so you have to pre-select out only the variables you want to get a summary of. Direct link to function tbl_summary\n\n\n\n\npen |&gt; select(species) |&gt; tbl_summary()\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN = 3441\n\n\n\n\nspecies\n\n\n\n\n    Adelie\n152 (44%)\n\n\n    Chinstrap\n68 (20%)\n\n\n    Gentoo\n124 (36%)\n\n\n\n1 n (%)\n\n\n\n\n\n\n\npen |&gt; select(species, island) |&gt; tbl_summary()\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nN = 3441\n\n\n\n\nspecies\n\n\n\n\n    Adelie\n152 (44%)\n\n\n    Chinstrap\n68 (20%)\n\n\n    Gentoo\n124 (36%)\n\n\nisland\n\n\n\n\n    Biscoe\n168 (49%)\n\n\n    Dream\n124 (36%)\n\n\n    Torgersen\n52 (15%)\n\n\n\n1 n (%)\n\n\n\n\n\n\n\n\nThis can be advantageous if you want to have a single table showing the frequency distribution of multiple variables.\n\n\n\n\n\n2.3.2 Frequency Barcharts / Barplots\n\n\n\n\n\n\n\nadjust explanatory text here\n\n\n\n\nA Barchart or barplot takes these frequencies, and draws bars along the X-axis where the height of the bars is determined by the frequencies seen in the table.\n\nbaseggplotsjPlot\n\n\nTo create a barplot/barchart in base graphics requires the data to be in summarized in a table form first. Then the result of the table is plotted. The first argument is the table to be plotted, the main argument controls the title.\n\nps &lt;- table(pen$species)\nbarplot(ps, main=\"Barchart using base graphics\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnote yaxis direction and no labels at top of bar\n\n\n\n\n\n\nThe geometry needed to draw a barchart in ggplot is geom_bar().\n\nggplot(pen, aes(x=species)) + geom_bar()\n\n\n\n\n\n\n\n\nAdding Annotation\nThe biggest addition to increase the readability of a barchart is to add the frequencies on top of the bars.\n\nggplot(pen, aes(x=species)) + theme_bw() + \n    geom_bar(aes(y = ..count..)) + ggtitle(\"Frequency of penguins by species\") + \n    geom_text(aes(y=..count.. + 10, label=..count..), stat='count', size = 5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexplain why this is the current best option\n\n\n\n\n\nplot_frq(pen, species,\n         title = \"Count of penguins by species\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.3.3 Proportion Barcharts\n\nggplotbasesjplot\n\n\nOften you don’t want to compare counts but percents. To accomplish this, we have to aggregate the data to calculate the proportions first, then plot the aggregated data using geom_col to create the columns.\n\nspec.props &lt;- data.frame(prop.table(table(pen$species)))\nspec.props # what does this data look like? \n\n       Var1      Freq\n1    Adelie 0.4418605\n2 Chinstrap 0.1976744\n3    Gentoo 0.3604651\n\nggplot(spec.props, aes(x=Var1, y=Freq)) + geom_col() + \n  ylab(\"Proportion\") + xlab(\"Species\") + \n  ggtitle(\"Proportion of penguins by species\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncreate a ‘base’ tab, but with only space for robin to write\n\n\n\n\n\n\nThis is the same barchart generated by the frequency example, with proportion shown as a percentage below each species’ count.\n\nplot_frq(pen, species,\n         title = \"Count of penguins by species\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.3.4 Other\n\n\n\n\n\n\n\nRAD add some intro text here.\n\n\n\n\n\nCleveland Dot PlotsPie ChartWaffle Chart\n\n\nAnother way to visualize categorical data that takes up less ink than bars is a Cleveland dot plot. Here again we are plotting summary data instead of the raw data. This uses the geom_segment that draws the lines from x=0 to the value of the proportion (named Freq because of the way data.frame works).\n\nggplot(spec.props, aes(x=Freq, y=Var1)) +  \n  geom_point(size = 3) + xlab(\"Proportion of penguins\") + \n  theme_bw() + ylab(\"Species\") +\n  geom_segment(aes(x=0, xend=Freq, y=Var1, yend=Var1), color='grey50')\n\n\n\n\n\n\n\n\n\n\nJust like barplot(), pie() takes a table object as it’s argument.\nbase\n\nps &lt;- table(pen$species)\npie(ps)\n\n\n\n\n\n\n\n\nPie charts are my least favorite plotting type. Human eyeballs can’t distinguish between angles as well as we can with heights. A mandatory piece needed to make the wedges readable is to add the percentages of each wedge.\n\npie(ps, labels = paste0(names(ps), ' (', prop.table(ps)*100, \"%)\"))\n\n\n\n\n\n\n\n\nggplot\nAnd here I thought pie charts couldn’t get worse… I’m not a fan at all of the ggplot version. So i’m not even going to show it. STHDA has a great tutorial that does show you how to make one.\nHowever – Never say never. Storytelling with data has a blog post with an example of a good use of pie charts.\n\n\nThis type of chart is not natively found in the ggplot2 package, but its own waffle package. These are great for infographics.\n\nwaffle(ps/10, rows=5, size=0.5, \n       title=\"Species of penguins\", \n       xlab=\"1 square == 10 penguins\")",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualizing Data</span>"
    ]
  },
  {
    "objectID": "data_viz.html#one-continuous-variable",
    "href": "data_viz.html#one-continuous-variable",
    "title": "2  Visualizing Data",
    "section": "2.4 One Continuous Variable",
    "text": "2.4 One Continuous Variable\nHere we can look at the bill length and depth, flipper length, and body mass of the penguins.\n\n2.4.1 Dotplot\n\n\n\n\n\n\n\nRAD change this to an introduction/motivating example instead of describing a plot type.\n\n\n\n\n\nplot(pen$bill_length_mm)\n\n\n\n\n\n\n\n\nThe base function plot() creates a dotplot for a continuous variable. The value of the variable is plotted on the y axis, and the index, or row number, is plotted on the x axis. This gives you a nice, quick way to see the values of the data.\nOften you are not interested in the individual values of each data point, but the distribution of the data. In other words, where is the majority of the data? Does it look symmetric around some central point? Around what values do the bulk of the data lie?\n\n\n2.4.2 Histograms\nRather than showing the value of each observation, we prefer to think of the value as belonging to a bin. The height of the bars in a histogram display the frequency of values that fall into those of those bins. For example if we cut the bill length distribution into 7 bins of equal width, the frequency table would look like this:\n\ntable(cut(pen$bill_length_mm, 7))\n\n\n  (32.1,36]     (36,40]   (40,43.9] (43.9,47.8] (47.8,51.7] (51.7,55.7] \n         26          74          67          81          75          15 \n(55.7,59.6] \n          4 \n\n\nIn a histogram, the binned counts are plotted as bars into a histogram. Note that the x-axis is continuous, so the bars touch. This is unlike the barchart that has a categorical x-axis, and vertical bars that are separated.\n\nbaseggplotggpubr\n\n\nYou can make a histogram in base graphics super easy.\n\nhist(pen$bill_length_mm)\n\n\n\n\n\n\n\n\nAnd it doesn’t take too much to clean it up. Here you can specify the number of bins by specifying how many breaks should be made in the data (the number of breaks controls the number of bins, and bin width) and use col for the fill color.\n\nhist(pen$bill_length_mm, xlab=\"Bill length in mm\", main=\"Histogram of penguin bill lengths\", col=\"cyan\", breaks=20)\n\n\n\n\n\n\n\n\n\n\n\nggplot(pen, aes(x=bill_length_mm)) + geom_histogram(binwidth = 2.2)\n\n\n\n\n\n\n\n\nThe binwidth here is set by looking at the cut points above that were used to create 7 bins. Notice that darkgrey is the default fill color, but makes it hard to differentiate between the bars. So we’ll make the outline black using colour, and fill the bars with white.\n\nggplot(pen, aes(x=bill_length_mm)) + geom_histogram(colour=\"black\", fill=\"white\") + \n  ggtitle(\"Distribution of penguin bill lengths\")\n\n\n\n\n\n\n\n\nNote I did not specify the binwidth argument here. The size of the bins can hide features from your graph, the default value for ggplot2 is range/30 and usually is a good choice.\n\n\nThe ggpubr package is based on ggplot2, with simpler syntax for quickly generating polished graphs.\n\ngghistogram(pen, x = \"bill_length_mm\",\n            title = \"Distribution of penguin bill lengths\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.4.3 Density plots\nTo get a better idea of the true shape of the distribution we can “smooth” out the bins and create what’s called a density plot or curve. Notice that the shape of this distribution curve is much more… “wigglier” than the histogram may have implied.\n\nbaseggplot2ggpubr\n\n\n\n# plot(density(na.omit(pen$bill_length_mm))) \npen$bill_length_mm |&gt; na.omit() |&gt; density() |&gt; plot()\n\n\n\n\n\n\n\n\nAwesome title huh? (NOT)\n\n\n\n\n\n\n\ndiscuss why na.omit and nesting vs pipe example\n\nUsing na.omit() is dangerous! This will remove ALL rows with ANY missing data in it. Regardless if the missing values are contained in the variables you are interested in. The example below employs a trick/work around to not have NA values show in the output. We take the data set addhealth and then select the variables we want to plot, and then we use na.omit() to delete all rows with missing data. Then that is saved as a new, temporary data frame specifically named for this case (plot.bmi.smoke).\n\n\n\n\n\n\nggplot(pen, aes(x=bill_length_mm)) + geom_density()\n\n\n\n\n\n\n\n\n\n\n\nggdensity(pen, x = \"bill_length_mm\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.4.4 Histograms + density\nOften is is more helpful to have the density (or kernel density) plot on top of a histogram plot.\n\nbaseggplotggpubr\n\n\nSince the height of the bars in a histogram default to showing the frequency of records in the data set within that bin, we need to 1) scale the height so that it’s a relative frequency, and then use the lines() function to add a density() line on top.\n\nhist(pen$bill_length_mm, prob=TRUE)\nlines(density(na.omit(pen$bill_length_mm)), col=\"blue\")\n\n\n\n\n\n\n\n\n\n\nThe syntax starts the same, we’ll add a new geom, geom_density and color the line blue. Then we add the histogram geom using geom_histogram but must specify that the y axis should be on the density, not frequency, scale. Note that this has to go inside the aesthetic statement aes(). I’m also going to get rid of the fill by using NA so it doesn’t plot over the density line.\n\nggplot(pen, aes(x=bill_length_mm)) + geom_density(col=\"blue\") + \n  geom_histogram(aes(y=..density..), colour=\"black\", fill=NA)\n\n\n\n\n\n\n\n\n\n\n\ngghistogram(pen,\n            x = \"bill_length_mm\", \n            add_density = TRUE,\n            add.params = list(color=\"blue\"))\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.4.5 Boxplots\nAnother very common way to visualize the distribution of a continuous variable is using a boxplot. Boxplots are useful for quickly identifying where the bulk of your data lie. R specifically draws a “modified” boxplot where values that are considered outliers are plotted as dots.\n\nbaseggplotggpubr\n\n\n\nboxplot(pen$bill_length_mm)\n\n\n\n\n\n\n\n\nNotice that the only axis labeled is the y=axis. Like a dotplot the x axis, or “width”, of the boxplot is meaningless here. We can make the axis more readable by flipping the plot on it’s side.\n\nboxplot(pen$bill_length_mm, horizontal = TRUE, main=\"Distribution of penguin bill lengths\", xlab=\"Bill length in mm\")\n\n\n\n\n\n\n\n\nHorizontal is a bit easier to read in my opinion.\nAdding the mean\nA boxplot displays the median, so if we want to add more statistical detail and see any discrepancies between parameters we can add the mean as a point.\n\nboxplot(pen$bill_length_mm, horizontal = TRUE, main=\"Distribution of penguin bill lengths\", xlab=\"Bill length in mm\")\npoints(mean(na.omit(pen$bill_length_mm)), 1, col = \"red\", pch = 19)\n\n\n\n\n\n\n\n\n\n\nWhat about ggplot? ggplot doesn’t really like to do univariate boxplots. We can get around that by specifying that we want the box placed at a specific x value.\n\nggplot(pen, aes(x=1, y=bill_length_mm)) + geom_boxplot()\n\n\n\n\n\n\n\n\nTo flip it horizontal you may think to simply swap x and y? Good thinking. Of course it wouldn’t be that easy. So let’s just flip the whole darned plot on it’s coordinate axis.\n\nggplot(pen, aes(x=1, y=bill_length_mm)) + geom_boxplot() + coord_flip()\n\n\n\n\n\n\n\n\nAdding the mean\n\nggplot(pen, aes(x=1, y=bill_length_mm)) + geom_boxplot() + coord_flip() +\n  geom_hline(yintercept = mean(na.omit(pen$bill_length_mm)), color=\"red\", linetype=\"dashed\")\n\n\n\n\n\n\n\n\n\n\n\nggboxplot(pen, x=1, y=\"bill_length_mm\", \n          orientation = \"horizontal\",\n          main = \"Distribution of penguin bill lengths\",\n          ylab = \"Bill length in mm\")\n\n\n\n\n\n\n\n\nAdding the mean\n\nggboxplot(pen, x=1, y=\"bill_length_mm\", \n          orientation = \"horizontal\",\n          main = \"Distribution of penguin bill lengths\",\n          ylab = \"Bill length in mm\",\n          add = 'mean')\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.4.6 Violin plots\n\n\n\n\n\n\n\nbrief intro - usage, how they’re different from boxplots\n\n\n\n\n\nggplotggpubr\n\n\n\nggplot(pen, aes(x=1, y=bill_length_mm)) + geom_violin()\n\n\n\n\n\n\n\n\nAdding the mean\n\nggplot(pen, aes(x=1, y=bill_length_mm)) + geom_violin() +\n  geom_hline(yintercept = mean(na.omit(pen$bill_length_mm)), color=\"red\", linetype=\"dashed\")\n\n\n\n\n\n\n\n\n\n\n\nggviolin(pen, x=1, y=\"bill_length_mm\")\n\n\n\n\n\n\n\n\nAdding the mean\n\nggviolin(pen, x=1, y=\"bill_length_mm\",\n         add = 'mean')\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.4.7 Boxplot + violin plots\nOverlaying a boxplot and a violin plot serves a similar purpose to Histograms + Density plots.\n\nggplotggpubr\n\n\n\nggplot(pen, aes(x=1, y=bill_length_mm)) + geom_violin() + geom_boxplot()\n\n\n\n\n\n\n\n\nBetter appearance - different levels of transparency of the box and violin.\n\nggplot(pen, aes(x=1, y=bill_length_mm)) + xlab(\"\") + theme_bw() + \n              geom_violin(fill=\"blue\", alpha=.1) + \n              geom_boxplot(fill=\"blue\", alpha=.5, width=.2) + \n              theme(axis.title.x=element_blank(),\n              axis.text.x=element_blank(),\n              axis.ticks.x=element_blank())\n\n\n\n\n\n\n\n\nAdding the mean\n\nggplot(pen, aes(x=1, y=bill_length_mm)) + xlab(\"\") + theme_bw() + \n              geom_violin(fill=\"blue\", alpha=.1) + \n              geom_boxplot(fill=\"blue\", alpha=.5, width=.2) + \n              geom_hline(yintercept = mean(na.omit(pen$bill_length_mm)),\n                         color=\"red\", linetype=\"dashed\")\n\n\n\n\n\n\n\n\n\n\n\nggviolin(pen, x=1, y=\"bill_length_mm\", \n         alpha=.2, fill=\"blue\", \n         add = \"boxplot\", add.params = list(alpha=.4),\n         xlab=\"\") \n\n\n\n\n\n\n\n\nAdding the mean\n\nggviolin(pen, x=1, y=\"bill_length_mm\", \n         alpha=.2, fill=\"blue\", \n         add = c('boxplot', 'mean'),\n         add.params = list(alpha=.4),\n         xlab=\"\") \n\n\n\n\n\n\n\n\n\n\n\n\n\n2.4.8 Normal QQ plots\nThe last useful plot that we will do on a single continuous variable is to assess the normality of the distribution. Basically how close the data follows a normal distribution.\n\nbaseggplotggpubr\n\n\n\nqqnorm(pen$body_mass_g)\nqqline(pen$body_mass_g, col=\"red\")\n\n\n\n\n\n\n\n\nThe line I make red because it is a reference line. The closer the points are to following this line, the more “normal” the shape of the distribution is. Price has some pretty strong deviation away from that line. Below I have plotted what a normal distribution looks like as an example of a “perfect” fit.\n\nz &lt;- rnorm(1000)\nqqnorm(z)\nqqline(z, col=\"blue\")\n\n\n\n\n\n\n\n\n\n\nqq (or qnorm) plots specifically plot the data against a theoretical distribution. That means in the aes() aesthetic argument we don’t specify either x or y, but instead the sample= is the variable we want to plot.\n\nggplot(pen, aes(sample=body_mass_g)) + stat_qq()\n\n\n\n\n\n\n\n\n\n\n\nggqqplot(pen, x=\"body_mass_g\")",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualizing Data</span>"
    ]
  },
  {
    "objectID": "data_viz.html#categorical-v.-categorical",
    "href": "data_viz.html#categorical-v.-categorical",
    "title": "2  Visualizing Data",
    "section": "2.5 Categorical v. Categorical",
    "text": "2.5 Categorical v. Categorical\n\n2.5.1 Two-way tables\n\n\n\n\n\n\n\nintro to two way frequency and proportion tables\n\n\n\n\n\nFrequencyProportion\n\n\nCross-tabs, cross-tabulations and two-way tables (all the same thing, different names) can be created by using the table() function.\nThe frequency table is constructed using the table() function.\n\ntable(pen$island, pen$species)\n\n           \n            Adelie Chinstrap Gentoo\n  Biscoe        44         0    124\n  Dream         56        68      0\n  Torgersen     52         0      0\n\n\nThere are 44 Adelie penguins and 124 Gentoo penguins on Biscoe Island, 56 Adelie and 68 Chinstrap penguins on Dream Island, and 52 Adelie penguins on Torgersen Island.\n\n\nChoose your percentages depending on your research question. What are you wanting to compare?\nBest practices:\n\nExplanatory variable on the rows\nResponse variable on the columns\nCalculate row %’s as the % of the response for each explanatory group.\n\nHere are demonstrations of how the interpretation of the percents change depending on what the denominator is.\nCell proportions\nWrapping prop.table() around a table gives you the cell proportions.\n\nprop.table(table(pen$island, pen$species))\n\n           \n               Adelie Chinstrap    Gentoo\n  Biscoe    0.1279070 0.0000000 0.3604651\n  Dream     0.1627907 0.1976744 0.0000000\n  Torgersen 0.1511628 0.0000000 0.0000000\n\n\n12.8% of all penguins are Adelie penguins living on Biscoe Island, and 36% are Gentoo penguins living on Biscoe Island, so about 39% of all penguins in our data are living on Biscoe Island.\nRow proportions\nTo get the row proportions, you specify margin=1. The percentages now add up to 1 across the rows.\n\nround(prop.table(table(pen$island, pen$species), margin=1),3)\n\n           \n            Adelie Chinstrap Gentoo\n  Biscoe     0.262     0.000  0.738\n  Dream      0.452     0.548  0.000\n  Torgersen  1.000     0.000  0.000\n\n\n26.2% of penguins on Biscoe Island are from the Adelie species. The remaining 73.8% on the island are Gentoo penguins.\nColumn proportions\nTo get the column proportions, you specify margin=2. The percentages now add up to 1 down the columns.\n\nround(prop.table(table(pen$island, pen$species), margin=2),3)\n\n           \n            Adelie Chinstrap Gentoo\n  Biscoe     0.289     0.000  1.000\n  Dream      0.368     1.000  0.000\n  Torgersen  0.342     0.000  0.000\n\n\n0.289% of all Adelie penguins are on Biscoe Island. Chinstrap and Gentoo species are endemic to a single island, so 100% of their populations are on Dream and Torgersen Island, respectively.\n\n\n\n\n\n2.5.2 Grouped bar charts: stacked\nTo compare proportions of one categorical variable within the same level of another, we can use grouped barcharts.\n\nbaseggplot\n\n\nAs before, the object to be plotted needs to be the result of a table.\n\nis &lt;- table(pen$island, pen$species)\nbarplot(is)\n\n\n\n\n\n\n\n\n\n\nAgain plot the cut on the x axis, but then fill using the second categorical variable. This has the effect of visualizing the row percents from the table above, or the percent of species on each island.\n\nggplot(pen, aes(x=island, fill=species)) + geom_bar()\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.5.3 Grouped bar charts: side by side\nStacked bars can be difficult to interpret, and very difficult to compare values between groups. A side by side barchart is preferable. The beside=TRUE is what controls the placement of the bars.\n\nbaseggplot\n\n\n\nbarplot(is, main=\"quick side by side barchart using base graphics\", \n        beside=TRUE)\n\n\n\n\n\n\n\n\n\n\nAgain the default is a stacked barchart. So we just specify position=dodge to put the bars side by side.\n\nggplot(pen, aes(x=island, fill=species)) + geom_bar(position = \"dodge\")\n\n\n\n\n\n\n\n\nAnd look, an automatic legend. What if I wanted to better compare island population proportions within species? This is the column percentages. Just switch which variable is the x axis and which one is used to fill the colors!\n\nggplot(pen, aes(x=species, fill=island)) + geom_bar(position = \"dodge\")\n\n\n\n\n\n\n\n\nFor more than 2 colors I do not recommend choosing the colors yourself. I know little about color theory so I use the built-in color palettes. Here is a great cheatsheet about using color palettes.\nAnd this easy change is why we love ggplot2.\n\n\n\n\n\n2.5.4 Grouped bar charts with percentages\nNot as easy as one would hope, but the solution is to calculate the desired percentages first and then plot the summary data using either geom_bar(stat='identity') or geom_col().\n\ncalc.props &lt;- pen %&gt;% group_by(island, species) %&gt;%\n              summarise(count=n()) %&gt;%\n              mutate(pct=round(count/sum(count),3))\ncalc.props\n\n# A tibble: 5 × 4\n# Groups:   island [3]\n  island    species   count   pct\n  &lt;fct&gt;     &lt;fct&gt;     &lt;int&gt; &lt;dbl&gt;\n1 Biscoe    Adelie       44 0.262\n2 Biscoe    Gentoo      124 0.738\n3 Dream     Adelie       56 0.452\n4 Dream     Chinstrap    68 0.548\n5 Torgersen Adelie       52 1    \n\n\n\nggplotsjPlot\n\n\nSince we’re plotting summary data, the height of the bars is specified using y=pct.\n\nggplot(calc.props, aes(x=island, fill=species, y=pct)) +\n                  geom_col(position=\"dodge\") + theme_bw() \n\n\n\n\n\n\n\n\nNow set some options to the y axis using scale_y_continuous() to make the graph more accurate and readable. The labels=percent comes from the scales package.\n\nggplot(calc.props, aes(x=island, fill=species, y=pct)) +\n                  geom_col(position=\"dodge\") + theme_bw() +\n                  scale_y_continuous(limits=c(0,1), labels=percent)\n\n\n\n\n\n\n\n\n\n\nsjPlot does a very nice job of being able to cleanly show not only n’s but percents.\n\nplot_xtab(pen$island, pen$species, margin=\"row\", coord.flip = TRUE) \n\n\n\n\n\n\n\n\n\n\n\n\n\n2.5.5 Mosaic plots\nBut what if you want to know how two categorical variables are related and you don’t want to look at two different barplots? Mosaic plots are a way to visualize the proportions in a table. So here’s the two-way table we’ll be plotting.\n\ntable(pen$island, pen$species)\n\n           \n            Adelie Chinstrap Gentoo\n  Biscoe        44         0    124\n  Dream         56        68      0\n  Torgersen     52         0      0\n\n\nThe syntax for a mosaic plot uses model notation, which is basically y ~ x where the ~ is read as “twiddle” or “tilde”. It’s to the left of your 1 key.\n\nmosaicplot(island~species, data=pen)\n\n\n\n\n\n\n\n\nHelpful, ish. Here are two very useful options. In reverse obviousness, color applies shades of gray to one of the factor levels, and shade applies a color gradient scale to the cells in order of what is less than expected (red) to what is more than expected (blue) if these two factors were completely independent.\n\npar(mfrow=c(1,2)) # display the plots in 1 row and 2 columns\nmosaicplot(sex~species, data=pen, color=TRUE)\nmosaicplot(island~species, data=pen, shade=TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nswitch out old interpretation for penguins\n\nFor example, there are fewer ‘Very Good’ cut diamonds that are color ‘G’, and fewer ‘Premium’ cut diamonds that are color ‘H’. As you can see, knowing what your data means when trying to interpret what the plots are telling you is essential.\n\n\n\nThat’s about all the ways you can plot categorical variables.\nIf you are wondering why there was no 3D barcharts demonstrated see here, here, and here for other ways you can really screw up your visualization.",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualizing Data</span>"
    ]
  },
  {
    "objectID": "data_viz.html#continuous-v.-continuous",
    "href": "data_viz.html#continuous-v.-continuous",
    "title": "2  Visualizing Data",
    "section": "2.6 Continuous v. Continuous",
    "text": "2.6 Continuous v. Continuous\n\n2.6.1 Scatterplot\nThe most common method of visualizing the relationship between two continuous variables is by using a scatterplot.\n\nbaseggplot\n\n\nBack to the plot() command. Here we use model notation again, so it’s \\(y~x\\).\n\nplot(flipper_length_mm~body_mass_g, data=pen)\n\n\n\n\n\n\n\n\nLooks like for the most part as penguin body mass increases so does flipper length. That makes sense.\n\n\nWith ggplot we specify both the x and y variables, and add a point.\n\nggplot(pen, aes(x=body_mass_g, y=flipper_length_mm)) + geom_point()\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.6.2 Adding lines to the scatterplots\nTwo most common trend lines added to a scatterplots are the “best fit” straight line and the “lowess” smoother line.\n\nbaseggplot\n\n\nThe best fit line (in blue) gets added by using the abline() function wrapped around the linear model function lm(). Note it uses the same model notation syntax and the data= statement as the plot() function does. The lowess line is added using the lines() function, but the lowess() function itself doesn’t allow for the data= statement so we have to use $ sign notation.\n\nplot(flipper_length_mm~body_mass_g, data=pen)\nabline(lm(flipper_length_mm~body_mass_g, data=pen), col=\"blue\")\nlines(lowess(na.omit(pen$flipper_length_mm)~na.omit(pen$body_mass_g)),\n      col=\"red\")\n\n\n\n\n\n\n\n\n\n\nWith ggplot, we just add a geom_smooth() layer.\n\nggplot(pen, aes(x=body_mass_g, y=flipper_length_mm)) + geom_point() + geom_smooth() \n\n\n\n\n\n\n\n\nHere the point-wise confidence interval for this lowess line is shown in grey. If you want to turn the confidence interval off, use se=FALSE. Also notice that the smoothing geom uses a different function or window than the lowess function used in base graphics.\nHere it is again using the ggplot plotting function and adding another geom_smooth() layer for the lm (linear model) line in blue, and the lowess line (by not specifying a method) in red.\n\nggplot(pen, aes(x=body_mass_g, y=flipper_length_mm)) + geom_point() + \n  geom_smooth(se=FALSE, method=\"lm\", color=\"blue\") + \n  geom_smooth(se=FALSE, color=\"red\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.6.3 Line plots\nLine plots connect each dot with a straight line. This is most often done when measuring trends of the response as the value of x increases (such as a time series)\n\n\n\n\n\n\n\nswitch out example for time series\n\n\n\n\nWe saw earlier that body_mass_g and flipper_length_mm seemed possibly linear. Let see how the average flipper length changes with body mass.\n\nmm.per.g &lt;- pen %&gt;% group_by(body_mass_g) %&gt;% summarise(mean = mean(flipper_length_mm))\n\n\nbaseggplot\n\n\nFor base graphics, type=‘b’ means both points and lines, ‘l’ gives you just lines and ‘p’ gives you only points. You can find more plotting character options under ?pch.\n\nplot(mean~body_mass_g, data=mm.per.g, type='l')\n\n\n\n\n\n\n\n\n\n\nWith ggplot we specify that we want a line geometry only.\n\nggplot(mm.per.g, aes(x=body_mass_g, y=mean)) + geom_line()\n\n\n\n\n\n\n\n\n\n\n\nHow does this relationship change with penguin species? First lets get the average flipper length per combination of body mass and species\n\nmmpgs &lt;- pen %&gt;% group_by(body_mass_g, species) %&gt;% summarise(mean = mean(flipper_length_mm))\n\n\nggplotbase\n\n\nThis is where ggplot starts to excel in it’s ease of creating more complex plots. All we have to do is specify that we want the lines colored by the cut variable.\n\nggplot(mmpgs, aes(x=body_mass_g, y=mean, col=species)) + geom_line()\n\n\n\n\n\n\n\n\nAnd we get one line per species.\n\n\nThis plot can be created in base graphics, but it takes an advanced knowledge of the graphics system to do so. So I do not show it here.",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualizing Data</span>"
    ]
  },
  {
    "objectID": "data_viz.html#continuous-v.-categorical",
    "href": "data_viz.html#continuous-v.-categorical",
    "title": "2  Visualizing Data",
    "section": "2.7 Continuous v. Categorical",
    "text": "2.7 Continuous v. Categorical\nCreate an appropriate plot for a continuous variable, and plot it for each level of the categorical variable.\n\n2.7.1 Dotplot/strip chart\nDotplots can be very useful when plotting dots against several categories. They can also be called stripcharts.\n\nbaseggplot\n\n\n\nstripchart(body_mass_g ~ species, data=pen)\n\n\n\n\n\n\n\n\n\n\nWe can reproduce the same thing by plotting one continuous variable against one categorical variable, and adding a layer of points. I’d argue that horizontal looks better due to the axis-labels.\n\na &lt;- ggplot(pen, aes(y=body_mass_g, x=species)) + geom_point()\nb &lt;- ggplot(pen, aes(y=species, x=body_mass_g)) + geom_point()\ngrid.arrange(a, b, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.7.2 Grouped boxplots\n\nbaseggplot\n\n\nBase graphics plots grouped boxplots with also just the addition of a twiddle (tilde) ~. Another example of where model notation works.\n\nboxplot(bill_length_mm~species, data=pen)\n\n\n\n\n\n\n\n\n\n\nA simple addition, just define your x and y accordingly.\n\nggplot(pen, aes(x=species, y=bill_depth_mm, fill=species)) + geom_boxplot()\n\n\n\n\n\n\n\n\n\n\n\nDescriptive additions\n\nAdding violinsAdding jittered pointsAdding ridge plots\n\n\nViolin plots can be overlaid here as well.\n\nggplot(pen, aes(x=species, y=bill_depth_mm, fill=species)) +\n        geom_violin(alpha=.1) + \n        geom_boxplot(alpha=.5, width=.2)\n\n\n\n\n\n\n\n\n\n\n\nggplot(pen, aes(x=species, y=bill_depth_mm, fill=species)) + \n         geom_boxplot() +\n         geom_jitter()\n\n\n\n\n\n\n\n\n\n\n\npen %&gt;%\n  select(species,\n         bill_depth_mm) %&gt;%\n  na.omit() %&gt;%\n  ggplot(aes(x=species,\n             y=bill_depth_mm,\n             fill = species)) +\n  geom_boxplot(alpha=.5, width=.2) +\n  stat_summary(fun=\"mean\") +\n  stat_slab(alpha = .3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.7.3 Grouped histograms\n\nggplotbase\n\n\nBy default ggplot wants to overlay all plots on the same grid. This doesn’t look to good with histograms. Instead you can overlay density plots\n\na &lt;- ggplot(pen, aes(x=bill_depth_mm, fill=species)) + geom_histogram()\nb &lt;- ggplot(pen, aes(x=bill_depth_mm, fill=species)) + geom_density() \ngrid.arrange(a,b, ncol=2)\n\n\n\n\n\n\n\n\nThe solid fills are still difficult to read, so we can either turn down the alpha (turn up the transparency) or only color the lines and not the fill.\n\nc &lt;- ggplot(pen, aes(x=bill_depth_mm, fill=species)) + geom_density(alpha=.2)\nd &lt;- ggplot(pen, aes(x=bill_depth_mm, fill=species)) + geom_density() \ngrid.arrange(c,d, ncol=2)\n\n\n\n\n\n\n\n\n\n\nThere is no easy way to create grouped histograms in base graphics, so we will skip it.\n\n\n\n\n\n2.7.4 Ridgeline plots\nRidgeline plots have not been added to the base distribution of ggplot2 yet. For now it’s available in the ggridges package. Really good way to visualize density plots without the overlapping issue.\n\nggplot(pen, aes(x=bill_depth_mm, y=species)) + geom_density_ridges()",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualizing Data</span>"
    ]
  },
  {
    "objectID": "data_viz.html#faceting-paneling",
    "href": "data_viz.html#faceting-paneling",
    "title": "2  Visualizing Data",
    "section": "2.8 Faceting / paneling",
    "text": "2.8 Faceting / paneling\nThis is a good place to introduce a term called faceting. The definition is a particular aspect or feature of something, or one side of something many-sided, especially of a cut gem. Basically instead of plotting the grouped graphics on the same plotting area, we let each group have it’s own plot, or facet.\nWe add a facet_wrap() and specify that we want to panel on the species group. Note the twiddle in front of species.\n\nggplot(pen, aes(x=bill_depth_mm, fill=species)) + geom_density() + facet_wrap(~species)\n\n\n\n\n\n\n\n\nThe grid placement can be semi-controlled by using the ncol argument in the facet_wrap() statement.\n\nggplot(pen, aes(x=bill_depth_mm, fill=species)) + \n  geom_density() + facet_wrap(~species, ncol=4)\n\n\n\n\n\n\n\n\nIt is important to compare distributions across groups on the same scale, and our eyes can compare items vertically better than horizontally. So let’s force ncol=1.\n\nggplot(pen, aes(x=bill_depth_mm, fill=species)) + \n  geom_density() + facet_wrap(~species, ncol=1)\n\n\n\n\n\n\n\n\n\n2.8.1 Paneling on two variables\nWho says we’re stuck with only faceting on one variable? A variant on facet_wrap is facet_grid. Here we can specify multiple variables to panel on.\n\nggplot(pen, aes(x=body_mass_g, fill=sex)) + geom_density() + facet_grid(sex~island)\n\n\n\n\n\n\n\n\nHow about plotting bill length against flipper length, for all combinations of species and island, with the points further separated by sex?\n\nggplot(pen, aes(x=flipper_length_mm, y=bill_length_mm, color=sex)) + geom_point() + facet_grid(island~species)",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualizing Data</span>"
    ]
  },
  {
    "objectID": "data_viz.html#multiple-plots-per-window",
    "href": "data_viz.html#multiple-plots-per-window",
    "title": "2  Visualizing Data",
    "section": "2.9 Multiple plots per window",
    "text": "2.9 Multiple plots per window\n\nbaseggplotQuarto\n\n\nI use par(mfrow=c(r,c)) for base graphics, where r is the number of rows and c the number of columns.\n\npar(mfrow=c(1,3))\nplot(pen$bill_depth_mm)\nplot(pen$species)\nplot(pen$bill_length_mm ~ pen$bill_depth_mm)\n\n\n\n\n\n\n\n\nOther resources including learning about layouts. Multipanel plotting with base graphics\n\n\nUse the grid.arrange function in the gridExtra package. I’ve done it several times above. You assign the output of a ggplot object to an object (here it’s plot1 and plot2). Then you use grid.arrange() to arrange them either side by side or top and bottom.\n\na &lt;- ggplot(pen, aes(x=bill_depth_mm, fill=species)) + geom_density(alpha=.2)\nb &lt;- ggplot(pen, aes(x=bill_depth_mm, fill=species)) + geom_density() \ngrid.arrange(a,b, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nadd example or reference to https://quarto.org/docs/get-started/computations/rstudio.html#multiple-figures",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualizing Data</span>"
    ]
  },
  {
    "objectID": "data_viz.html#multivariate-3-variables",
    "href": "data_viz.html#multivariate-3-variables",
    "title": "2  Visualizing Data",
    "section": "2.10 Multivariate (3+ variables)",
    "text": "2.10 Multivariate (3+ variables)\nThis is not much more complicated than taking an appropriate bivariate plot and adding a third variable through paneling, coloring, or changing a shape.\nThis is trivial to do in ggplot, not trivial in base graphics. So I won’t show those examples.\n\n2.10.1 Three continuous\nContinuous variables can also be mapped to the size of the point. Here I set the alpha on the points so we could see the overplotting (many points on a single spot). So the darker the spot the more data points on that spot.\n\nggplot(pen, aes(x=bill_length_mm, y=bill_depth_mm, size=body_mass_g)) + geom_point(alpha=.2)\n\n\n\n\n\n\n\n\n\n\n2.10.2 Scatterplot matrix\nA scatterplot matrix allows you to look at the bivariate comparison of multiple pairs of variables simultaneously. First we need to trim down the data set to only include the variables we want to plot, then we use the pairs() function.\n\nc.vars &lt;- pen[,c('flipper_length_mm', 'bill_length_mm', 'bill_depth_mm', \n                 'body_mass_g')]\npairs(c.vars)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReplace original interpretation- We can see price has a non-linear relationship with X, Y and Z and x & y have a near perfect linear relationship.\n\n\n\n\n\n\n2.10.3 Two categorical and one continuous\nThis is very similar to side by side boxplots, one violin plot per sex, within each island\n\n\n\n\n\n\n\nReplace original interpretation- This is difficult to really see due to the large number of categories each factor has. The categorical variables in the penguins dataset have less categories w less combinations\n\n\n\n\n\nggplot(pen, aes(x=island, y=bill_length_mm, fill=species)) + geom_violin()\n\n\n\n\n\n\n\n\nBest bet here would be to panel on species and change the x axis to location.\n\nggplot(pen, aes(x=species, y=bill_length_mm, fill=species)) + geom_violin() + facet_wrap(~island)\n\n\n\n\n\n\n\n\n\n\n2.10.4 Two continuous and one categorical\nAnd lastly let’s look back at how we can play with scatterplots of using a third categorical variable (using ggplot2 only). We can color the points by species,\n\nggplot(pen, aes(x=flipper_length_mm, y=bill_length_mm, color=species)) + geom_point()\n\n\n\n\n\n\n\n\nWe could add a smoothing lowess line for each species separately,\n\nggplot(pen, aes(x=flipper_length_mm, y=bill_length_mm, color=species)) + geom_point() + geom_smooth(se=FALSE)\n\n\n\n\n\n\n\n\nAnd using grid.arrange we can include both visualizations.\n\na &lt;- ggplot(pen, aes(x=bill_length_mm, y=bill_depth_mm, color=species)) + geom_point() + ggtitle(\"Colored by species\")\nd &lt;- ggplot(pen, aes(x=bill_length_mm, y=bill_depth_mm, color=species)) + geom_point() + \n      geom_smooth(se=FALSE) +ggtitle(\"Lowess line per species\")\ngrid.arrange(a, d, ncol=2, nrow=1)\n\n\n\n\n\n\n\n\nOr we just panel by species.\n\nggplot(pen, aes(x=bill_length_mm, y=bill_depth_mm)) + geom_point() + facet_wrap(~species)\n\n\n\n\n\n\n\n\nWe could even change the color by sex, and shape by species.\n\nggplot(pen, aes(x=flipper_length_mm, y=bill_length_mm, color=sex, shape=species)) + geom_point() \n\n\n\n\n\n\n\n\nThat’s harder to read. So note that just because you can change an aesthetic, doesn’t mean you should. And just because you can plot things on the same axis, doesn’t mean you have to.\nBefore you share your plot with any other eyes, always take a step back and try to explain what it is telling you. If you have to take more than a minute to get to the point then it may be too complex and simpler graphics are likely warranted.",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualizing Data</span>"
    ]
  },
  {
    "objectID": "data_viz.html#troubleshooting",
    "href": "data_viz.html#troubleshooting",
    "title": "2  Visualizing Data",
    "section": "2.11 Troubleshooting",
    "text": "2.11 Troubleshooting\n\n2.11.1 Problem: Missing data showing up as a category in ggplot?\nGet rid of that far right bar!\n\nggplot(NCbirths, aes(x=marital)) + geom_bar()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution:\n\n\n\n\n\nUse dplyr to select only the variables you are going to plot, then pipe in the na.omit() at the end. It will create a temporary data frame (e.g) plot.data that you then provide to ggplot().\n\nplot.data &lt;- NCbirths %&gt;% select(marital) %&gt;% na.omit()\nggplot(plot.data, aes(x=marital)) + geom_bar()\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.11.2 Problem: Got numerical binary 0/1 data but want to plot it as categorical?\nConsider a continuous variable for the number of characters in an email num_char, and a 0/1 binary variable spam.\n\n\n\n\n\n\nSolution:\n\n\n\n\n\nCreate a second variable var_factor for plotting and keep the binary var as 0/1 for analysis.\n\nemail$spam_cat &lt;- factor(email$spam, labels=c(\"Ham\", \"Spam\"))\nggplot(email, aes(y=num_char, x=spam_cat)) + geom_boxplot()\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.11.3 Problem: You want to change the legend title for a fill or color scale.\n\n\n\n\n\n\nSolution:\n\n\n\n\n\nAdd the name= argument to whatever layer you added that created the legend. Here I specified a fill, and it was a discrete variable. So I use the scale_fill_discrete() layer.\n\nggplot(email, aes(y=num_char, x=spam_cat, fill=spam_cat)) + geom_boxplot() + \n  scale_fill_discrete(name=\"Ya like Spam?\")\n\n\n\n\n\n\n\n\nHere, I colored the points by a discrete variable, so the layer is scale_color_discrete().\n\nggplot(email, aes(x=num_char, y=line_breaks, col=spam_cat)) + geom_point() +\n  scale_color_discrete(name=\"Ya like Spam?\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.11.4 Problem: You want to add means to boxplots.\nBoxplots are great. Even better with violin overlays. Know what makes them even better than butter? Adding a point for the mean. stat_summary is the layer you want to add. Check out this stack overflow post for more context.\n\nggplot(email, aes(x=spam_cat, y=num_char, fill=spam_cat)) +\n  geom_boxplot() +\n  stat_summary(fun.y=\"mean\", geom=\"point\", size=3, pch=17,color=\"blue\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolution:\n\n\n\n\n\nI suggest playing around with size and plotting character pch to get a feel for how these work. You can also look at ?pch (and scroll down in the help file) to see the 25 default plotting characters.",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualizing Data</span>"
    ]
  },
  {
    "objectID": "data_viz.html#but-what-about",
    "href": "data_viz.html#but-what-about",
    "title": "2  Visualizing Data",
    "section": "2.12 But what about…",
    "text": "2.12 But what about…\n\nLegend adjustment: remove it, move it to another side, rename it\nCustom specified colors and shapes\n\nGo to the R Graphics Cookbook, 2e for these.\nOther visualizations:\n\nHeat maps\nWord clouds, or simpler\nInteractive plots - Look into plotly() and ggplotly(), start with their guide directed towards R users here or browse the Plotly R open source graphing library",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualizing Data</span>"
    ]
  },
  {
    "objectID": "data_viz.html#additional-resources",
    "href": "data_viz.html#additional-resources",
    "title": "2  Visualizing Data",
    "section": "2.13 Additional Resources",
    "text": "2.13 Additional Resources\nFor any Google Search - be sure to limit searches to within the past year or so. R packages get updated very frequently, and many functions change or become obsolete.\n\nComprehensive guides\n\nR Graphics 2e: The best book about using base graphics\nR Graphics Cookbook 2e: The best book for using ggplot2\nggplot2: Elegant Graphics for Data Analysis 3e\n\nSubject reference and tutorial sites\n\nMath 130 Lesson 07 - Creating graphics - more on ggplot2 syntax\nSTHDA: Statistical tools for high-throughput data analysis.\n\nggplot2 essentials\nggplot2 qq plot (quantile - quantile graph) : Quick start guide\nOther graphics options\n\nQuick-R / Datacamp:\n\nBasic Graphs\nggplot2\nScatterplots\n\nR-bloggers\n\nWaffle charts\nScatterplot matrices\n\n\nLiterate programming tools\n\nQuarto\n\nMultiple figure alignment\n\n\nHelp lists\n\nggplot2 Google Groups\nStackoverflow questions tagged ggplot2\nChico R users group",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Visualizing Data</span>"
    ]
  },
  {
    "objectID": "select_analysis.html",
    "href": "select_analysis.html",
    "title": "3  Selecting Appropriate Analyses",
    "section": "",
    "text": "Section in progress\n\n\n\nThis section covers how to choose appropriate analyses for any number and type of measurements. Think like, flow chart.\nConsiderations:\n\nPurpose of analysis.\n\nTypes of variables in data set.\n\nData used in analysis.\n\nAssumptions needed; satisfied?\n\nChoice of analyses is often arbitrary: consider several\n\nExample:\n5 independent variables: 3 interval, 1 ordinal, 1 nominal\n1 dependent variable: interval\nAnalysis options\n\nMultiple regression: pretend independent ordinal variable is an interval variable use dummy (0 /1) variables for nominal variables\nAnalysis of variance: categorize all independent variables\nAnalysis of covariance: leave variables as is, check assumptions\nLogistic regression: Categorize dependent variable: high, low\nSurvival analysis: IF dependent variable is time to an event\n\nUnsure? Do several and compare results.",
    "crumbs": [
      "Preparing Data for Analysis",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Selecting Appropriate Analyses</span>"
    ]
  },
  {
    "objectID": "foundations.html",
    "href": "foundations.html",
    "title": "4  Foundations for Inference",
    "section": "",
    "text": "Nothing here yet",
    "crumbs": [
      "Statistical Inference",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Foundations for Inference</span>"
    ]
  },
  {
    "objectID": "bivariate_analysis.html",
    "href": "bivariate_analysis.html",
    "title": "5  Bivariate Analysis",
    "section": "",
    "text": "5.1 Assumption of independent observations\nThe primary assumption of most standard statistical procedures is that observations are independent of each other. That is, the value of one observation does not change or affect another observation.\nHowever, there are many examples where measurements are made on subjects before and after a certain exposure or treatment (pre-post), or an experiment to compare two cell phone packages might use pairs of subjects that are the same age, sex and income level. One subject would be randomly assigned to the first phone package, the other in the pair would get the second phone package. This chapter only deals with non-correlated analyses, leaving that topic for a later chapter.",
    "crumbs": [
      "Statistical Inference",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Bivariate Analysis</span>"
    ]
  },
  {
    "objectID": "bivariate_analysis.html#choosing-appropriate-bivariate-analysis",
    "href": "bivariate_analysis.html#choosing-appropriate-bivariate-analysis",
    "title": "5  Bivariate Analysis",
    "section": "5.2 Choosing appropriate bivariate analysis",
    "text": "5.2 Choosing appropriate bivariate analysis\nChoosing which statistical analyses procedure is appropriate completely depending on the data types of the explanatory and response variable. This is a simplified table, only covering the common/standard types of bivariate analysis.\n\n\n\n\n\n\n\nfigure out how to get table here. latex doesnt work. - some options: raw markdown, knitr::kable, mermaid diagram\n\n\n\n\nFor this set of notes, the variable types are referred to using the first letter, e.g. Q for quantitative, B for binary, and C for categorical. Thus a T-test is a (Q \\(\\sim\\) B) analysis, and a correlation analysis is (Q \\(\\sim\\) Q) analysis.\n\n\n\n\n\n\n\ncounty dataset will need to be replaced or example switched - no longer included in openintro & the csv on https://www.norcalbiostat.com/data/#countyComplete is missing federal spending column",
    "crumbs": [
      "Statistical Inference",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Bivariate Analysis</span>"
    ]
  },
  {
    "objectID": "bivariate_analysis.html#qb-two-means-t-test",
    "href": "bivariate_analysis.html#qb-two-means-t-test",
    "title": "5  Bivariate Analysis",
    "section": "5.3 (Q~B) Two means: T-Test",
    "text": "5.3 (Q~B) Two means: T-Test\nIt is common to compare means from different samples. For instance, we might investigate the effectiveness of a certain educational intervention by looking for evidence of greater reading ability in the treatment group against a control group. That is, our research hypothesis is that reading ability of a child is associated with an educational intervention.\nThe null hypothesis states that there is no relationship, or no effect, of the educational intervention (binary explanatory variable) on the reading ability of the child (quantitative response variable). This can be written in symbols as follows:\n\\[H_{0}: \\mu_{1} = \\mu_{2}\\mbox{ or }\\qquad  H_{0}: \\mu_{1} -\\mu_{2}=0\\]\nwhere \\(\\mu_{1}\\) is the average reading score for students in the control group (no intervention) and \\(\\mu_{2}\\) be the average reading score for students in the intervention group. Notice it can be written as one mean equals the other, but also as the difference between two means equaling zero. The alternative hypothesis \\(H_{A}\\) states that there is a relationship:\n\\[H_{A}: \\mu_{1} \\neq \\mu_{2} \\qquad \\mbox{ or } \\qquad H_{A}: \\mu_{1}-\\mu_{2} \\neq 0\\]\n\n5.3.1 Assumptions\n\nThe data distribution for each group is approximately normal.\nThe scores are independent within each group.\nThe scores from the two groups are independent of each other (i.e. the two samples are independent).\n\n\n\n5.3.2 Sampling Distribution for the difference\nWe use \\(\\bar{x}_1 - \\bar{x}_2\\) as a point estimate for \\(\\mu_1 - \\mu_2\\), which has a standard error of\n\\[\nSE_{\\bar{x}_1 - \\bar{x}_2}\n   = \\sqrt{SE_{\\bar{x}_1}^2 + SE_{\\bar{x}_2}^2}\n     = \\sqrt{\\frac{\\sigma^{2}_{1}}{n_1} + \\frac{\\sigma^{2}_{2}}{n_2}}\n\\]\nSo the equations for a Confidence Interval is,\n\\[\n  \\left( \\bar{x}_{1} - \\bar{x}_{2} \\right) \\pm t_{\\frac{\\alpha}{2}, df}\n    \\sqrt{ \\frac{\\sigma^{2}_{1}}{n_{1}} + \\frac{\\sigma^{2}_{2}}{n_{2}} }\n\\]\nand Test Statistic is,\n\\[\n  t^{*} =  \\frac{\\left( \\bar{x}_{1} - \\bar{x}_{2} \\right) - d_{0}}\n       {\\left( \\sqrt{ \\frac{\\sigma^{2}_{1}}{n_{1}} + \\frac{\\sigma^{2}_{2}}{n_{2}} }\n       \\right )}\n\\]\nTypically it is unlikely that the population variances \\(\\sigma^{2}_{1}\\) and \\(\\sigma^{2}_{2}\\) are known so we will use sample variances \\(s^{2}_{1}\\) and \\(s^{2}_{2}\\) as estimates.\nWhile you may never hand calculate these equations, it is important to see the format, or structure, of the equations. Equation \\(\\ref{2sampCImean}\\) has the same format of\n\\[ \\mbox{point estimate} \\pm 2*\\mbox{standard error}\\]\nregardless what it is we’re actually trying to estimate. Thus in a pinch, you can calculate approximate confidence intervals for whatever estimate you are trying to understand, given only the estimate and standard error, even if the computer program does not give it to you easily or directly.\n\n\n5.3.3 Example: Smoking and BMI\n\n\n\n\n\n\nWe would like to know, is there convincing evidence that the average BMI differs between those who have ever smoked a cigarette in their life compared to those who have never smoked? This example uses the Addhealth dataset.\n\n\n\n1. Identify response and explanatory variables.\n\nThe quantitative response variable is BMI (variable )\nThe binary explanatory variable is whether the person has ever smoked a cigarette (variable )\n\n2. Visualize and summarize bivariate relationship.\n\nplot.bmi.smoke &lt;- addhealth %&gt;% select(eversmoke_c, BMI) %&gt;% na.omit()\n\nggplot(plot.bmi.smoke, aes(x=eversmoke_c, y=BMI, fill=eversmoke_c)) +\n      geom_boxplot(width=.3) + geom_violin(alpha=.4) +\n      labs(x=\"Smoking status\") +\n      scale_fill_viridis_d(guide=FALSE) +\n      stat_summary(fun.y=\"mean\", geom=\"point\", size=3, pch=17, \n                   position=position_dodge(width=0.75))\n\n\n\n\n\n\n\n\n\nplot.bmi.smoke %&gt;% group_by(eversmoke_c) %&gt;%\n summarise(mean=mean(BMI, na.rm=TRUE),\n             sd = sd(BMI, na.rm=TRUE),\n             IQR = IQR(BMI, na.rm=TRUE))\n\n# A tibble: 2 × 4\n  eversmoke_c  mean    sd   IQR\n  &lt;fct&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Non Smoker   29.7  7.76  9.98\n2 Smoker       28.8  7.32  9.02\n\n\nSmokers have an average BMI of 28.8, smaller than the average BMI of non-smokers at 29.7. Nonsmokers have more variation in their BMIs (sd 7.8 v. 7.3 and IQR 9.98 v. 9.02), but the distributions both look normal, if slightly skewed right.\n3. Write the relationship you want to examine in the form of a research question.\n\nNull Hypothesis: There is no relationship between BMI and smoking status.\nAlternate Hypothesis: There is a relationship between BMI and smoking status.\n\n4. Perform an appropriate statistical analysis.\nI. Let \\(\\mu_1\\) denote the average BMI for nonsmokers, and \\(\\mu_2\\) the average BMI for smokers.\n\n\\(\\mu_1 - \\mu_2 = 0\\) There is no difference in the average BMI between smokers and nonsmokers. \\(\\mu_1 - \\mu_2 \\neq 0\\) There is a difference in the average BMI between smokers and nonsmokers.\nWe are comparing the means between two independent samples. A Two-Sample T-Test for a difference in means will be conducted. The assumptions that the groups are independent is upheld because each individual can only be either a smoker or nonsmoker. The difference in sample means \\(\\bar{x_1} - \\bar{x_2}\\) is normally distributed – this is a valid assumption due to the large sample size and that differences typically are normally distributed. The observations are independent, and the variability is roughly equal (IQR 9.9 v. 9.0).\nWe use the t.test function, but use model notation of the format outcome \\(\\sim\\) category. Here, BMI is our continuous outcome that we’re testing across the (binary) categorical predictor eversmoke_c.\n\n\nt.test(BMI ~ eversmoke_c, data=addhealth)\n\n\n    Welch Two Sample t-test\n\ndata:  BMI by eversmoke_c\nt = 3.6937, df = 3395.3, p-value = 0.0002245\nalternative hypothesis: true difference in means between group Non Smoker and group Smoker is not equal to 0\n95 percent confidence interval:\n 0.3906204 1.2744780\nsample estimates:\nmean in group Non Smoker     mean in group Smoker \n                29.67977                 28.84722 \n\n\nWe have very strong evidence against the null hypothesis, \\(p = 0.0002\\).\n5. Write a conclusion in the context of the problem.\nOn average, nonsmokers have a significantly higher BMI by 0.83 (0.39, 1.27) compared to nonsmokers (\\(p = 0.0002\\)).\n\n\n\n\n\n\nAlways check the output against the direction you are testing. R always will calculate a difference as group 1 - group 2, and it defines the groups alphabetically. For example, for a factor variable that has groups A and B, R will automatically calculate the difference as A-B. In this example it is Nonsmoker - Smoker.",
    "crumbs": [
      "Statistical Inference",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Bivariate Analysis</span>"
    ]
  },
  {
    "objectID": "bivariate_analysis.html#bv-anova",
    "href": "bivariate_analysis.html#bv-anova",
    "title": "5  Bivariate Analysis",
    "section": "5.4 (Q~C) Multiple means: ANOVA",
    "text": "5.4 (Q~C) Multiple means: ANOVA\nFrequently, a researcher wants to compare the means of an outcome across three or more treatments in a single experiment. We might initially think to do pairwise comparisons (1v2, 1v3, 2v3) for a total of three comparisons. However, this strategy can be treacherous. If we have many groups and do many comparisons, it is likely that we will eventually find a difference just by chance, even if there is no difference in the populations.\nWhen we analyze a conventional two-treatment experiment, we are prepared to run a 1 in 20 risk of an apparently significant result arising purely by accident (the 5% chance of a Type I error). We regard such a risk as being fairly unlikely and feel justified in accepting with confidence any significant results we obtain.\nAnalyzing a single experiment as a series of 10 treatment pairs is a very different proposition. The chance of an apparently significant result arising purely by chance somewhere in the 10 analyses increases dramatically. Using a 5% error rate, the chance of NOT making at Type I error is .95. To not make a Type I error 10 times is \\(.95^{10} = .6\\). That means there is a 40% chance of making a Type I error!\n\n\n\nSignificant - xkcd webcomic\n\n\n\n5.4.1 Example: Visual comparison\nExamine the figure below. Compare groups I, II, and III. Can you visually determine if the differences in the group centers is due to chance or not? What about groups IV, V, and VI?\n\n\n\nSide-by-side dot plot for the outcomes for six groups.\n\n\nSo we need some method of comparing treatments for more than two groups at a time. This is done using an Analysis of Variance (ANOVA) model.\n\n\n\n\n\n\nTerminology\n\n\n\n\nResponse Variable: The response variable in the ANOVA setting is the quantitative (continuous) variable that we want to compare among the different treatments.\nFactor/Treatment: A property or characteristic (categorical variable) that allows us to distinguish the different populations from one another. An independent variable to be studied in an investigation such as temperature, type of plant, color of flower, location.\nFactor/Treatment level: Factors have different levels, such as 3 temperatures, 5 locations, 3 colors, etc.\nWithin-sample Variation: Variation within a sample from one population. Individuals who receive the same treatment will experience identical experimental conditions. The variation within each of the treatment groups must therefore be a consequence of solely random variation.\nBetween-sample Variation: Variation between samples. This is the difference between the group means. If some treatments are genuinely more effective than others, then we would expect to see relatively large differences between the treatment means and a relatively large between-treatments variation.\n\n\n\n\n\n5.4.2 Formulation of the One-way ANOVA model\nANOVA is a mathematical technique which uses a model based approach to partition the variance in an experiment into different sources of variance. This technique enables us to test if most the variation in the treatment means is due to differences between the groups rather than random chance.\nStarting with our generic conceptual understanding of statistical models:\n\nDATA = MODEL + RESIDUAL\n\nour MODEL for this situation is the group membership. Does knowing what group an observation is in tell you about the location of the data? The one-way (or one-factor) ANOVA model is\n\\[\ny_{ij} = \\mu_{i} + \\epsilon_{ij} \\qquad \\qquad\n\\epsilon_{ij} \\overset{iid}{\\sim} \\mathcal{N}(0,\\sigma^{2})\n\\]\nfor \\(i=1, \\ldots, I\\) factor levels and \\(j = 1, \\ldots, n_{i}\\) subjects within each factor level. The random error terms are independently and identically distributed (iid) normally with common variance.\nThe null and alternative hypotheses are always phrased as follows:\n\n\\(H_0\\): The mean outcome is the same across all groups. \\(\\mu_1 = \\mu_2 = \\cdots = \\mu_k\\)\n\\(H_A\\): At least one mean is different.\n\nHow do we compare means using an ANalysis Of VAriance? By comparing the portion of the variance in the outcome that is explained by the groups, to the portion that’s leftover is due to unexplained randomness. Essentially we’re comparing the ratio of MODEL to RESIDUAL.\nThe total variation of the observed data is broken down into 2 parts:\n\nTotal Variation = Between Group Variation + Within Group Variation\n\nVariation is measured using the Sum of Squares (SS): The sum of the squares within a group (SSE), the sum of squares between groups (SSG), and the total sum of squares (SST).\nSSG (Between groups): Measures the variation of the \\(I\\) group means around the overall mean. \\[\n  SSG = \\sum_{i=1}^{I}n_{i}(\\bar{y}_{i.}-\\bar{y}..)^{2} = n_{1}(\\bar{y}_{1.}-\\bar{y}..)^{2} + n_{2}(\\bar{y}_{2.}-\\bar{y}..)^{2} + n_{3}(\\bar{y}_{3.}-\\bar{y}..)^{2}\n\\]\nSSE (Within group): Measures the variation of each observation around its group mean. \\[\nSSE = \\sum_{i=1}^{I}\\sum_{j=1}^{n_{i}}(y_{ij}-\\bar{y}_{i.})^{2} = \\sum_{i=1}^{I}(n_{i}-1)Var(Y_{i})\n\\]\nSST (Total): Measures the variation of the \\(N\\) data points around the overall mean. \\[\nSST =  \\sum_{i=1}^{I}\\sum_{j=1}^{n_{i}}(y_{ij}-\\bar{y}..)^{2} = (N-1)Var(Y)\n\\]\n\n\n5.4.3 Analysis of Variance table\nThe results of an analysis of variance test are always summarized in an ANOVA table. The format of an ANOVA table is as follows:\n\n\n\n\n\n\n\n\n\n\nSource\nSS\n\\(df\\)\nMS\nF\n\n\n\n\nGroups\nSSG\n\\(I-1\\)\nMSG = \\(\\frac{SSG}{I-1}\\ \\)\n\\(\\frac{MSG}{MSE}\\)\n\n\nError\nSSE\n\\(N-I\\)\nMSE = \\(\\frac{MSG}{N-I}\\ \\)\n\n\n\nTotal\nSST\n\\(N-1\\)\n\n\n\n\n\n\n\n5.4.4 The F-distribution\nThe \\(p\\)-value of the test is the area to the right of the F statistic density curve. This is always to the right because the F-distribution is not symmetric, truncated at 0 and skewed right. This is true regardless of the \\(df\\).\n\n\n\n\n\n\n\n\n\n\n\n5.4.5 Assumptions\nGenerally we must check three conditions on the data before performing ANOVA:\n\nThe observations are independent within and across groups\nThe data within each group are nearly normal\nThe variability across the groups is about equal.\n\nWhen these three conditions are met, we may perform an ANOVA to determine whether the data provide strong evidence against the null hypothesis that all the \\(\\mu_i\\) are equal.\n\n\n5.4.6 Example: A comparison of plant species under low water conditions\n\n\n\n\n\n\nThe PLANTS1 data file gives the percent of nitrogen in four different species of plants grown in a laboratory. The researchers collected these data in parts of the country where there is very little rainfall. To examine the effect of water, they varied the amount per day from 50mm to 650mm in 100mm increments. There were 9 plants per species-by-water combination. Because the plants are to be used primarily for animal food, with some parts that can be consumed by people, a high nitrogen content is very desirable. Let’s formally test to see if the nitrogen content in the plants differ across species.\n\n\n\n1. Identify response and explanatory variables.\n\nThe quantitative response variable is % nitrogen (pctnit)\nThe categorical explanatory variable is species (species)\n\n2. Visualize and summarize bivariate relationship.\n\nplot.nitrogen.species &lt;- plants1 %&gt;% select(species, pctnit) %&gt;% na.omit()\n\nggplot(plot.nitrogen.species, aes(x=species, y = pctnit, fill=species)) +\n      geom_boxplot(width=.3) + geom_violin(alpha=.4) +\n      labs(x=\"Species\") +\n      scale_fill_viridis_d(guide=FALSE) +\n      stat_summary(fun.y=\"mean\", geom=\"point\", size=3, pch=17,\n      position=position_dodge(width=0.75))\n\n\n\n\n\n\n\n\n\nplot.nitrogen.species %&gt;% group_by(species) %&gt;%\n summarise(mean=mean(pctnit, na.rm=TRUE),\n             sd = sd(pctnit, na.rm=TRUE),\n             IQR = IQR(pctnit, na.rm=TRUE)) %&gt;% kable()\n\n\n\n\nspecies\nmean\nsd\nIQR\n\n\n\n\n1\n3.039810\n0.2506118\n0.2690\n\n\n2\n2.092841\n0.2377523\n0.2725\n\n\n3\n3.284365\n0.3218599\n0.5065\n\n\n4\n1.195587\n0.2342217\n0.3125\n\n\n\n\n\nWhile the standard deviations are relatively similar across all species, the means are different (3.04 v. 2.09 v. 3.28 v. 1.20), with species 3 having the largest mean nitrogen content and species 4 the smallest. Species 3 has the highest IQR and species 1 has the lowest (0.506 v. 0.269).\n3. Write the relationship you want to examine in the form of a research question.\n\nNull Hypothesis: There is no difference in the average nitrogen content among plant species 1 through 4.\nAlternative Hypothesis: There is a difference in the average nitrogen content among plant species 1 through 4.\n\n4. Perform an appropriate statistical analysis.\nI. Let \\(\\mu_{1}\\), \\(\\ldots\\), \\(\\mu_{4}\\) be the mean nitrogen content in plant species 1 through 4 respectively.\n\n\\(H_{0}: \\mu_{1} = \\mu_{2} = \\mu_{3} = \\mu_{4}\\)\n\\(H_{A}:\\) At least one mean is different.\nWe are comparing means from multiple groups, so an ANOVA is the appropriate procedure. We need to check for independence, approximate normality and approximately equal variances across groups.\n\nIndependence: We are assuming that each plant was sampled independently of each other, and that the species themselves are independent of each other.\nNormality: With grouped data it’s easier to look at the histograms than qqplots.\n\nggplot(plants1, aes(x=pctnit, fill=species)) + ylab(\"\") + geom_density() + \n  facet_grid(species~.) +\n  theme(legend.position=\"bottom\") +\n  scale_y_continuous(breaks=NULL) + scale_fill_viridis_d()\n\n\n\n\n\n\n\n\nThe distributions per group tend to follow an approximate normal distribution.\nEqual variances: One way to assess if the groups have approximately equal variances is by comparing the IQR across groups.\n\nplants1 %&gt;% group_by(species) %&gt;% summarise(IQR = IQR(pctnit), SD = sd(pctnit)) %&gt;% kable()\n\n\n\n\nspecies\nIQR\nSD\n\n\n\n\n1\n0.2690\n0.2506118\n\n\n2\n0.2725\n0.2377523\n\n\n3\n0.5065\n0.3218599\n\n\n4\n0.3125\n0.2342217\n\n\n\n\n\nThe IQRs are similar so assumption of equal variances is not grossly violated. We can proceed with the ANOVA procedure.\n\nWe use the aov(response ~ predictor) function on the relationship between the nitrogen levels and tree species. We then pipe in summary() to make the output display nicely.\n\n\naov(pctnit~species, data=plants1) %&gt;% summary()\n\n             Df Sum Sq Mean Sq F value Pr(&gt;F)    \nspecies       3 172.39   57.46   827.5 &lt;2e-16 ***\nResiduals   248  17.22    0.07                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n5. Write a conclusion in the context of the problem. The results of the ANOVA test indicate that at least one species has a different average nitrogen content than the other varieties (\\(p&lt;\\).001).\n\n\n5.4.7 Coefficient of determination \\(R^{2}\\)\nThe coefficient of determination is defined as \\(R^{2} = \\frac{SSG}{SST}\\) and can be interpreted as the % of the variation seen in the outcome that is due to subject level variation within each of the treatment groups. The strength of this measure can be thought of in a similar manner as the correlation coefficient \\(r\\): \\(&lt; .3\\) indicates a poor fit, \\(&lt; .5\\) indicates a medium fit, and \\(&gt; .7\\) indicates a good fit.\n\n172.39/(172.39+17.22)*100\n\n[1] 90.9182\n\n\nA large amount (91%) of the variation seen in nitrogen content in the plant can be explained by the species of plant.\n\n\n5.4.8 Multiple Comparisons\nSuppose that an ANOVA test reveals that there is a difference in at least one of the means. How can we determine which groups are significantly different without increasing our chance of a Type I error?\nSimple! We perform all the pairwise comparisons but using a test statistic that retains a family-wise error rate of 0.05 (or our chosen \\(\\alpha\\)). There are different methods to adjust for multiple comparisons, we will be using the Tukey HSD (honest significant difference) test. Continuing on with the analysis of nitrogen across plant species.\n\nTukeyHSD(aov(pctnit~species, data=plants1))\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = pctnit ~ species, data = plants1)\n\n$species\n          diff        lwr        upr   p adj\n2-1 -0.9469683 -1.0684156 -0.8255209 0.0e+00\n3-1  0.2445556  0.1231082  0.3660029 2.4e-06\n4-1 -1.8442222 -1.9656696 -1.7227748 0.0e+00\n3-2  1.1915238  1.0700764  1.3129712 0.0e+00\n4-2 -0.8972540 -1.0187014 -0.7758066 0.0e+00\n4-3 -2.0887778 -2.2102252 -1.9673304 0.0e+00\n\n\nThe results from Tukey’s HSD for all pairwise comparisons indicate that the average nitrogen content in one species is significantly different from each of the three other species. The nice benefit of this procedure is that the difference between the means of the two groups are compared, and a 95 percent confidence interval for each difference is included. So specifically, species 2 has on average 0.94 (0.82, 1.09) lower percent nitrogen compared to species 1 (\\(p&lt;.0001\\)). Also, species 3 has on average 1.19 (1.07, 1.31) higher percent nitrogen compared to species 2 (\\(p&lt;.0001\\)).",
    "crumbs": [
      "Statistical Inference",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Bivariate Analysis</span>"
    ]
  },
  {
    "objectID": "bivariate_analysis.html#bv-chisq",
    "href": "bivariate_analysis.html#bv-chisq",
    "title": "5  Bivariate Analysis",
    "section": "5.5 (C~C) Multiple Proportions: \\(\\chi^{2}\\)",
    "text": "5.5 (C~C) Multiple Proportions: \\(\\chi^{2}\\)\nRecall that the point estimates for the proportion of an event occurring is \\(\\frac{x}{n}\\), where \\(x\\) is the number of times the event occurs out of \\(n\\) records. In this section we we would like to make conclusions about the difference in two population proportions: \\(p_1 - p_2\\). In other words we’re testing the hypothesis that \\(p_{1}-p_{2}=0\\).\nOur estimate for the difference in proportions based on the sample is \\(\\hat{p}_1 - \\hat{p}_2\\). No surprise there. What is slightly different is that we use a pooled proportion to check the condition of normality, and to calculate the standard error of the estimate. This pooled proportion is calculated by pooling the number of events in both groups, divided by the effective sample size for those groups.\n\\[ \\hat{p} = \\frac{x_{1} + x_{2}}{n_{1}+n_{2}} \\]\nThen the standard error of the point estimate is calculated as\n\\[ \\sqrt{\\frac{\\hat{p}(1-\\hat{p})}{n_1} + \\frac{\\hat{p}(1-\\hat{p})}{n_2}} \\]\nSo the equations for the Confidence Interval for the difference in proportions is,\n\\[\n\\left( \\hat{p}_{1} - \\hat{p}_{2} \\right) \\pm t_{\\frac{\\alpha}{2}, df}\n\\sqrt{\\frac{\\hat{p}(1-\\hat{p})}{n_1} + \\frac{\\hat{p}(1-\\hat{p})}{n_2}}\n\\]\nwith test statistic, \\[\nt^{*} =  \\frac{\\left( \\hat{p}_{1} - \\hat{p}_{2} \\right) - d_{0}}\n        {\\left( \\sqrt{\\frac{\\hat{p}(1-\\hat{p})}{n_1} + \\frac{\\hat{p}(1-\\hat{p})}{n_2}}\n        \\right )}\n\\]\n\n5.5.1 Conditions for the sampling distribution to be normal.\nThe difference \\(\\hat{p}_1 - \\hat{p}_2\\) tends to follow a normal model when 1) each proportion separately follows a normal model, and 2) the two samples are independent of each other. #1 can be verified by checking the success-failure condition for each group.\nThat means:\n\n\\(\\hat{p}n_{1} \\geq 10\\), AND\n\\(\\hat{p}n_{2} \\geq 10\\), AND\n\\(\\hat{q}n_{1} \\geq 10\\), AND\n\\(\\hat{q}n_{1} \\geq 10\\).\n\nWhere, if I’ve forgotten to mention it yet, \\(q = 1-p\\).\nWhen sample sizes are below 10, but still not super small, say like 5, we turn to the non-parameteric version of this test called a Fisher’s Exact Test.\n\n\n5.5.2 Example: Are Mammograms effective?\n\n\n\n\n\n\nThis example comes from the OpenIntro Statistics textbook (3rd ed).\nA 30-year study was conducted with nearly 90,000 female participants. Miller AB. 2014 During a 5-year screening period, each woman was randomized to one of two groups: in the first group, women received regular mammograms to screen for breast cancer, and in the second group, women received regular non-mammogram breast cancer exams. No intervention was made during the following 25 years of the study, and we’ll consider death resulting from breast cancer over the full 30-year period. Results from the study are summarized in the following table.\n\n\n\n\n\n\n\n\n\nAlive\nDead\nSum\n\n\n\n\nControl\n44405\n505\n44910\n\n\nMammogram\n44425\n500\n44925\n\n\nSum\n88830\n1005\n89835\n\n\n\n\n\n\n\n\nThe independent/explanatory variable is treatment (additional mammograms), and the dependent/response variable is death from breast cancer. Are these measures associated?\nIf mammograms are much more effective than non-mammogram breast cancer exams, then we would expect to see additional deaths from breast cancer in the control group (there is a relationship). On the other hand, if mammograms are not as effective as regular breast cancer exams, we would expect to see no difference in breast cancer deaths in the two groups (there is no relationship).\nWhat we need to do is to figure out how many deaths would be expected, if there was no relationship between treatment death by breast cancer, and then examine the residuals - the difference between the observed (\\(O_{ij}\\)) and expected (\\(E_{ij}\\)).\nIn our DATA = MODEL + RESIDUAL framework, the DATA is the observed counts \\(O_{ij}\\), and the MODEL is the expected counts \\(E_{ij}\\).\nTo see how the expected counts are calculated, we need to define a few more symbols, so we can find our way around the cells of a table. Just like rows and columns in a matrix, rows are indexed first (as \\(i\\) and columns indexed as \\(j\\)). So the cell in the top left is \\(i=1\\) and \\(j=1\\).\n\n\n\n\n\n\n\n\n\n\\(O_\n    {\n    i\n    j}\\)\nA l ive\nD ead\nT o tal\n\n\n\n\nM a mmo\n\\(n_\n                                                    {\n                                                    1\n                                                 1}\\)\n\\(n_\n                                                                                                                                                                      {\n                                                                                                                                                                      1\n                                                                                                                                                              2}\\) | \\(n_\n                                                                                                                                                                      {\n                                                                                                                                                                      1\n                                                                                                                                                                   .}\\)\n\n\n\n\nCo n t rol\n\\(n_\n                                                                                                                                                                      {\n                                                                                                                                                                      2\n                                                                                                                                                                   1}\\)\n\\(n_\n                                                                                                                                                                                                                                                                                                                                                                                                                   {\n                                                                                                                                                                                                                                                                                                                                                                                                                   2\n                                                                                                                                                                                                                                                                                                                                                                                                           2}\\) | \\(n_\n                                                                                                                                                                                                                                                                                                                                                                                                                   {\n                                                                                                                                                                                                                                                                                                                                                                                                                   2\n                                                                                                                                                                                                                                                                                                                                                                                                                .}\\)\n\n\nT o tal\n\\(n_\n                                                    {\n                                                    .\n                                                 1}\\)\n\\(n_\n                                                                                                                                                                      {\n                                                                                                                                                                      .\n                                                                                                                                                                   2}\\)\n\\(N\\)\n\n\n\nThe expected count for each cell is calculated as the row total times the column total for that cell, divided by the overall total. Yes this will end up as a fraction.\n\\[E_{ij} = \\frac{n_{i.}n_{.j}}{N}\\]\n\n\n\n\n\n\nAlive\nDead\n\n\n\n\nControl\n44407.58\n502.4161\n\n\nMammogram\n44422.42\n502.5839\n\n\n\n\n\n\n\nThe residuals are calculated as \\[ RESIDUALS = (O_{ij} - E_{ij})\\]\n\n\n\n\n\n\nAlive\nDead\n\n\n\n\nControl\n-0.0122616\n0.1152775\n\n\nMammogram\n0.0122596\n-0.1152583\n\n\n\n\n\n\n\nExamining the residuals can tell us which combinations had counts more or less observations than expected. If mammograms were not associated with survival, there were 0.01 fewer people still alive than expected, and 0.11 more people dead. This is trivially small (2 x 2) example with very large sample sizes. There will be another example provided later.\nThe \\(\\chi^2\\) test statistic is defined as the sum of the squared residuals, divided by the expected counts, and follows a \\(\\chi^2\\) distribution with degrees of freedom (#rows -1)(#cols -1).\n\\[ \\sum_{ij}\\frac{(O_{ij}-E_{ij})^{2}}{E_{ij}} \\]\nLike every other statistical test, large values of test statistics correspond to low p-values.\nBelow is a picture of the distribution for the current example. The p-value is reported on the left (vertically), the purple shaded area denotes the rejection region if we were using a hard cutoff of 0.05. (The rejection region is the area where the test statistic had to be at for a p-value to be smaller than .05.). For this example the test statistic was 0.017, which corresponds to a p-value of 0.895. Thus, this study does not provide enough evidence to support the claim that mammograms decrease the rate of deaths by breast cancer.\n\n\n\n\n\n\n\n\n\n\n\n5.5.3 Example: Smoking and General Health\nMore often than not, we will have the full data available. That is, data at each individual record not just a summary table like in the previous example. Let’s work through an example.\n\n\n\n\n\n\nUsing the Addhealth data set, what can we say about the relationship between smoking and a person’s perceived general level of general health?\n\n\n\n1. Identify response and explanatory variables.\n\nThe binary explanatory variable is whether the person has ever smoked an entire cigarette (eversmoke_c)\nThe categorical explanatory variable is the person’s general health (genhealth) and has levels “Excellent”, “Very Good”, “Good”, “Fair”, and “Poor”.\n\n2. Visualize and summarise bivariate relationship.\n\nsjPlot::plot_xtab(grp=addhealth$eversmoke_c, x=addhealth$genhealth, \n                  show.total = FALSE, margin=\"row\", legend.title=\"\") \n\n\n\n\n\n\n\n\nThe percentage of smokers seems to increase as the general health status decreases. Almost three-quarters (73%, n=40) of those reporting poor health have smoked an entire cigarette at least once in their life compared to 59% (n=573) of those reporting excellent health.\n3. Write the relationship you want to examine in the form of a research question.\nIs the proportion of those who have ever smoked equal across all levels of general health?\n\nNull Hypothesis: The proportion of smokers in each general health category is the same.\nAlternate Hypothesis: At least one proportion is different.\n\n4. Perform an appropriate statistical analysis.\nI. Define the parameters under consideration.\n\nLet \\(p_{1}\\) be the true proportion of smokers within the ``Excellent” health category.\nLet \\(p_{2}\\) be the true proportion of smokers within the ``Very good” health category.\nLet \\(p_{3}\\) be the true proportion of smokers within ``Good” health category.\nLet \\(p_{4}\\) be the true proportion of smokers within ``Fair” health category.\nLet \\(p_{5}\\) be the true proportion of smokers within ``Poor” health category.\n\n\n\\(H_{0}: p_{1} = p_{2} = p_{3} = p_{4} = p_{5}\\)\n\\(H_{A}:\\) At least one proportion is different.\nI will conduct a \\(\\chi\\)-squared test of association. There is at least 10 observations in each combination of smoking status and general health.\nConduct the test.\n\n\nhealth.smoke.model &lt;- chisq.test(addhealth$genhealth, addhealth$eversmoke_c)\nhealth.smoke.model\n\n\n    Pearson's Chi-squared test\n\ndata:  addhealth$genhealth and addhealth$eversmoke_c\nX-squared = 30.795, df = 4, p-value = 3.371e-06\n\n\nWe have strong evidence against the null; the \\(p\\)-value is less than .0001.\n5. Write a conclusion in context of the problem. We can conclude that there is an association between ever smoking a cigarette in their life and perceived general health (\\(\\chi^2\\) = 30.8, df=4, \\(p&lt;.0001\\)).\n\n\n5.5.4 Multiple Comparisons\nJust like with ANOVA, if we find that the chi-squared test indicates that at least one proportion is different from the others, it’s our job to figure out which ones might be different! We will analyze the residuals to accomplish this. Not by hand! Never again! You’re not learning how to code for nothing.\nThe residuals are automatically stored in the model output. You can either print them out and look at the values directly:\n\nhealth.smoke.model$residuals\n\n                   addhealth$eversmoke_c\naddhealth$genhealth Non Smoker     Smoker\n          Excellent  3.4461139 -2.5168277\n          Very good  0.4810893 -0.3513578\n          Good      -2.4431255  1.7843072\n          Fair      -1.0556365  0.7709714\n          Poor      -0.9446378  0.6899048\n\n\nOr you can extract them and save them as a data frame. Then use ggplot with geom_raster to fill in your squares.\n\nplot.residuals &lt;- health.smoke.model$residuals %&gt;% data.frame()\nggplot(plot.residuals, aes(x=addhealth.genhealth, y=addhealth.eversmoke_c)) +\n       geom_raster(aes(fill=Freq)) +  scale_fill_viridis_c()\n\n\n\n\n\n\n\n\nThe proportion of those who have never smoked and report being in Excellent health is higher than expected if these two measures were independent (high positive residual means observed is greater than expected). A lower percent of people reporting Good health never smoked, which is lower than expected if smoking and health status were independent. So these two categories are likely to be the groups that have a different proportion of lifetime smoker \\(p_{i}\\) compared to the other groups.",
    "crumbs": [
      "Statistical Inference",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Bivariate Analysis</span>"
    ]
  },
  {
    "objectID": "bivariate_analysis.html#bv-corr",
    "href": "bivariate_analysis.html#bv-corr",
    "title": "5  Bivariate Analysis",
    "section": "5.6 (Q~Q) Correlation",
    "text": "5.6 (Q~Q) Correlation\nThe correlation coefficient is designated by \\(r\\) for the sample correlation, and \\(\\rho\\) for the population correlation. The correlation is a measure of the strength and direction of a linear relationship between two variables.\nThe correlation ranges from +1 to -1. A correlation of +1 means that there is a perfect, positive linear relationship between the two variables. A correlation of -1 means there is a perfect, negative linear relationship between the two variables. In both cases, knowing the value of one variable, you can perfectly predict the value of the second.\n\n5.6.1 Strength of the correlation\nHere are rough estimates for interpreting the strengths of correlations based on the magnitude of \\(r\\).\n\n\\(|r| \\geq 0.7\\): Very strong relationship\n\\(0.4 \\leq |r| &lt; 0.7\\): Strong relationship\n\\(0.3 \\leq |r| &lt; 0.4\\): Moderate relationship\n\\(0.2 \\leq |r| &lt; 0.3:\\) Weak relationship\n\\(|r| &lt; 0.2:\\) Negligible or no relationship\n\n\n\n5.6.2 Example: Federal spending per capita and poverty rate\n\n\n\n\n\n\n\nAdd intro text to example once resolved/replaced\n\n\n\n\n\n#ggplot(county, aes(x=poverty, y=fed_spend00)) +\n#  geom_point() + ylab(\"federal spending per capita\") +\n#  xlab(\"poverty rate\")\n#cor(county$poverty, county$fed_spend00, use=\"complete.obs\")\n\n\nThere is a negligible, positive, linear relationship between poverty rate and per capita federal spending (\\(r = 0.03\\)).\nLet \\(\\rho\\) denote the true correlation between poverty rate and federal spending per capita.\nOur null hypothesis is that there is no correlation between poverty rate and federal spending (\\(\\rho = 0\\)), and the alternative hypothesis is that they are correlated (\\(\\rho \\neq 0\\)).\nWe can use the cor.test() function to analyze the evidence in favor of this alternative hypothesis.\n\n\n#cor.test(county$poverty, county$fed_spend00)\n\nWe conclude from this that there was a non-statistically significant, negligible correlation between poverty and federal spending (\\(r = 0.03 (-0.0003, .069), p = 0.05\\)).",
    "crumbs": [
      "Statistical Inference",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Bivariate Analysis</span>"
    ]
  },
  {
    "objectID": "reg_intro.html",
    "href": "reg_intro.html",
    "title": "6  Introduction to Regression",
    "section": "",
    "text": "6.1 Opening Remarks\nThe PMA6 textbook (Chapter 7) goes into great detail on this topic, since regression is typically the basis for all advanced models.\nThe book also distinguishes between a “fixed-x” case, where the values of the explanatory variable \\(x\\) only take on pre-specified values, and a “variable-x” case, where the values of \\(x\\) are observations from a population distribution of X’s.\nThis latter case is what we will be concerning ourselves with.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Introduction to Regression</span>"
    ]
  },
  {
    "objectID": "sl_reg.html",
    "href": "sl_reg.html",
    "title": "7  Simple Linear Regression",
    "section": "",
    "text": "7.1 Example\nOne of the major early indicators of reduced respiratory function is FEV1 or forced expiratory volume in the first second (amount of air exhaled in 1 second). Since it is known that taller males tend to have higher FEV1, we wish to determine the relationship between height and FEV1. We can use regression analysis for both a descriptive and predictive purpose.\nggplot(fev, aes(y=FFEV1, x=FHEIGHT)) + geom_point() + \n      xlab(\"Height\") + ylab(\"FEV1\") + \n      ggtitle(\"Scatterplot and Regression line of FEV1 Versus Height for Males.\") + \n      geom_smooth(method=\"lm\", se=FALSE, col=\"blue\")\nIn this graph, height is given on the horizontal axis since it is the independent or predictor variable and FEV1 is given on the vertical axis since it is the dependent or outcome variable.\nInterpretation: There does appear to be a tendency for taller men to have higher FEV1. The regression line is also added to the graph. The line is tilted upwards, indicating that we expect larger values of FEV1 with larger values of height.\nSpecifically the equation of the regression line is \\[\nY = -4.087 + 0.118 X\n\\]\nThe quantity 0.118 in front of \\(X\\) is greater than zero, indicating that as we increase \\(X, Y\\) will increase. For example, we would expect a father who is 70 inches tall to have an FEV1 value of\n\\[\\mbox{FEV1} = -4.087 + (0.118) (70) = 4.173\\]\nIf the height was 66 inches then we would expect an FEV1 value of only 3.70.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Simple Linear Regression</span>"
    ]
  },
  {
    "objectID": "sl_reg.html#sec-slr-fev",
    "href": "sl_reg.html#sec-slr-fev",
    "title": "7  Simple Linear Regression",
    "section": "",
    "text": "Lung function data were obtained from an epidemiological study of households living in four areas with different amounts and types of air pollution. The data set used in this book is a subset of the total data. In this chapter we use only the data taken on the fathers, all of whom are nonsmokers (see PMA6 Appendix A for more details).\n\n\n\n\n\nDescriptive: Describing the relationship between FEV1 and height\nPredictive: Use the equation to determine expected or normal FEV1 for a given height\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCaution on out of range predictions\n\n\n\nTo take an extreme example, suppose a father was 2 feet tall. Then the equation would predict a negative value of FEV1 (\\(-1.255\\)).\nA safe policy is to restrict the use of the equation to the range of the \\(X\\) observed in the sample.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Simple Linear Regression</span>"
    ]
  },
  {
    "objectID": "sl_reg.html#mathematical-model",
    "href": "sl_reg.html#mathematical-model",
    "title": "7  Simple Linear Regression",
    "section": "7.2 Mathematical Model",
    "text": "7.2 Mathematical Model\nThe mathematical model that we use for regression has three features.\n\n\\(Y\\) values are normally distributed at any given \\(X\\)\nThe mean of \\(Y\\) values at any given \\(X\\) follows a straight line \\(Y = \\beta_{0} + \\beta_{1} X\\).\nThe variance of \\(Y\\) values at any \\(X\\) is \\(\\sigma^2\\) (same for all X). This is known as homoscedasticity, or homogeneity of variance.\n\nMathematically this is written as:\n\\[\nY|X \\sim N(\\mu_{Y|X}, \\sigma^{2}) \\\\\n\\mu_{Y|X} = \\beta_{0} + \\beta_{1} X \\\\\nVar(Y|X) = \\sigma^{2}\n\\]\nand can be visualized as:\n\n\n\nFigure 6.2",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Simple Linear Regression</span>"
    ]
  },
  {
    "objectID": "moderation_stratification.html",
    "href": "moderation_stratification.html",
    "title": "8  Moderation and Stratification",
    "section": "",
    "text": "8.1 Moderation\nModeration occurs when the relationship between two variables depends on a third variable.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Moderation and Stratification</span>"
    ]
  },
  {
    "objectID": "moderation_stratification.html#moderation",
    "href": "moderation_stratification.html#moderation",
    "title": "8  Moderation and Stratification",
    "section": "",
    "text": "The third variable is referred to as the moderating variable or simply the moderator.\nThe moderator affects the direction and/or strength of the relationship between the explanatory (\\(x\\)) and response (\\(y\\)) variable.\n\nThis tends to be an important\n\nWhen testing a potential moderator, we are asking the question whether there is an association between two constructs, but separately for different subgroups within the sample.\n\nThis is also called a stratified model, or a subgroup analysis.\n\n\n\n8.1.1 Motivating Example - Admissions at UC Berkeley\nSometimes moderating variables can result in what’s known as Simpson’s Paradox. This has had legal consequences in the past at UC Berkeley.\nBelow are the admissions figures for Fall 1973 at UC Berkeley.\n\nTable of admissions rates at UC Berkeley in 1973\n\n\n\nApplicants\nAdmitted\n\n\n\n\nTotal\n12,763\n41%\n\n\nMen\n8,442\n44%\n\n\nWomen\n4,321\n35%\n\n\n\nIs there evidence of gender bias in college admissions? Do you think a difference of 35% vs 44% is too large to be by chance?\nDepartment specific data\n\nThe table of admissions rates for the 6 largest departments show a different story.\n\n\n\n\n\n\n\n\n\n\n\n\nAll\n\nMen\n\nWomen\n\n\n\nDepartment\nApplicants\nAdmitted\nApplicants\nAdmitted\nApplicants\nAdmitted\n\n\nA\n933\n64%\n825\n62%\n108\n82%\n\n\nB\n585\n63%\n560\n63%\n25\n68%\n\n\nC\n918\n35%\n325\n37%\n593\n34%\n\n\nD\n792\n34%\n417\n33%\n375\n35%\n\n\nE\n584\n25%\n191\n28%\n393\n24%\n\n\nF\n714\n6%\n373\n6%\n341\n7%\n\n\nTotal\n4526\n39%\n2691\n45%\n1835\n30%\n\n\n\nAfter adjusting for features such as size and competitiveness of the department, the pooled data showed a “small but statistically significant bias in favor of women”.\n\n\n8.1.2 Motivating Example: Association of flower parts\nLet’s explore the relationship between the length of the sepal in an iris flower, and the length (cm) of its petal.\n\noverall &lt;- ggplot(iris, aes(x=Sepal.Length, y=Petal.Length)) + \n                geom_point() + geom_smooth(se=FALSE) + \n                theme_bw()\n\nby_spec &lt;- ggplot(iris, aes(x=Sepal.Length, y=Petal.Length, col=Species)) + \n                  geom_point() + geom_smooth(se=FALSE) + \n                  theme_bw() + theme(legend.position=\"top\")\n\ngridExtra::grid.arrange(overall, by_spec , ncol=2)\n\n\n\n\n\n\n\n\nThe points are clearly clustered by species, the slope of the lowess line between virginica and versicolor appear similar in strength, whereas the slope of the line for setosa is closer to zero. This would imply that petal length for Iris setosa may not be affected by the length of the sepal.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Moderation and Stratification</span>"
    ]
  },
  {
    "objectID": "moderation_stratification.html#stratification",
    "href": "moderation_stratification.html#stratification",
    "title": "8  Moderation and Stratification",
    "section": "8.2 Stratification",
    "text": "8.2 Stratification\nStratified models fit the regression equations (or any other bivariate analysis) for each subgroup of the population.\nThe mathematical model describing the relationship between Petal length (\\(Y\\)), and Sepal length (\\(X\\)) for each of the species separately would be written as follows:\n\\[ Y_{is} \\sim \\beta_{0s} + \\beta_{1s}*x_{i} + \\epsilon_{is} \\qquad \\epsilon_{is} \\sim \\mathcal{N}(0,\\sigma^{2}_{s})\\] \\[ Y_{iv} \\sim \\beta_{0v} + \\beta_{1v}*x_{i} + \\epsilon_{iv} \\qquad \\epsilon_{iv} \\sim \\mathcal{N}(0,\\sigma^{2}_{v}) \\] \\[ Y_{ir} \\sim \\beta_{0r} + \\beta_{1r}*x_{i} + \\epsilon_{ir} \\qquad \\epsilon_{ir} \\sim \\mathcal{N}(0,\\sigma^{2}_{r}) \\]\nwhere \\(s, v, r\\) indicates species setosa, versicolor and virginica respectively.\nIn each model, the intercept, slope, and variance of the residuals can all be different. This is the unique and powerful feature of stratified models. The downside is that each model is only fit on the amount of data in that particular subset. Furthermore, each model has 3 parameters that need to be estimated: \\(\\beta_{0}, \\beta_{1}\\), and \\(\\sigma^{2}\\), for a total of 9 for the three models. The more parameters that need to be estimated, the more data we need.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Moderation and Stratification</span>"
    ]
  },
  {
    "objectID": "moderation_stratification.html#identifying-a-moderator",
    "href": "moderation_stratification.html#identifying-a-moderator",
    "title": "8  Moderation and Stratification",
    "section": "8.3 Identifying a moderator",
    "text": "8.3 Identifying a moderator\nHere are 3 scenarios demonstrating how a third variable can modify the relationship between the original two variables.\n\nSignificant –&gt; Non-Significant\n\nSignificant relationship at bivariate level\nWe expect the effect to exist in the entire population\nWithin at least one level of the third variable the strength of the relationship changes\nP-value is no longer significant within at least one subgroup\n\nNon-Significant –&gt; Significant\n\nNon-significant relationship at bivariate level\nWe do not expect the effect to exist in the entire population\nWithin at least one level of the third variable the relationship becomes significant\nP-value is now significant within at least one subgroup\n\nChange in Direction of Association\n\nSignificant relationship at bivariate level\nWe expect the effect to exist in the entire population\nWithin at least one level of the third variable the direction of the relationship changes\nMeans change order, positive to negative correlation etc.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Moderation and Stratification</span>"
    ]
  },
  {
    "objectID": "moderation_stratification.html#what-to-look-for-in-each-type-of-analysis",
    "href": "moderation_stratification.html#what-to-look-for-in-each-type-of-analysis",
    "title": "8  Moderation and Stratification",
    "section": "8.4 What to look for in each type of analysis",
    "text": "8.4 What to look for in each type of analysis\n\nANOVA - look at the \\(p\\)-value, \\(r\\)-squared, means, and the graph of the ANOVA and compare to those values in the Moderation (i.e., each level of third variable) output to determine if third variable is moderator or not.\nChi-Square - look at the \\(p\\)-value, the percents for the columns in the crosstab table, and the graph for the Chi-Square and compare to those values in the Moderation (i.e., each level of third variable) output to determine if third variable is a moderator or not.\nCorrelation and Linear Regression - look at the correlation coefficient (\\(r\\)), \\(p\\)-value, regression coefficients, \\(r\\)-squared, and the scatterplot. Compare to those values in the Moderation (i.e., each level of third variable) output to determine if third variable is a moderator or not.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Moderation and Stratification</span>"
    ]
  },
  {
    "objectID": "moderation_stratification.html#ex-correlation",
    "href": "moderation_stratification.html#ex-correlation",
    "title": "8  Moderation and Stratification",
    "section": "8.5 Ex: Correlation",
    "text": "8.5 Ex: Correlation\nCan we predict penguin body mass from the flipper length?\n\nggscatter(pen, x=\"flipper_length_mm\", y = \"body_mass_g\", add = \"reg.line\", \n          color = \"island\", ellipse = TRUE)\n\n\n\n\n\n\n\n\nProbably, but the relationship between flipper length and body mass changes depending on what island they are found on.\nOverall\n\ncor(pen$flipper_length_mm, pen$body_mass_g, use=\"pairwise.complete.obs\")\n\n[1] 0.8712018\n\n\nStratified by species\n\nby(pen, pen$species, function(x){\n  cor(x$flipper_length_mm, x$body_mass_g, use=\"pairwise.complete.obs\")\n})\n\npen$species: Adelie\n[1] 0.4682017\n------------------------------------------------------------ \npen$species: Chinstrap\n[1] 0.6415594\n------------------------------------------------------------ \npen$species: Gentoo\n[1] 0.7026665\n\n\nThere is a strong, positive, linear relationship (r=.87) between the flipper length and body mass of penguins when ignoring the species. This association is attenuated however within each species. Gentoo and Chinstrap still have strong correlations between flipper length and body mass, \\(r\\)=.70 and .64 respectively. However Adelie species penguins only have a moderate correlation with \\(r=.45\\).\nSo does Species moderate the relationship between flipper length and body mass? Visually we see a difference, but it is likely not statistically significant. More on how to determine that in section @ref(general-F).",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Moderation and Stratification</span>"
    ]
  },
  {
    "objectID": "moderation_stratification.html#ex-regression",
    "href": "moderation_stratification.html#ex-regression",
    "title": "8  Moderation and Stratification",
    "section": "8.6 Ex: Regression",
    "text": "8.6 Ex: Regression\nLet’s explore the relationship between the length of the sepal in an iris flower, and the length (cm) of its petal.\n\noverall &lt;- ggplot(iris, aes(x=Sepal.Length, y=Petal.Length)) + \n                geom_point() + geom_smooth(se=FALSE) + \n                theme_bw()\n\nby_spec &lt;- ggplot(iris, aes(x=Sepal.Length, y=Petal.Length, col=Species)) + \n                  geom_point() + geom_smooth(se=FALSE) + \n                  theme_bw() + theme(legend.position=\"top\")\n\ngridExtra::grid.arrange(overall, by_spec , ncol=2)\n\n\n\n\n\n\n\n\nThe points are clearly clustered by species, the slope of the lowess line between virginica and versicolor appear similar in strength, whereas the slope of the line for setosa is closer to zero. This would imply that petal length for Setosa may not be affected by the length of the sepal.\nHow does the species change the regression equation?\nOverall\n\nlm(iris$Petal.Length ~ iris$Sepal.Length) |&gt; summary() |&gt; broom::tidy()\n\n# A tibble: 2 × 5\n  term              estimate std.error statistic  p.value\n  &lt;chr&gt;                &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)          -7.10    0.507      -14.0 6.13e-29\n2 iris$Sepal.Length     1.86    0.0859      21.6 1.04e-47\n\n\nStratified by species\n\nby(iris, iris$Species, function(x) {\n  lm(Petal.Length ~ Sepal.Length, data = x) |&gt; summary() |&gt; broom::tidy()\n  })\n\niris$Species: setosa\n# A tibble: 2 × 5\n  term         estimate std.error statistic p.value\n  &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 (Intercept)     0.803    0.344       2.34  0.0238\n2 Sepal.Length    0.132    0.0685      1.92  0.0607\n------------------------------------------------------------ \niris$Species: versicolor\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)     0.185    0.514      0.360 7.20e- 1\n2 Sepal.Length    0.686    0.0863     7.95  2.59e-10\n------------------------------------------------------------ \niris$Species: virginica\n# A tibble: 2 × 5\n  term         estimate std.error statistic  p.value\n  &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)     0.610    0.417       1.46 1.50e- 1\n2 Sepal.Length    0.750    0.0630     11.9  6.30e-16\n\n\n\nOverall: -7.1 + 1.86x, significant positive slope p = 1.04x10-47\nSetosa: 0.08 + 0.13x, non-significant slope, p=.06\nVersicolor: 0.19 + 0.69x, significant positive slope p=2.6x10-10\nVirginica: 0.61 + 0.75x, significant positive slope p= 6.3x10-16\n\nSo we can say that iris species moderates the relationship between sepal and petal length.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Moderation and Stratification</span>"
    ]
  },
  {
    "objectID": "moderation_stratification.html#ex-anova",
    "href": "moderation_stratification.html#ex-anova",
    "title": "8  Moderation and Stratification",
    "section": "8.7 Ex: ANOVA",
    "text": "8.7 Ex: ANOVA\nIs the relationship between flipper length and species the same for each sex of penguin?\n\nggplot(pen, aes(x=flipper_length_mm, y=species, fill=species)) + \n      stat_slab(alpha=.5, justification = 0) + \n      geom_boxplot(width = .2,  outlier.shape = NA) + \n      geom_jitter(alpha = 0.5, height = 0.05) +\n      stat_summary(fun=\"mean\", geom=\"point\", col=\"red\", size=4, pch=17) + \n      theme_bw() + \n      labs(x=\"Flipper Length (mm)\", y = \"Species\", title = \"Overall\") + \n      theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\npen %&gt;% select(flipper_length_mm, species, sex) %&gt;% na.omit() %&gt;%\nggplot(aes(x=flipper_length_mm, y=species, fill=species)) + \n      stat_slab(alpha=.5, justification = 0) + \n      geom_boxplot(width = .2,  outlier.shape = NA) + \n      geom_jitter(alpha = 0.5, height = 0.05) +\n      stat_summary(fun=\"mean\", geom=\"point\", col=\"red\", size=4, pch=17) + \n      theme_bw() + \n      labs(x=\"Flipper Length (mm)\", y = \"Species\", title = \"Overall\") + \n      theme(legend.position = \"none\") + \n  facet_wrap(~sex)\n\n\n\n\n\n\n\n\nThe pattern of distributions of flipper length by species seems the same for both sexes of penguin. Sex is likely not a moderator. Let’s check the ANOVA anyhow.\nOverall\n\naov(pen$flipper_length_mm ~ pen$species) |&gt; summary()\n\n             Df Sum Sq Mean Sq F value Pr(&gt;F)    \npen$species   2  52473   26237   594.8 &lt;2e-16 ***\nResiduals   339  14953      44                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n2 observations deleted due to missingness\n\n\nBy Sex\n\nby(pen, pen$sex, function(x) {\n  aov(x$flipper_length_mm ~ x$species) |&gt; summary()\n  })\n\n             Df  Sum Sq Mean Sq F value    Pr(&gt;F)    \nx$species     2 21415.6   10708  411.79 &lt; 2.2e-16 ***\nResiduals   162  4212.6      26                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n------------------------------------------------------------ \n             Df  Sum Sq Mean Sq F value    Pr(&gt;F)    \nx$species     2 29098.4 14549.2  384.37 &lt; 2.2e-16 ***\nResiduals   165  6245.6    37.9                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nSex is not a modifier, the relationship between species and flipper length is the same within male and female penguins.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Moderation and Stratification</span>"
    ]
  },
  {
    "objectID": "moderation_stratification.html#ex-4-chi-squared",
    "href": "moderation_stratification.html#ex-4-chi-squared",
    "title": "8  Moderation and Stratification",
    "section": "8.8 Ex: 4 Chi-Squared",
    "text": "8.8 Ex: 4 Chi-Squared\nIdentify response, explanatory, and moderating variables\n\nCategorical response variable = Ever smoked (variable eversmoke_c)\nCategorical explanatory variable = General Health (variable genhealth)\nCategorical Potential Moderator = Gender (variable female5_c)\n\nVisualize the relationship between smoking and general health across the entire sample.\n\nplot_xtab(addhealth$genhealth, addhealth$eversmoke_c, \n          show.total = FALSE, margin = \"row\") + \n  ggtitle(\"Overall\")\n\n\n\n\n\n\n\n\n\nfem &lt;- addhealth %&gt;% filter(female_c == \"Female\")\nmal &lt;- addhealth %&gt;% filter(female_c == \"Male\")\n\nfem.plot &lt;- plot_xtab(fem$genhealth, fem$eversmoke_c, \n          show.total = FALSE, margin = \"row\") + \n  ggtitle(\"Females only\")\nmal.plot &lt;- plot_xtab(mal$genhealth, mal$eversmoke_c, \n          show.total = FALSE, margin = \"row\") + \n  ggtitle(\"Males only\")\n\ngridExtra::grid.arrange(fem.plot, mal.plot)\n\n\n\n\n\n\n\n\nA general pattern is seen where the proportion of smokers increases as the level of general health decreases. This pattern is similar within males and females, but it is noteworthy that a higher proportion of non smokers are female.\n\n\n\n\n\n\nInvestigate\n\n\n\nDoes being female change the relationship between smoking and general health? Is the distribution of smoking status (proportion of those who have ever smoked) equal across all levels of general health, for both males and females?\n\n\nFit both the original, and stratified models.\nOriginal\n\nchisq.test(addhealth$eversmoke_c, addhealth$genhealth)\n\n\n    Pearson's Chi-squared test\n\ndata:  addhealth$eversmoke_c and addhealth$genhealth\nX-squared = 30.795, df = 4, p-value = 3.371e-06\n\n\nStratified\n\nby(addhealth, addhealth$female_c, function(x) chisq.test(x$eversmoke_c, x$genhealth))\n\naddhealth$female_c: Male\n\n    Pearson's Chi-squared test\n\ndata:  x$eversmoke_c and x$genhealth\nX-squared = 19.455, df = 4, p-value = 0.0006395\n\n------------------------------------------------------------ \naddhealth$female_c: Female\n\n    Pearson's Chi-squared test\n\ndata:  x$eversmoke_c and x$genhealth\nX-squared = 19.998, df = 4, p-value = 0.0004998\n\n\nDetermine if the Third Variable is a moderator or not.\nThe relationship between smoking status and general health is significant in both the main effects and the stratified model. The distribution of smoking status across general health categories does not differ between females and males. Gender is not a moderator for this analysis.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Moderation and Stratification</span>"
    ]
  },
  {
    "objectID": "mlr.html",
    "href": "mlr.html",
    "title": "9  Multiple Linear Regression",
    "section": "",
    "text": "9.1 Mathematical Model\nThe mathematical model for multiple linear regression equates the value of the continuous outcome \\(y_{i}\\) to a linear combination of multiple predictors \\(x_{1} \\ldots x_{p}\\) each with their own slope coefficient \\(\\beta_{1} \\ldots \\beta_{p}\\).\n\\[ y_{i} = \\beta_{0} + \\beta_{1}x_{1i} + \\ldots + \\beta_{p}x_{pi} + \\epsilon_{i}\\]\nwhere \\(i\\) indexes the observations \\(i = 1 \\ldots n\\), and \\(j\\) indexes the number of parameters \\(j=1 \\ldots p\\). This linear combination is often written using summation notation: \\(\\sum_{i=1}^{p}X_{ij}\\beta_{j}\\).\nThe assumptions on the residuals \\(\\epsilon_{i}\\) still hold:\nIn matrix notation the linear combination of \\(X\\)’s and \\(\\beta\\)’s is written as \\(\\mathbf{x}_{i}^{'}\\mathbf{\\beta}\\), (the inner product between the vectors \\(\\mathbf{x}_{i}\\) and \\(\\mathbf{\\beta}\\)). Then the model is written as:\n\\[ \\textbf{y} = \\textbf{X} \\mathbf{\\beta} + \\mathbf{\\epsilon} ,\\]\nand we say the regression model relates \\(y\\) to a function of \\(\\textbf{X}\\) and \\(\\mathbf{\\beta}\\), where \\(\\textbf{X}\\) is a \\(n \\times p\\) matrix of \\(p\\) covariates on \\(n\\) observations and \\(\\mathbf{\\beta}\\) is a length \\(p\\) vector of regression coefficients.\nNote: Knowledge of Matricies or Linear Algebra is not required to conduct or understand multiple regression, but it is foundational and essential for Statistics and Data Science majors to understand the theory behind linear models.\nLearners in other domains should attempt to understand matricies at a high level, as some of the places models can fail is due to problems doing math on matricies.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Multiple Linear Regression</span>"
    ]
  },
  {
    "objectID": "mlr.html#mathematical-model",
    "href": "mlr.html#mathematical-model",
    "title": "9  Multiple Linear Regression",
    "section": "",
    "text": "They have mean zero\n\nThey are homoscedastic, that is all have the same finite variance: \\(Var(\\epsilon_{i})=\\sigma^{2}&lt;\\infty\\)\n\nDistinct error terms are uncorrelated (Independent): \\(\\text{Cov}(\\epsilon_{i},\\epsilon_{j})=0,\\forall i\\neq j.\\)",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Multiple Linear Regression</span>"
    ]
  },
  {
    "objectID": "mlr.html#parameter-estimation",
    "href": "mlr.html#parameter-estimation",
    "title": "9  Multiple Linear Regression",
    "section": "9.2 Parameter Estimation",
    "text": "9.2 Parameter Estimation\nRecall the goal of regression analysis is to minimize the unexplained/residual error. That is, to minimize the difference between the value of the dependent variable predicted by the model and the true value of the dependent variable.\n\\[ \\hat{y_{i}} - y_{i}, \\]\nwhere the predicted values \\(\\hat{y}_{i}\\) are calculated as\n\\[\\hat{y}_{i}  = \\sum_{i=1}^{p}X_{ij}\\beta_{j}\\]\nThe sum of the squared residual errors (the distance between the observed point \\(y_{i}\\) and the fitted value) now has the following form:\n\\[ \\sum_{i=1}^{n} |y_{i} - \\sum_{i=1}^{p}X_{ij}\\beta_{j}|^{2}\\]\nOr in matrix notation\n\\[ || \\mathbf{Y} - \\mathbf{X}\\mathbf{\\beta} ||^{2} \\]\nSolving this least squares problem for multiple regression requires knowledge of multivariable calculus and linear algebra, and so is left to a course in mathematical statistics.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Multiple Linear Regression</span>"
    ]
  },
  {
    "objectID": "mlr.html#fitting-the-model",
    "href": "mlr.html#fitting-the-model",
    "title": "9  Multiple Linear Regression",
    "section": "9.3 Fitting the model",
    "text": "9.3 Fitting the model\nThe analysis in example Section 7.1 concluded that FEV1 in fathers significantly increases by 0.12 (95% CI:0.09, 0.15) liters per additional inch in height (p&lt;.0001). Looking at the multiple \\(R^{2}\\) (correlation of determination), this simple model explains 25% of the variance seen in the outcome \\(y\\).\nHowever, FEV tends to decrease with age for adults, so we should be able to predict it better if we use both height and age as independent variables in a multiple regression equation.\n\n\n\n\n\n\nThink about it\n\n\n\nWhat direction do you expect the slope coefficient for age to be? For height?\n\n\nFitting a regression model in R with more than 1 predictor is done by adding each variable to the right hand side of the model notation connected with a +.\n\nlm(FFEV1 ~ FAGE + FHEIGHT, data=fev)\n\n\nCall:\nlm(formula = FFEV1 ~ FAGE + FHEIGHT, data = fev)\n\nCoefficients:\n(Intercept)         FAGE      FHEIGHT  \n   -2.76075     -0.02664      0.11440",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Multiple Linear Regression</span>"
    ]
  },
  {
    "objectID": "mlr.html#interpreting-coefficients",
    "href": "mlr.html#interpreting-coefficients",
    "title": "9  Multiple Linear Regression",
    "section": "9.4 Interpreting Coefficients",
    "text": "9.4 Interpreting Coefficients\nSimilar to simple linear regression, each \\(\\beta_{j}\\) coefficient is considered a slope. That is, the amount \\(Y\\) will change for every 1 unit increase in \\(X_{j}\\). In a multiple variable regression model, \\(b_{j}\\) is the estimated change in \\(Y\\) after controlling for other predictors in the model.\n\n9.4.1 Continuous predictors\n\nmlr.dad.model &lt;- lm(FFEV1 ~ FAGE + FHEIGHT, data=fev)\nsummary(mlr.dad.model)\n\n\nCall:\nlm(formula = FFEV1 ~ FAGE + FHEIGHT, data = fev)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.34708 -0.34142  0.00917  0.37174  1.41853 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -2.760747   1.137746  -2.427   0.0165 *  \nFAGE        -0.026639   0.006369  -4.183 4.93e-05 ***\nFHEIGHT      0.114397   0.015789   7.245 2.25e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5348 on 147 degrees of freedom\nMultiple R-squared:  0.3337,    Adjusted R-squared:  0.3247 \nF-statistic: 36.81 on 2 and 147 DF,  p-value: 1.094e-13\n\nconfint(mlr.dad.model)\n\n                  2.5 %      97.5 %\n(Intercept) -5.00919751 -0.51229620\nFAGE        -0.03922545 -0.01405323\nFHEIGHT      0.08319434  0.14559974\n\n\n\nHolding height constant, a father who is one year older is expected to have a FEV value 0.03 (0.01, 0.04) liters less than another man (p&lt;.0001).\nHolding age constant, a father who is 1cm taller than another man is expected to have a FEV value of 0.11 (.08, 0.15) liter greater than the other man (p&lt;.0001).\n\nFor the model that includes age, the coefficient for height is now 0.11, which is interpreted as the rate of change of FEV1 as a function of height after adjusting for age. This is also called the partial regression coefficient of FEV1 on height after adjusting for age.\n\n\n9.4.2 Binary predictors\nBinary predictors (categorical variables with only 2 levels) get converted to a numeric binary indicator variable which only has the values 0 and 1. Whichever level gets assigned to be 0 is called the reference group or level. The regression estimate \\(b\\) then is the effect of being in group (\\(x=1\\)) compared to being in the reference (\\(x=0\\)) group.\nDoes gender also play a roll in FEV? Let’s look at how gender may impact or change the relationship between FEV and either height or age.\n\nNote, the fev data set is in wide form right now, with different columns for mothers and fathers. First I need to reshape the data into long format, so gender is it’s own variable.\n\n\n# a pivot_longer() probably would have worked here as well\nfev_long &lt;- data.frame(gender = c(fev$FSEX, fev$MSEX), \n                   fev1 = c(fev$FFEV1, fev$MFEV1), \n                   ht = c(fev$FHEIGHT, fev$MHEIGHT), \n                   age = c(fev$FAGE, fev$MAGE), \n                   area = c(fev$AREA, fev$AREA))\nfev_long$gender &lt;- factor(fev_long$gender, labels=c(\"M\", \"F\"))\nfev_long$area   &lt;- factor(fev_long$area, labels=c(\"Burbank\", \"Lancaster\", \"Long Beach\", \"Glendora\"))\n\nSo the model being fit looks like:\n\\[ y_{i} = \\beta_{0} + \\beta_{1}x_{1i} + \\beta_{2}x_{2i} +\\beta_{3}x_{3i} + \\epsilon_{i}\\]\nwhere\n\n\\(x_{1}\\): Age\n\\(x_{2}\\): height\n\\(x_{3}\\): 0 if Male, 1 if Female\n\n\nlm(fev1 ~ age + ht + gender, data=fev_long)\n\n\nCall:\nlm(formula = fev1 ~ age + ht + gender, data = fev_long)\n\nCoefficients:\n(Intercept)          age           ht      genderF  \n   -2.24051     -0.02354      0.10509     -0.63775  \n\n\nIn this model gender is a binary categorical variable, with reference group “Male”. This is detected because the variable that shows up in the regression model output is genderF. So the estimate shown is for males, compared to females.\nNote that I DID NOT have to convert the categorical variable gender to a binary numeric variable before fitting it into the model. R (and any other software program) will do this for you already.\nThe regression equation for the model with gender is\n\\[ y = -2.24 - 0.02 age + 0.11 height - 0.64genderF \\]\n\n\\(b_{0}:\\) For a male who is 0 years old and 0 cm tall, their FEV is -2.24L.\n\\(b_{1}:\\) For every additional year older an individual is, their FEV1 decreases by 0.02L.\n\\(b_{2}:\\) For every additional cm taller an individual is, their FEV1 increases by 0.16L.\n\\(b_{3}:\\) Females have 0.64L lower FEV compared to males.\n\nNote: The interpretation of categorical variables still falls under the template language of “for every one unit increase in \\(X_{p}\\), \\(Y\\) changes by \\(b_{p}\\)”. Here, \\(X_{3}=0\\) for males, and 1 for females. So a 1 “unit” change is females compared to males.\n\n\n9.4.3 Categorical Predictors\nLet’s continue to model the FEV for individuals living in Southern California, but now we also consider the effect of city they live in. For those unfamiliar with the region, these cities represent very different environmental profiles.\n\ntable(fev_long$area)\n\n\n   Burbank  Lancaster Long Beach   Glendora \n        48         98         38        116 \n\n\nLet’s fit a model with area, notice again I do not do anything to the variable area itself aside from add it into the model.\n\nlm(fev1 ~ age + ht + gender + area, data=fev_long) |&gt; summary()\n\n\nCall:\nlm(formula = fev1 ~ age + ht + gender + area, data = fev_long)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.32809 -0.29573  0.00578  0.31588  1.37041 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    -2.250564   0.752414  -2.991  0.00302 ** \nage            -0.022801   0.004151  -5.493 8.59e-08 ***\nht              0.103866   0.010555   9.841  &lt; 2e-16 ***\ngenderF        -0.642168   0.078400  -8.191 8.10e-15 ***\nareaLancaster   0.031549   0.084980   0.371  0.71072    \nareaLong Beach  0.061963   0.104057   0.595  0.55199    \nareaGlendora    0.121589   0.082097   1.481  0.13967    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.4777 on 293 degrees of freedom\nMultiple R-squared:  0.6529,    Adjusted R-squared:  0.6458 \nF-statistic: 91.86 on 6 and 293 DF,  p-value: &lt; 2.2e-16\n\n\nExamine the coefficient names, areaLancaster, areaLong Beach and areaGlendora. Again R automatically take a categorical variable and turn it into a series of binary indicator variables where a 1 indicates if a person is from that area. Notice how someone from Burbank has 0’s for all of the three indicator variables, someone from Lancaster only has a 1 in the areaLancaster variable and 0 otherwise. And etc. for each other area.\n\n\n\n\n\n\nareaLancaster\nareaLong.Beach\nareaGlendora\narea\n\n\n\n\n1\n0\n0\n0\nBurbank\n\n\n51\n1\n0\n0\nLancaster\n\n\n75\n0\n1\n0\nLong Beach\n\n\n101\n0\n0\n1\nGlendora\n\n\n\n\n\n\nMost commonly known as “Dummy coding”. Not an informative term to use.\nBetter used term: Indicator variable\nMath notation: I(gender == “Female”).\nA.k.a “reference coding” or “one hot encoding”\nFor a nominal X with K categories, define K indicator variables.\n\nChoose a reference (referent) category:\nLeave it out\nUse remaining K-1 in the regression.\nOften, the largest category is chosen as the reference category.\n\n\nInterpreting the regression coefficients are going to be compared to the reference group. In this case, it is the Burbank area. Why Burbank? Because that is what R sees as the first level. If you want something different, you need to change the factor ordering.\n\nlevels(fev_long$area)\n\n[1] \"Burbank\"    \"Lancaster\"  \"Long Beach\" \"Glendora\"  \n\n\nThe mathematical model is now written as follows,\n\\[ Y_{i} = \\beta_{0} + \\beta_{1}x_{1i} + \\beta_{2}x_{2i} +\\beta_{3}x_{3i} + \\beta_{4}x_{4i} + \\beta_{5}x_{5i} +\\beta_{6}x_{6i}\\epsilon_{i}\\]\nwhere\n\n\\(x_{1}\\): Age\n\\(x_{2}\\): height\n\\(x_{3}\\): 0 if Male, 1 if Female\n\\(x_{4}\\): 1 if living in Lancaster, 0 otherwise\n\\(x_{5}\\): 1 if living in Long Beach, 0 otherwise\n\\(x_{6}\\): 1 if living in Glendora, 0 otherwise\n\nFor someone living in Burbank, \\(x_{4}=x_{5}=x_{6} =0\\) so the model then is\n\\[Y_{i} = \\beta_{0} + \\beta_{1}x_{1i} + \\beta_{2}x_{2i} +\\beta_{3}x_{3i} + \\epsilon_{i}\\]\nFor someone living in Lancaster, \\(x_{4}=1, x_{5}=0, x_{6} =0\\) so the model then is\n\\[\nY_{i} = \\beta_{0} + \\beta_{1}x_{1i} + \\beta_{2}x_{2i} +\\beta_{3}x_{3i} + \\beta_{4}(1) \\\\\nY_{i} \\sim (\\beta_{0} + \\beta_{4}) + \\beta_{1}x_{i} + \\beta_{2}x_{2i} +\\beta_{3}x_{3i} \\epsilon_{i}\n\\]\nFor someone living in Long Beach, \\(x_{4}=0, x_{5}=1, x_{6} =0\\) so the model then is\n\\[\nY_{i} = \\beta_{0} + \\beta_{1}x_{1i} + \\beta_{2}x_{2i} +\\beta_{3}x_{3i} + \\beta_{5}(1) \\\\\nY_{i} \\sim (\\beta_{0} + \\beta_{5}) + \\beta_{1}x_{i} + \\beta_{2}x_{2i} +\\beta_{3}x_{3i} \\epsilon_{i}\n\\]\nand the model for someone living in Glendora \\(x_{4}=0, x_{5}=0, x_{6} =1\\) is\n\\[\nY_{i} = \\beta_{0} + \\beta_{1}x_{1i} + \\beta_{2}x_{2i} +\\beta_{3}x_{3i} + \\beta_{6}(1) \\\\\nY_{i} \\sim (\\beta_{0} + \\beta_{6}) + \\beta_{1}x_{i} + \\beta_{2}x_{2i} +\\beta_{3}x_{3i} \\epsilon_{i}\n\\]\nIn summary, each area gets it’s own intercept, but still has a common slope for all other variables.\n\\[y_{i.Burbank} = -2.25 - 0.023(age) + 0.10(ht) -0.64(female)\\] \\[y_{i.Lancaster} = -2.22 - 0.023(age) + 0.10(ht) -0.64(female)\\] \\[y_{i.Long.Beach} = -2.19 - 0.023(age) + 0.10(ht) -0.64(female)\\] \\[y_{i.Glendora} = -2.13 - 0.023(age) + 0.10(ht) -0.64(female)\\]\nLet’s look interpret the regression coefficients and their 95% confidence intervals from the main effects model again.\n\nlm(fev1 ~ age + ht + gender + area, data=fev_long) |&gt; tbl_regression()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCharacteristic\nBeta\n95% CI1\np-value\n\n\n\n\nage\n-0.02\n-0.03, -0.01\n&lt;0.001\n\n\nht\n0.10\n0.08, 0.12\n&lt;0.001\n\n\ngender\n\n\n\n\n\n\n\n\n    M\n—\n—\n\n\n\n\n    F\n-0.64\n-0.80, -0.49\n&lt;0.001\n\n\narea\n\n\n\n\n\n\n\n\n    Burbank\n—\n—\n\n\n\n\n    Lancaster\n0.03\n-0.14, 0.20\n0.7\n\n\n    Long Beach\n0.06\n-0.14, 0.27\n0.6\n\n\n    Glendora\n0.12\n-0.04, 0.28\n0.14\n\n\n\n1 CI = Confidence Interval\n\n\n\n\n\n\n\n\n\n\\(b_{4}\\): After controlling for age, height and gender, those that live in Lancaster have 0.03 (-0.14, 0.20) higher FEV1 compared to someone living in Burbank (p=0.7).\n\\(b_{5}\\): After controlling for age, height and gender, those that live in Long Beach have 0.06 (-0.14, 0.27) higher FEV1 compared to someone living in Burbank (p=0.6).\n\\(b_{6}\\): After controlling for age, height and gender, those that live in Glendora have 0.12 (-0.04, 0.28) higher FEV1 compared to someone living in Burbank (p=0.14).\n\nBeta coefficients for categorical variables are always interpreted as the difference between that particular level and the reference group.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Multiple Linear Regression</span>"
    ]
  },
  {
    "objectID": "mlr.html#presenting-results",
    "href": "mlr.html#presenting-results",
    "title": "9  Multiple Linear Regression",
    "section": "9.5 Presenting results",
    "text": "9.5 Presenting results\nThe direct software output always tells you more information than what you are wanting to share with an audience. Here are some ways to “prettify” your regression output.\n\nbroom + knitrgtsummarydotwhisker\n\n\n\ntidy(mlr.dad.model) |&gt; kable(digits=3)\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n-2.761\n1.138\n-2.427\n0.016\n\n\nFAGE\n-0.027\n0.006\n-4.183\n0.000\n\n\nFHEIGHT\n0.114\n0.016\n7.245\n0.000\n\n\n\n\n\n\n\n\ntbl_regression(mlr.dad.model)\n\n\n\n\n\n\n\nCharacteristic\nBeta\n95% CI1\np-value\n\n\n\n\nFAGE\n-0.03\n-0.04, -0.01\n&lt;0.001\n\n\nFHEIGHT\n0.11\n0.08, 0.15\n&lt;0.001\n\n\n\n1 CI = Confidence Interval\n\n\n\n\n\n\n\n\nConsult the vignette for additional ways to modify the output to show measures such as AIC, \\(R^{2}\\) and the number of observations being used to fit the model.\n\n\nWith the function dwplot in the dotwhisker package we can create a forest plot.\n\ndwplot(mlr.dad.model)\n\n\n\n\n\n\n\n\nFurther improvement on dwplot - extract the point estimate & CI into a data table, then add it as a geom_text layer.\n\ntext &lt;- data.frame(                               # create a data frame\n  estimate = coef(mlr.dad.model),                 # by extracting the coefficients,\n  CI.low = confint(mlr.dad.model)[,1],            # with their lower\n  CI.high = confint(mlr.dad.model)[,2]) %&gt;%       # and upper confidence interval values\n  round(2)                                        # round digits\n\n# create the string for the label\ntext$label &lt;- paste0(text$estimate, \"(\", text$CI.low, \", \" , text$CI.high, \")\")\n\ntext                                              # view the results to check for correctness\n\n            estimate CI.low CI.high               label\n(Intercept)    -2.76  -5.01   -0.51 -2.76(-5.01, -0.51)\nFAGE           -0.03  -0.04   -0.01 -0.03(-0.04, -0.01)\nFHEIGHT         0.11   0.08    0.15    0.11(0.08, 0.15)\n\ntext &lt;- text[-1, ]                                # drop the intercept row\n\n# ---- create plot ------\nmlr.dad.model %&gt;%                                  # start with a model\n  tidy() %&gt;%                                       # tidy up the output\n  relabel_predictors(\"(Intercept)\" = \"Intercept\",  # convert to sensible names\n                     FAGE = \"Age\", \n                     FHEIGHT = \"Height\") %&gt;% \n  filter(term != \"Intercept\") %&gt;%                  # drop the intercept \n  dwplot() +                                       # create the ggplot \n  geom_text(aes(x=text$estimate, y = term,         # add the estimates and CI's\n                label = text$label), \n            nudge_y = .1) +                        # move it up a smidge\n  geom_vline(xintercept = 0, col = \"grey\",         # add a reference line at 0\n             lty = \"dashed\", linewidth=1.2) +      # make it dashed and a little larger\n  scale_x_continuous(limits = c(-.15, .15))        # expand the x axis limits for readability",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Multiple Linear Regression</span>"
    ]
  },
  {
    "objectID": "mlr.html#confounding",
    "href": "mlr.html#confounding",
    "title": "9  Multiple Linear Regression",
    "section": "9.6 Confounding",
    "text": "9.6 Confounding\nOne primary purpose of a multivariable model is to assess the relationship between a particular explanatory variable \\(x\\) and your response variable \\(y\\), after controlling for other factors.\n\n\n\nAll the ways covariates can affect response variables\n\n\nCredit: A blog about statistical musings\n\n\n\n\n\n\nLearn more\n\n\n\nEasy to read short article from a Gastroenterology journal on how to control confounding effects by statistical analysis.\n\n\nOther factors (characteristics/variables) could also be explaining part of the variability seen in \\(y\\).\n\n\n\n\n\n\nConfounders\n\n\n\nIf the relationship between \\(x_{1}\\) and \\(y\\) is bivariately significant, but then no longer significant once \\(x_{2}\\) has been added to the model, then \\(x_{2}\\) is said to explain, or confound, the relationship between \\(x_{1}\\) and \\(y\\).\n\n\nSteps to determine if a variable \\(x_{2}\\) is a confounder.\n\nFit a regression model on \\(y \\sim x_{1}\\).\nIf \\(x_{1}\\) is not significantly associated with \\(y\\), STOP. Re-read the “IF” part of the definition of a confounder.\nFit a regression model on \\(y \\sim x_{1} + x_{2}\\).\nLook at the p-value for \\(x_{1}\\). One of two things will have happened.\n\nIf \\(x_{1}\\) is still significant, then \\(x_{2}\\) does NOT confound (or explain) the relationship between \\(y\\) and \\(x_{1}\\).\nIf \\(x_{1}\\) is NO LONGER significantly associated with \\(y\\), then \\(x_{2}\\) IS a confounder.\n\n\nThis means that the third variable is explaining the relationship between the explanatory variable and the response variable.\nNote that this is a two way relationship. The order of \\(x_{1}\\) and \\(x_{2}\\) is invariant. If you were to add \\(x_{2}\\) to the model before \\(x_{1}\\) you may see the same thing occur. That is - both variables are explaining the same portion of the variance in \\(y\\).",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Multiple Linear Regression</span>"
    ]
  },
  {
    "objectID": "mlr.html#what-to-watch-out-for",
    "href": "mlr.html#what-to-watch-out-for",
    "title": "9  Multiple Linear Regression",
    "section": "9.7 What to watch out for",
    "text": "9.7 What to watch out for\n\nRepresentative sample\nRange of prediction should match observed range of X in sample\nUse of nominal or ordinal, rather than interval or ratio data\nErrors-in-variables\nCorrelation does not imply causation\nViolation of assumptions\nInfluential points\nAppropriate model\nMulticollinearity",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Multiple Linear Regression</span>"
    ]
  },
  {
    "objectID": "model_building.html",
    "href": "model_building.html",
    "title": "10  Model Building",
    "section": "",
    "text": "10.1 Interactions (PMA6 8.8)\nIn this main effects model, Species only changes the intercept. The effect of species is not multiplied by Sepal length. Reviewing the scatterplot below, do you think this is a reasonable model to fit the observed relationship?\nggplot(iris, aes(x=Sepal.Length, y=Petal.Length, color = Species)) + \n  geom_point() + geom_smooth(method=\"lm\", se=FALSE)\nIf we care about how species changes the relationship between petal and sepal length, we can fit a model with an interaction between sepal length (\\(x_{1}\\)) and species. For this first example let \\(x_{2}\\) be an indicator for when species == setosa. Note that both main effects of sepal length, and setosa species are also included in the model. Interactions are mathematically represented as a multiplication between the two variables that are interacting.\n\\[ Y_{i} \\sim \\beta_{0} + \\beta_{1}x_{i} + \\beta_{2}x_{2i} + \\beta_{3}x_{1i}x_{2i}\\]\nIf we evaluate this model for both levels of \\(x_{2}\\), the resulting models are the same as the stratified models.\nWhen \\(x_{2} = 0\\), the record is on an iris not from the setosa species.\n\\[ Y_{i} \\sim \\beta_{0} + \\beta_{1}x_{i} + \\beta_{2}(0) + \\beta_{3}x_{1i}(0)\\] which simplifies to \\[ Y_{i} \\sim \\beta_{0} + \\beta_{1}x_{i}\\]\nWhen \\(x_{2} = 1\\), the record is on an iris of the setosa species.\n\\[ Y_{i} \\sim \\beta_{0} + \\beta_{1}x_{i} + \\beta_{2}(1) + \\beta_{3}x_{1i}(1)\\] which simplifies to \\[ Y_{i} \\sim (\\beta_{0} + \\beta_{2}) + (\\beta_{1} + \\beta_{3})x_{i}\\]\nEach subgroup model has a different intercept and slope, but we had to estimate 4 parameters in the interaction model, and 6 for the fully stratified model.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Model Building</span>"
    ]
  },
  {
    "objectID": "model_building.html#interactions-pma6-8.8",
    "href": "model_building.html#interactions-pma6-8.8",
    "title": "10  Model Building",
    "section": "",
    "text": "10.1.1 Fitting interaction models & interpreting coefficients\nInteractions are fit in R by simply multiplying * the two variables together in the model statement.\n\niris$setosa &lt;- ifelse(iris$Species == \"setosa\", 1, 0)\nlm(Petal.Length ~ Sepal.Length + setosa + Sepal.Length*setosa, data=iris) |&gt; tbl_regression()\n\n\n\n\n\n\n\nCharacteristic\nBeta\n95% CI1\np-value\n\n\n\n\nSepal.Length\n1.0\n0.91, 1.1\n&lt;0.001\n\n\nsetosa\n2.4\n0.61, 4.1\n0.008\n\n\nSepal.Length * setosa\n-0.90\n-1.2, -0.56\n&lt;0.001\n\n\n\n1 CI = Confidence Interval\n\n\n\n\n\n\n\n\nThe coefficient \\(b_{3}\\) for the interaction term is significant, confirming that species changes the relationship between sepal length and petal length. Thus, species is a moderator (see Chapter 8).\nInterpreting Coefficients\n\nIf \\(x_{2}=0\\), then the effect of \\(x_{1}\\) on \\(Y\\) simplifies to: \\(\\beta_{1}\\)\n\n\\(b_{1}\\) The effect of sepal length on petal length for non-setosa species of iris (setosa=0)\nFor non-setosa species, the petal length increases 1.03cm for every additional cm of sepal length.\n\nIf \\(x_{2}=1\\), then the effect of \\(x_{1}\\) on \\(Y\\) model simplifies to: \\(\\beta_{1} + \\beta_{3}\\)\n\nFor setosa species, the petal length increases by 1.03-0.9=0.13 cm for every additional cm of sepal length.\n\n\n\n\n\nThe main effects (\\(b_{1}\\), \\(b_{2}\\)) cannot be interpreted by themselves when there is an interaction in the model.\n\n\n\n\n10.1.2 Categorical Interaction variables\nLet’s up the game now and look at the full interaction model with a categorical version of species. Recall \\(x_{1}\\) is Sepal Length, \\(x_{2}\\) is the indicator for versicolor, and \\(x_{3}\\) the indicator for virginica . Refer to Section 9.4.3 for information on how to interpret categorical predictors as main effects.\n\\[ Y_{i} \\sim \\beta_{0} + \\beta_{1}x_{i} + \\beta_{2}x_{2i} + \\beta_{3}x_{3i} + \\beta_{4}x_{1i}x_{2i} + \\beta_{5}x_{1i}x_{3i}+\\epsilon_{i}\\]\n\nsummary(lm(Petal.Length ~ Sepal.Length + Species + Sepal.Length*Species, data=iris))\n\n\nCall:\nlm(formula = Petal.Length ~ Sepal.Length + Species + Sepal.Length * \n    Species, data = iris)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.68611 -0.13442 -0.00856  0.15966  0.79607 \n\nCoefficients:\n                               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                      0.8031     0.5310   1.512    0.133    \nSepal.Length                     0.1316     0.1058   1.244    0.216    \nSpeciesversicolor               -0.6179     0.6837  -0.904    0.368    \nSpeciesvirginica                -0.1926     0.6578  -0.293    0.770    \nSepal.Length:Speciesversicolor   0.5548     0.1281   4.330 2.78e-05 ***\nSepal.Length:Speciesvirginica    0.6184     0.1210   5.111 1.00e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.2611 on 144 degrees of freedom\nMultiple R-squared:  0.9789,    Adjusted R-squared:  0.9781 \nF-statistic:  1333 on 5 and 144 DF,  p-value: &lt; 2.2e-16\n\n\nThe slope of the relationship between sepal length and petal length is calculated as follows, for each species:\n\nsetosa \\((x_{2}=0, x_{3}=0): b_{1}=0.13\\)\nversicolor \\((x_{2}=1, x_{3}=0): b_{1} + b_{2} + b_{4} = 0.13+0.55 = 0.68\\)\nvirginica \\((x_{2}=0, x_{3}=1): b_{1} + b_{3} + b_{5} = 0.13+0.62 = 0.75\\)\n\nCompare this to the estimates gained from the stratified model:\n\nby(iris, iris$Species, function(x){\n  lm(Petal.Length ~ Sepal.Length, data=x) %&gt;% coef()\n})\n\niris$Species: setosa\n (Intercept) Sepal.Length \n   0.8030518    0.1316317 \n------------------------------------------------------------ \niris$Species: versicolor\n (Intercept) Sepal.Length \n   0.1851155    0.6864698 \n------------------------------------------------------------ \niris$Species: virginica\n (Intercept) Sepal.Length \n   0.6104680    0.7500808 \n\n\nThey’re the same! Proof that an interaction is equivalent to stratification.\n\n\n10.1.3 Example 2\nWhat if we now wanted to include other predictors in the model? How does sepal length relate to petal length after controlling for petal width? We add the variable for petal width into the model\n\nsummary(lm(Petal.Length ~ Sepal.Length + setosa + Sepal.Length*setosa + Petal.Width, data=iris))\n\n\nCall:\nlm(formula = Petal.Length ~ Sepal.Length + setosa + Sepal.Length * \n    setosa + Petal.Width, data = iris)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.83519 -0.18278 -0.01812  0.17004  1.06968 \n\nCoefficients:\n                    Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)         -0.86850    0.27028  -3.213  0.00162 ** \nSepal.Length         0.66181    0.05179  12.779  &lt; 2e-16 ***\nsetosa               1.83713    0.62355   2.946  0.00375 ** \nPetal.Width          0.97269    0.07970  12.204  &lt; 2e-16 ***\nSepal.Length:setosa -0.61106    0.12213  -5.003 1.61e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.2769 on 145 degrees of freedom\nMultiple R-squared:  0.9761,    Adjusted R-squared:  0.9754 \nF-statistic:  1478 on 4 and 145 DF,  p-value: &lt; 2.2e-16\n\n\nSo far, petal width, and the combination of species and sepal length are both significantly associated with petal length.\nNote of caution: Stratification implies that the stratifying variable interacts with all other variables. So if we were to go back to the stratified model where we fit the model of petal length on sepal length AND petal width, stratified by species, we would be implying that species interacts with both sepal length and petal width.\nE.g. the following stratified model\n\n\\(Y = A + B + C + D + C*D\\), when D=1\n\\(Y = A + B + C + D + C*D\\), when D=0\n\nis the same as the following interaction model:\n\n\\(Y = A + B + C + D + A*D + B*D + C*D\\)\n\n\n\n10.1.4 Example 3:\nLet’s explore the relationship between income, employment status and depression. This example follows a logistic regression example from section @ref(mlogreg).\nHere I create the binary indicators of lowincome (annual income &lt;$10k/year) and underemployed (part time or unemployed).\n\ndepress_clean$lowincome &lt;- ifelse(depress_clean$income &lt; 10, 1, 0)\ntable(depress_clean$lowincome, depress_clean$income, useNA=\"always\")\n\n      \n        2  4  5  6  7  8  9 11 12 13 15 16 18 19 20 23 24 25 26 27 28 31 32 35\n  0     0  0  0  0  0  0  0 17  2 18 24  1  1 25  3 25  2  1  1  1 19  1  1 24\n  1     7  8 10 12 18 14 22  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n  &lt;NA&gt;  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n      \n       36 37 42 45 55 65 &lt;NA&gt;\n  0     1  1  1 15  9 10    0\n  1     0  0  0  0  0  0    0\n  &lt;NA&gt;  0  0  0  0  0  0    0\n\ndepress_clean$underemployed &lt;- ifelse(depress_clean$employ %in% c(\"PT\", \"Unemp\"), 1, 0 )\ntable(depress_clean$underemployed, depress_clean$employ, useNA=\"always\")\n\n      \n         1   2   3   4   5   6   7 &lt;NA&gt;\n  0    167  42  14  38  27   2   4    0\n  &lt;NA&gt;   0   0   0   0   0   0   0    0\n\n\nThe Main Effects model assumes that the effect of income on depression is independent of employment status, and the effect of employment status on depression is independent of income.\n\nme_model &lt;- glm(cases ~ lowincome + underemployed, data=depress_clean, family=\"binomial\")\nsummary(me_model)\n\n\nCall:\nglm(formula = cases ~ lowincome + underemployed, family = \"binomial\", \n    data = depress_clean)\n\nCoefficients: (1 not defined because of singularities)\n              Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)    -1.6393     0.1902  -8.618   &lt;2e-16 ***\nlowincome       0.1684     0.3294   0.511    0.609    \nunderemployed       NA         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 268.12  on 293  degrees of freedom\nResidual deviance: 267.87  on 292  degrees of freedom\nAIC: 271.87\n\nNumber of Fisher Scoring iterations: 4\n\n\nTo formally test whether an interaction term is necessary, we add the interaction term into the model and assess whether the coefficient for the interaction term is significantly different from zero.\n\nme_intx_model &lt;- glm(cases ~ lowincome + underemployed + lowincome*underemployed, data=depress_clean, family=\"binomial\") \nsummary(me_intx_model)\n\n\nCall:\nglm(formula = cases ~ lowincome + underemployed + lowincome * \n    underemployed, family = \"binomial\", data = depress_clean)\n\nCoefficients: (2 not defined because of singularities)\n                        Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)              -1.6393     0.1902  -8.618   &lt;2e-16 ***\nlowincome                 0.1684     0.3294   0.511    0.609    \nunderemployed                 NA         NA      NA       NA    \nlowincome:underemployed       NA         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 268.12  on 293  degrees of freedom\nResidual deviance: 267.87  on 292  degrees of freedom\nAIC: 271.87\n\nNumber of Fisher Scoring iterations: 4",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Model Building</span>"
    ]
  },
  {
    "objectID": "model_building.html#general-F",
    "href": "model_building.html#general-F",
    "title": "10  Model Building",
    "section": "10.2 Simultaneous test of multiple variables (PMA6 9.5)",
    "text": "10.2 Simultaneous test of multiple variables (PMA6 9.5)\nThe General-F test is used for simultaneous tests of \\(Q\\) variables in a model. This is used primarily in two situations:\n\nTesting if a categorical variable (with more than 2 levels) as a whole improves model fit.\nTesting whether or not the regression model is helpful in predicting values of Y at all.\n\nConsider a model with \\(P\\) variables and you want to test if \\(Q\\) additional variables are useful.\n\n\\(H_{0}: Q\\) additional variables are useless, i.e., their \\(\\beta\\)’s all = 0\n\n\\(H_{A}: Q\\) additional variables are useful to explain/predict \\(Y\\)\n\nWe can leverage the ANOVA framework to compare the residual sum of squares between the model including the \\(Q\\) variables, and the one without.\n\\[\nF = \\frac{({\\mbox{RSS}}_P-{\\mbox{RSS}_{P+Q})}/Q}{{\\mbox\n{RSS}}_{P+Q}{/}(N-P-Q-1)}\n\\]\nThe numerator quantifies improvement in the model from adding the additional \\(Q\\) variables. This ratio has a \\(F\\) distribution with \\(Q\\) and \\(N-P-Q-1\\) degrees of freedom.\nExample Consider the following model, where \\(X_{1}\\) and \\(X_{2}\\) are continuous predictors and \\(X_{3}, X_{4}, X_{5}\\) are binary indicators from a 4 level categorical variable.\n\\[\nY = \\beta_{0} + \\beta_{1}X_{1} + \\beta_{2}X_{2} + \\beta_{3}X_{3} + \\beta_{4}x_{4} + \\beta_{5}X_{5}+\\epsilon_{i}\n\\]\nIf you wanted to test (1) whether or not the categorical variable as a whole improves model fit, then \\(\\mathbf{R} =\n\\begin{bmatrix}\n0 , 0 ,1,1,1\n\\end{bmatrix}\\)\nIf we want to test (2) that the regression plane is useful to predict \\(Y\\), then we are testing \\(\\beta_{1}=\\beta_{2}=...\\beta_{5}=0\\), then \\(\\mathbf{R} =\n\\begin{bmatrix}\n1 , 1 ,1,1,1\n\\end{bmatrix}\\).\n\n10.2.1 Example: Modeling depression score\nConsider a model to predict depression using age, employment status and whether or not the person was chronically ill in the past year as covariates. This example uses the cleaned depression data set.\n\nemploy.depression.model &lt;- lm(cesd ~ age + chronill + employ, data=depress_clean)\nsummary(employ.depression.model)\n\n\nCall:\nlm(formula = cesd ~ age + chronill + employ, data = depress_clean)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-15.907  -5.601  -2.065   3.142  32.753 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 11.14724    1.33736   8.335 3.14e-15 ***\nage         -0.14439    0.03043  -4.745 3.28e-06 ***\nchronill     2.27884    1.01165   2.253    0.025 *  \nemploy       1.42030    0.34798   4.082 5.79e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.429 on 290 degrees of freedom\nMultiple R-squared:  0.09677,   Adjusted R-squared:  0.08742 \nF-statistic: 10.36 on 3 and 290 DF,  p-value: 1.703e-06\n\n\nThe results of this model show that age and chronic illness are statistically associated with CESD (each p&lt;.006). However employment status shows mixed results. Some employment statuses are significantly different from the reference group, some are not. So overall, is employment status associated with depression?\n(1) Testing if a categorical variable as a whole improves model fit\nSince employment is a categorical variable, all the coefficient estimates shown are the effect of being in that income category has on depression compared to being employed full time. For example, the coefficient for PT employment is greater than zero, so they have a higher CESD score compared to someone who is fully employed.\nTo test that employment status affects CESD we need to do a global test that all \\(\\beta\\)’s related to employment status are 0.\n\\(H_{0}: \\beta_{3} = \\beta_{4} = \\beta_{5} = \\beta_{6} = \\beta_{7} = \\beta_{8} = 0\\)\n\\(H_{A}\\): At least one \\(\\beta_{j}\\) is not 0.\nANOVA to the rescue! Since ANOVA partitions the variance in our outcome \\(Y\\) into amounts due to each variable, we get an ANOVA table that has one row per term:\n\naov(employ.depression.model) %&gt;% summary()\n\n             Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nage           1    615   614.6   8.651  0.00353 ** \nchronill      1    409   409.2   5.759  0.01703 *  \nemploy        1   1184  1183.6  16.659 5.79e-05 ***\nResiduals   290  20605    71.1                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nThe last row for employ is what we are interested in here.\nFirst confirm that the degrees of freedom are correct. It should equal the # of categories in the variable you are testing, minus 1.\n\nEmployment has 7 levels, so \\(df=6\\).\nOr equivalently, the degrees of freedom are the number of \\(beta\\)’s you are testing to be 0.\n\n\nThe p-value of this Wald test is significant, thus not \\(beta\\)’s are equal to zero, which implies employment status significantly predicts CESD score.\n\n\n\nNote the p-values for the individual coefficients age and chronill are not the same as in the regression model. ANOVA models are order dependent as they describe a “reduction” in variance in the outcome due to that variable. A deeper explanation of this is not included in these notes at this time.\n\n\n(2) Testing that the regression plane is useful to predict \\(Y\\)\nThis information is provided to us directly in the last line of the summary output from a linear model.\n\nsummary(employ.depression.model)\n\n\nCall:\nlm(formula = cesd ~ age + chronill + employ, data = depress_clean)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-15.907  -5.601  -2.065   3.142  32.753 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 11.14724    1.33736   8.335 3.14e-15 ***\nage         -0.14439    0.03043  -4.745 3.28e-06 ***\nchronill     2.27884    1.01165   2.253    0.025 *  \nemploy       1.42030    0.34798   4.082 5.79e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.429 on 290 degrees of freedom\nMultiple R-squared:  0.09677,   Adjusted R-squared:  0.08742 \nF-statistic: 10.36 on 3 and 290 DF,  p-value: 1.703e-06\n\n\n\n\n10.2.2 Testing for a moderation effect in a multiple regression model.\nModeration is introduced in Chapter @ref(mod-strat), and helps to set the motivation for stratified models. Later, in Chapter @ref(interactions-catvars), we show that an interaction term in a regression model is equivelant to stratification.\nWell what if you have other predictors in the model, not just the ones that you have an interaction on? We can use the Wald test to assess if a measure is a significant moderator without stratifying.\nContinuing with the depression example we saw that employment affects CESD depression score. What if we think that the effect (slope) of age on CESD may be different depending on their employment? That is, is the effect of age on depression different for those that are employed versus retired?\n\nemp.dep.intx &lt;- lm(cesd ~ age + chronill + employ + age*employ, data=depress_clean)\nsummary(emp.dep.intx)\n\n\nCall:\nlm(formula = cesd ~ age + chronill + employ + age * employ, data = depress_clean)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-17.207  -5.506  -2.057   3.125  33.450 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)  8.21730    2.50270   3.283  0.00115 **\nage         -0.07501    0.05861  -1.280  0.20170   \nchronill     2.29855    1.01016   2.275  0.02361 * \nemploy       2.67061    0.96780   2.759  0.00616 **\nage:employ  -0.02664    0.01924  -1.384  0.16737   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.416 on 289 degrees of freedom\nMultiple R-squared:  0.1027,    Adjusted R-squared:  0.0903 \nF-statistic: 8.271 on 4 and 289 DF,  p-value: 2.501e-06\n\n\nLet’s revisit our list of beta coefficients:\n\n\\(\\beta_{1}\\): Age\n\\(\\beta_{2}\\): Chronic illness\n\\(\\beta_{3} \\ldots \\beta_{7}\\): Effects of different levels of employment (Houseperson to Unemployed)\n\\(\\beta_{8} \\ldots \\beta_{12}\\): Multiplicative effect that levels of employment have on the slope of age.\n\nTo see if the interaction term age*employ is significant, we run an F test via aov() and interpret the p-value for the interaction term age:employ. Here the pvalue is very large, so there is no reason to believe that employment moderates the relationship between age and CESD score. This is a two way relationship. There is also no reason to believe that age moderates the relationship between employment and CESD score.\n\naov(emp.dep.intx) |&gt; summary()\n\n             Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nage           1    615   614.6   8.678  0.00348 ** \nchronill      1    409   409.2   5.778  0.01686 *  \nemploy        1   1184  1183.6  16.712 5.64e-05 ***\nage:employ    1    136   135.7   1.916  0.16737    \nResiduals   289  20469    70.8                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nThis last table is also known as a “Two Factor” or “Two way” ANOVA with an interaction term. This is quite often used in scientific experiments where two treatments (and their combination) is being investigated.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Model Building</span>"
    ]
  },
  {
    "objectID": "model_building.html#multicollinearity-pma6-8.9",
    "href": "model_building.html#multicollinearity-pma6-8.9",
    "title": "10  Model Building",
    "section": "10.3 Multicollinearity (PMA6 8.9)",
    "text": "10.3 Multicollinearity (PMA6 8.9)\n\nOccurs when some of the X variables are highly intercorrelated.\nComputed estimates of regression coefficients are unstable and have large standard errors.\n\nFor example, the squared standard error of the \\(i\\)th slope coefficient (\\([SE(\\beta_{i})]^2\\)) can be written as:\n\\[\n[SE(\\beta_{i})]^2 = \\frac{S^{2}}{(N-1)(S_{i}^{2})}*\\frac{1}{1 - (R_{i})^2}\n\\]\nwhere \\(S^{2}\\) is the residual mean square, \\(S_{i}\\) the standard deviation of \\(X_{i}\\), and \\(R_{i}\\) the multiple correlation between \\(X_{i}\\) and all other \\(X\\)’s.\nWhen \\(R_{i}\\) is close to 1 (very large), \\(1 - (R_{i})^2\\) becomes close to 0, which makes \\(\\frac{1}{1 - (R_{i})^2}\\) very large.\nThis fraction is called the variance inflation factor and is available in most model diagnostics.\n\nbig.pen.model &lt;- lm(body_mass_g ~ bill_length_mm + bill_depth_mm + flipper_length_mm, data=pen) \nperformance::check_collinearity(big.pen.model) |&gt; plot()\n\n\n\n\n\n\n\n\n\nSolution: use variable selection to delete some X variables.\nAlternatively, use dimension reduction techniques such as Principal Components (Chapter @ref(pca)).",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Model Building</span>"
    ]
  },
  {
    "objectID": "model_building.html#variable-selection-process",
    "href": "model_building.html#variable-selection-process",
    "title": "10  Model Building",
    "section": "10.4 Variable Selection Process",
    "text": "10.4 Variable Selection Process\n\n\n\nCorresponding PMA6 Ch 9\n\n\nVariable selection methods such as the ones described in this section, are most often used when performing an Exploratory analysis, where many independent variables have been measured, but a final model to explain the variability of a dependent variable has not yet been determined.\nWhen building a model, we want to choose a set of independent variables that both will yield a good prediction using as few variables as possible (parsimony). We also need to consider controlling for moderators and confounders. In many situations where regression is used, the investigator has strong justification for including certain variables in the model.\n\nprevious studies\naccepted theory\n\nThe investigator may have prior justification for using certain variables but may be open to suggestions for the remaining variables.\nThe set of independent variables can be broken down into logical subsets\n\nFactors of primary interest. (such as an exposure or treatment)\nPotential confounders. These are measures that could be associated with both the response, and explanatory variables, and which could explain the relationship between the primary factor of interest and the outcome. These are typically a set of demographics such as age, gender, ethnicity, and tend to be factors found to be important in prior studies.\nEffect Modifiers (Moderators). A set of variables that other studies have shown to change or affect the relationship between the explanatory and response variables.\nPrecision variables (covariates). Variables associated with the dependent variable, but not the primary factor of interest.\n\nHow variables are chosen for inclusion into a model is heavily driven by the purpose of the model:\n\ndescriptive\npredictive\n\n\n10.4.1 Automated selection procedures (PMA6 9.6)\n\nThis example uses the penguins data to model the body mass\n\n\n\n\nThe model fitting must apply the models to the same dataset. This may be a problem if there are missing values. We suggest you remove the missing values first. (From the R help file)\n\n\n\npen.nomiss &lt;- pen %&gt;% na.omit()\n\n\n10.4.1.1 Forward selection: Variables are added one at a time until optimal model reached.\n\nChoose the variable with the highest absolute correlation \\(\\mid r \\mid\\) with the outcome.\nChoose the next variable that maximizes the model adjusted \\(R^{2}\\).\nRepeat until adding additional variables does not improve the model fit significantly.\n\n\n\n10.4.1.2 Backward elimination: Variables are removed one at a time until optimal model reached\n\nPut all variables into the model.\nRemove the least useful variable in the model. This can be done by choosing the variable with the largest \\(p\\)-value.\nRepeat until removing additional variables reduces the model fit significantly.\n\n\n\n10.4.1.3 Stepwise selection: Combination of forward and backward.\n\nStart with no variables (just \\(\\bar{Y}\\))\nAdd the variable that results in the greatest improvement in model fit.\nAdd another variable that results in the greatest improvement in model fit after controlling for the first.\nCheck to see if removing any variable currently in the model improves the fit.\nAdd another variable…\nCheck to remove variables…\nRepeat until no variables can be added or removed.\n\nMost programs have the option to force variables to be included in the model. This is important in cases where there is a primary factor of interest such as a treatment effect.\nDoing stepwise selection in R\nFirst you need to specify your null model - just the outcome, no covariates, and the full model - the outcome against ALL of your covariates.\n\nnull.model &lt;- lm(body_mass_g ~ 1, data=pen.nomiss)\nfull.model &lt;- lm(body_mass_g ~ ., data=pen.nomiss)\n\nForward selection\n\nstep(null.model, \n     scope=list(lower=null.model, upper=full.model),\n     direction='forward', trace=1) |&gt; summary()\n\nStart:  AIC=4457.28\nbody_mass_g ~ 1\n\n                    Df Sum of Sq       RSS    AIC\n+ flipper_length_mm  1 164047703  51211963 3981.1\n+ species            2 145190219  70069447 4087.5\n+ island             2  83740680 131518986 4297.2\n+ bill_length_mm     1  74792533 140467133 4317.1\n+ bill_depth_mm      1  47959592 167300074 4375.3\n+ sex                1  38878897 176380769 4392.9\n&lt;none&gt;                           215259666 4457.3\n+ year               1    102884 215156782 4459.1\n\nStep:  AIC=3981.13\nbody_mass_g ~ flipper_length_mm\n\n                 Df Sum of Sq      RSS    AIC\n+ sex             1   9416589 41795374 3915.5\n+ species         2   5368818 45843144 3948.3\n+ island          2   3437527 47774435 3962.0\n+ year            1   2666295 48545668 3965.3\n+ bill_depth_mm   1    338887 50873075 3980.9\n&lt;none&gt;                        51211963 3981.1\n+ bill_length_mm  1    140000 51071963 3982.2\n\nStep:  AIC=3915.47\nbody_mass_g ~ flipper_length_mm + sex\n\n                 Df Sum of Sq      RSS    AIC\n+ species         2  13141806 28653568 3793.8\n+ island          2   6037165 35758209 3867.5\n+ bill_depth_mm   1   3667377 38127997 3886.9\n+ year            1   2276715 39518658 3898.8\n&lt;none&gt;                        41795374 3915.5\n+ bill_length_mm  1    144990 41650383 3916.3\n\nStep:  AIC=3793.76\nbody_mass_g ~ flipper_length_mm + sex + species\n\n                 Df Sum of Sq      RSS    AIC\n+ bill_depth_mm   1   1196096 27457472 3781.6\n+ bill_length_mm  1    780776 27872792 3786.6\n+ year            1    474080 28179488 3790.2\n&lt;none&gt;                        28653568 3793.8\n+ island          2     61695 28591873 3797.0\n\nStep:  AIC=3781.56\nbody_mass_g ~ flipper_length_mm + sex + species + bill_depth_mm\n\n                 Df Sum of Sq      RSS    AIC\n+ bill_length_mm  1    541825 26915647 3776.9\n+ year            1    272828 27184644 3780.2\n&lt;none&gt;                        27457472 3781.6\n+ island          2     59488 27397984 3784.8\n\nStep:  AIC=3776.93\nbody_mass_g ~ flipper_length_mm + sex + species + bill_depth_mm + \n    bill_length_mm\n\n         Df Sum of Sq      RSS    AIC\n+ year    1    319160 26596486 3775.0\n&lt;none&gt;                26915647 3776.9\n+ island  2     56214 26859432 3780.2\n\nStep:  AIC=3774.95\nbody_mass_g ~ flipper_length_mm + sex + species + bill_depth_mm + \n    bill_length_mm + year\n\n         Df Sum of Sq      RSS  AIC\n&lt;none&gt;                26596486 3775\n+ island  2     79468 26517018 3778\n\n\n\nCall:\nlm(formula = body_mass_g ~ flipper_length_mm + sex + species + \n    bill_depth_mm + bill_length_mm + year, data = pen.nomiss)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-809.15 -179.43   -3.42  183.60  866.03 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       80838.770  41677.817   1.940 0.053292 .  \nflipper_length_mm    18.064      3.088   5.849 1.20e-08 ***\nsexmale             382.168     47.797   7.996 2.28e-14 ***\nspeciesChinstrap   -274.496     81.558  -3.366 0.000855 ***\nspeciesGentoo       929.275    136.036   6.831 4.16e-11 ***\nbill_depth_mm        60.749     19.926   3.049 0.002487 ** \nbill_length_mm       18.997      7.086   2.681 0.007718 ** \nyear                -41.139     20.832  -1.975 0.049131 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 286.1 on 325 degrees of freedom\nMultiple R-squared:  0.8764,    Adjusted R-squared:  0.8738 \nF-statistic: 329.3 on 7 and 325 DF,  p-value: &lt; 2.2e-16\n\n\nBackward selection\n\nstep(full.model, direction='backward', trace=1) |&gt; summary()\n\nStart:  AIC=3777.96\nbody_mass_g ~ species + island + bill_length_mm + bill_depth_mm + \n    flipper_length_mm + sex + year\n\n                    Df Sum of Sq      RSS    AIC\n- island             2     79468 26596486 3775.0\n&lt;none&gt;                           26517018 3778.0\n- year               1    342414 26859432 3780.2\n- bill_length_mm     1    583730 27100748 3783.2\n- bill_depth_mm      1    758473 27275491 3785.3\n- flipper_length_mm  1   2872068 29389086 3810.2\n- sex                1   5101785 31618803 3834.6\n- species            2   6470784 32987802 3846.7\n\nStep:  AIC=3774.95\nbody_mass_g ~ species + bill_length_mm + bill_depth_mm + flipper_length_mm + \n    sex + year\n\n                    Df Sum of Sq      RSS    AIC\n&lt;none&gt;                           26596486 3775.0\n- year               1    319160 26915647 3776.9\n- bill_length_mm     1    588158 27184644 3780.2\n- bill_depth_mm      1    760657 27357143 3782.3\n- flipper_length_mm  1   2800047 29396533 3806.3\n- sex                1   5231718 31828204 3832.8\n- species            2   9693667 36290153 3874.4\n\n\n\nCall:\nlm(formula = body_mass_g ~ species + bill_length_mm + bill_depth_mm + \n    flipper_length_mm + sex + year, data = pen.nomiss)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-809.15 -179.43   -3.42  183.60  866.03 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       80838.770  41677.817   1.940 0.053292 .  \nspeciesChinstrap   -274.496     81.558  -3.366 0.000855 ***\nspeciesGentoo       929.275    136.036   6.831 4.16e-11 ***\nbill_length_mm       18.997      7.086   2.681 0.007718 ** \nbill_depth_mm        60.749     19.926   3.049 0.002487 ** \nflipper_length_mm    18.064      3.088   5.849 1.20e-08 ***\nsexmale             382.168     47.797   7.996 2.28e-14 ***\nyear                -41.139     20.832  -1.975 0.049131 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 286.1 on 325 degrees of freedom\nMultiple R-squared:  0.8764,    Adjusted R-squared:  0.8738 \nF-statistic: 329.3 on 7 and 325 DF,  p-value: &lt; 2.2e-16\n\n\nStepwise\n\nstep(null.model, \n     scope=list(lower=null.model, upper=full.model),\n     direction='both', trace=1) |&gt; summary()\n\nStart:  AIC=4457.28\nbody_mass_g ~ 1\n\n                    Df Sum of Sq       RSS    AIC\n+ flipper_length_mm  1 164047703  51211963 3981.1\n+ species            2 145190219  70069447 4087.5\n+ island             2  83740680 131518986 4297.2\n+ bill_length_mm     1  74792533 140467133 4317.1\n+ bill_depth_mm      1  47959592 167300074 4375.3\n+ sex                1  38878897 176380769 4392.9\n&lt;none&gt;                           215259666 4457.3\n+ year               1    102884 215156782 4459.1\n\nStep:  AIC=3981.13\nbody_mass_g ~ flipper_length_mm\n\n                    Df Sum of Sq       RSS    AIC\n+ sex                1   9416589  41795374 3915.5\n+ species            2   5368818  45843144 3948.3\n+ island             2   3437527  47774435 3962.0\n+ year               1   2666295  48545668 3965.3\n+ bill_depth_mm      1    338887  50873075 3980.9\n&lt;none&gt;                            51211963 3981.1\n+ bill_length_mm     1    140000  51071963 3982.2\n- flipper_length_mm  1 164047703 215259666 4457.3\n\nStep:  AIC=3915.47\nbody_mass_g ~ flipper_length_mm + sex\n\n                    Df Sum of Sq       RSS    AIC\n+ species            2  13141806  28653568 3793.8\n+ island             2   6037165  35758209 3867.5\n+ bill_depth_mm      1   3667377  38127997 3886.9\n+ year               1   2276715  39518658 3898.8\n&lt;none&gt;                            41795374 3915.5\n+ bill_length_mm     1    144990  41650383 3916.3\n- sex                1   9416589  51211963 3981.1\n- flipper_length_mm  1 134585395 176380769 4392.9\n\nStep:  AIC=3793.76\nbody_mass_g ~ flipper_length_mm + sex + species\n\n                    Df Sum of Sq      RSS    AIC\n+ bill_depth_mm      1   1196096 27457472 3781.6\n+ bill_length_mm     1    780776 27872792 3786.6\n+ year               1    474080 28179488 3790.2\n&lt;none&gt;                           28653568 3793.8\n+ island             2     61695 28591873 3797.0\n- flipper_length_mm  1   4325617 32979185 3838.6\n- species            2  13141806 41795374 3915.5\n- sex                1  17189576 45843144 3948.3\n\nStep:  AIC=3781.56\nbody_mass_g ~ flipper_length_mm + sex + species + bill_depth_mm\n\n                    Df Sum of Sq      RSS    AIC\n+ bill_length_mm     1    541825 26915647 3776.9\n+ year               1    272828 27184644 3780.2\n&lt;none&gt;                           27457472 3781.6\n+ island             2     59488 27397984 3784.8\n- bill_depth_mm      1   1196096 28653568 3793.8\n- flipper_length_mm  1   3145834 30603306 3815.7\n- sex                1   7932472 35389944 3864.1\n- species            2  10670525 38127997 3886.9\n\nStep:  AIC=3776.93\nbody_mass_g ~ flipper_length_mm + sex + species + bill_depth_mm + \n    bill_length_mm\n\n                    Df Sum of Sq      RSS    AIC\n+ year               1    319160 26596486 3775.0\n&lt;none&gt;                           26915647 3776.9\n+ island             2     56214 26859432 3780.2\n- bill_length_mm     1    541825 27457472 3781.6\n- bill_depth_mm      1    957145 27872792 3786.6\n- flipper_length_mm  1   2481143 29396790 3804.3\n- sex                1   5482024 32397671 3836.7\n- species            2  11183644 38099291 3888.6\n\nStep:  AIC=3774.95\nbody_mass_g ~ flipper_length_mm + sex + species + bill_depth_mm + \n    bill_length_mm + year\n\n                    Df Sum of Sq      RSS    AIC\n&lt;none&gt;                           26596486 3775.0\n- year               1    319160 26915647 3776.9\n+ island             2     79468 26517018 3778.0\n- bill_length_mm     1    588158 27184644 3780.2\n- bill_depth_mm      1    760657 27357143 3782.3\n- flipper_length_mm  1   2800047 29396533 3806.3\n- sex                1   5231718 31828204 3832.8\n- species            2   9693667 36290153 3874.4\n\n\n\nCall:\nlm(formula = body_mass_g ~ flipper_length_mm + sex + species + \n    bill_depth_mm + bill_length_mm + year, data = pen.nomiss)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-809.15 -179.43   -3.42  183.60  866.03 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       80838.770  41677.817   1.940 0.053292 .  \nflipper_length_mm    18.064      3.088   5.849 1.20e-08 ***\nsexmale             382.168     47.797   7.996 2.28e-14 ***\nspeciesChinstrap   -274.496     81.558  -3.366 0.000855 ***\nspeciesGentoo       929.275    136.036   6.831 4.16e-11 ***\nbill_depth_mm        60.749     19.926   3.049 0.002487 ** \nbill_length_mm       18.997      7.086   2.681 0.007718 ** \nyear                -41.139     20.832  -1.975 0.049131 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 286.1 on 325 degrees of freedom\nMultiple R-squared:  0.8764,    Adjusted R-squared:  0.8738 \nF-statistic: 329.3 on 7 and 325 DF,  p-value: &lt; 2.2e-16\n\n\nWarnings:\n\nStopping criteria and algorithm can be different for different software programs.\nCan reject perfectly plausible models from later consideration\nHides relationships between variables (X3 is added and now X1 is no longer significant. X1 vs X3 should be looked at)\n\nOther references Stats 191 at Stanford. This one uses cross-validation on the stepwise procedures, and demonstrates the dangers of trusting models that come out of blind use of variable selection methods. https://web.stanford.edu/class/stats191/notebooks/Selection.html\n\n\n10.4.1.4 Best Subsets\n\nSelect one X with highest simple \\(r\\) with Y\nSelect two X’s with highest multiple \\(r\\) with Y\nSelect three X’s with highest multiple \\(r\\) with Y etc.\nCompute adjusted R2, AIC or BIC each time.\nCompare and choose among the “best subsets” of various sizes.\n\n\noc.ht &lt;- regsubsets(body_mass_g ~ ., data=pen.nomiss)\npar(mfrow=c(1,3)) # set plotting window to be 1 row and 3 columns\nplot(oc.ht, scale='adjr2');plot(oc.ht, scale='bic');plot(oc.ht, scale='Cp')\n\n\n\n\n\n\n\n\n\nThe black squares are when the variable is in the model, the white is when it’s not\nThe vertical axis are chosen fit metrics such as adjusted R2, BIC and Mallows Cp. The higher the better\n\nIn this example variables that show up as improving model fit include species, sex, flipper_length_mm, bill_length, and possibly year. For sure island is out.\nOther references from STDHA: http://www.sthda.com/english/articles/37-model-selection-essentials-in-r/155-best-subsets-regression-essentials-in-r/\nNotable problems: categorical variables are not treated as a group. that is, they are not “all in” or “all out”. If at least one level is frequently chosen as improving model fit, add the entire categorical variable to the model.\n\n\n\n10.4.2 LASSO Regression (PMA6 9.7)\nLeast Absolute Shrinkage and Selection Operator.\nThe goal of LASSO is to minimize\n\\[\nRSS + \\lambda \\sum_{j}\\mid \\beta_{j} \\ \\mid\n\\]\nwhere \\(\\lambda\\) is a model complexity penalty parameter.\n\n“Shrinks” the coefficients, setting some to exactly 0.\n\nThus essentially choosing a simpler model\n\nBalances model accuracy with interpretation.\n\nThe lasso fits many regression models and selects those variables that show the strongest association with the response variable using the data at hand. This is also described as a method of selective inference (Taylor and Tibshirani, 2015) and is an example of exploratory research, where the data may influence what type and how many analyses are performed.\n\n10.4.2.1 Example\n\n\n\nThis section uses functions glmnet package, and the Chemical data set from PMA6. Also it uses the model.matrix function from the stats package (automatically loaded). This function takes a set of input predictors and turns them into the variables that are used directly in the model. For example, categorical variables will be converted into multiple binary indicators. This typically happens in the background.\n\n\nThe glmnet function works best when the outcome y and predictors x are not contained within a data frame. The alpha argument is the tuning parameter, where a value of 1 specifies the lasso.\n\nlibrary(glmnet)\nchem &lt;- read.table(\"data/Chemical.txt\", header = TRUE)\ny &lt;- chem$PE\nx &lt;- model.matrix(PE~., chem)[,-1] # the -1 drops the intercept\nchem.lasso &lt;- glmnet(x, y, alpha = 1)\n\nWe can visualize the effect of the coefficient shrinkage using the following plot.\n\nplot(chem.lasso, xvar = \"lambda\")\nmtext(side=3, \"Number of Variables\", line=2)\n\n\n\n\n\n\n\n\n\nEach line represents the value of a coefficient as \\(ln(\\lambda)\\) changes.\nThe red line on the bottom and the purple on the top must be important, since they are the last two to be shrunk to 0 and they are relatively stable.\n\nExamining the coefficients of the chem.lasso model object gives us a very large matrix (7x61), listing the coefficients for each value of \\(\\lambda\\) that was tried. A sample of columns are shown below:\n\ncoef(chem.lasso)[,1:8]\n\n7 x 8 sparse Matrix of class \"dgCMatrix\"\n                  s0         s1         s2        s3       s4         s5\n(Intercept) 9.366667  9.5835968  9.7812554  9.961355 10.12545 10.0399324\nROR5        .         .          .          .         .        .        \nDE          .        -0.5206322 -0.9950129 -1.427251 -1.82109 -2.0903355\nSALESGR5    .         .          .          .         .        .        \nEPS5        .         .          .          .         .        .        \nNPM1        .         .          .          .         .        0.0157436\nPAYOUTR1    .         .          .          .         .        0.2427377\n                     s6          s7\n(Intercept)  9.59940208  9.19800729\nROR5         .           .         \nDE          -2.21050375 -2.31999666\nSALESGR5     .           .         \nEPS5         .           .         \nNPM1         0.04642112  0.07437333\nPAYOUTR1     0.98609790  1.66341998\n\ncoef(chem.lasso)[,56:60]\n\n7 x 5 sparse Matrix of class \"dgCMatrix\"\n                    s55         s56         s57         s58         s59\n(Intercept)  1.36957827  1.35834023  1.34802448  1.34099610  1.33052382\nROR5         0.03767492  0.03797214  0.03825501  0.03840313  0.03870172\nDE          -2.58475249 -2.58199893 -2.57937377 -2.57863116 -2.57530747\nSALESGR5     0.19961031  0.19990639  0.20017553  0.20039468  0.20064382\nEPS5        -0.03468051 -0.03483069 -0.03497088 -0.03507850 -0.03520342\nNPM1         0.34740236  0.34760738  0.34778861  0.34795977  0.34812027\nPAYOUTR1     9.78594052  9.79286717  9.79910767  9.80408094  9.81009965\n\n\nComparing the plot to the coefficient model output above, we see that the variables that show up being shrunk last are DE and PAYOUTR1.\nUsing Cross validation to find minimum lambda\nCross-validation is a resampling method that uses different portions of the data to test and train a model on different iterations Wikipedia.\nBy applying a cross-validation technique, we can identify the specific value for \\(\\lambda\\) that results in the lowest cross-validated Mean Squared Error (MSE) (\\(\\lambda_{min}\\)). To ensure reproducibility of these results we set a seed for the random number generator prior to analysis.\n\nset.seed(123) # Setting a seed to ensure I get the same results each time I knit\ncv.lasso &lt;- cv.glmnet(x, y, alpha = 1) # note change in function\n\n# Fit the final model using the min lambda\nmodel &lt;- glmnet(x, y, alpha = 1, lambda = cv.lasso$lambda.min)\n\nThe resulting table of shrunk regression coefficients then is;\n\ncoef(model)\n\n7 x 1 sparse Matrix of class \"dgCMatrix\"\n                      s0\n(Intercept)  2.645693621\nROR5         0.004833458\nDE          -2.882636490\nSALESGR5     0.165581782\nEPS5        -0.017771193\nNPM1         0.323497141\nPAYOUTR1     8.986481946\n\n\nIn this case we would keep variables: DE, SALESGR5, NPM1 and PAYOUTR1. Estimates for ROR5 and EPS56 are very small, and so can be reasonably excluded.\n\nThe lasso procedure normalizes the data prior to fitting a model, so the coefficient values that are returned cannot be interpreted directly in context of the problem.\n\nThis does allow us the ability to make “judgement” calls on what is a ‘small’ estimate since it’s no longer dependent on the units of the data.\n\nAppropriate inference after model selection is currently under research. No unifying theory exists yet.\nFor now, use lasso to choose variables, then fit a model with only those selected variables in the final model.\nVariables chosen in this manner are important, yet biased estimates.\n\n\nlm(PE ~ DE + SALESGR5 + NPM1 + PAYOUTR1, data = chem) |&gt; tbl_regression()\n\n\n\n\n\n\n\nCharacteristic\nBeta\n95% CI1\np-value\n\n\n\n\nDE\n-3.2\n-6.9, 0.58\n0.094\n\n\nSALESGR5\n0.19\n-0.02, 0.41\n0.077\n\n\nNPM1\n0.35\n0.12, 0.59\n0.005\n\n\nPAYOUTR1\n11\n4.7, 17\n0.001\n\n\n\n1 CI = Confidence Interval\n\n\n\n\n\n\n\n\n\n\n10.4.2.2 Ridge Regression (PMA6 10.6)\nOften compared to LASSO, Ridge regression also minimizes the RSS, but the penalty function is different: \\[\nRSS + \\lambda \\sum_{j} \\beta_{j}^2\n\\]\nRidge regression only shrinks the magnitude of the coefficients, not set them exactly to zero.\n\n\n\nThis means Ridge regression is not a method of variable selection.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Model Building</span>"
    ]
  },
  {
    "objectID": "model_building.html#model-fit-criteria",
    "href": "model_building.html#model-fit-criteria",
    "title": "10  Model Building",
    "section": "10.5 Comparing between models (PMA6 9.4)",
    "text": "10.5 Comparing between models (PMA6 9.4)\nThe goal: Find the subset of independent variables that optimizes (either minimize or maximize) a certain criteria. In other words, the goal is to find the optimal model.\n How do we measure “optimal”?\nFirst we need to look at two quantities:\n\n10.5.1 RSS: Residual Sum of Squares\nRecall the method of least squares introduced in section @ref(mlr) minimizes the residual sum of squares around the regression plane. This value is central to all following model comparison. How “far away” are the model estimates from the observed?\n\\[\n\\sum(Y - \\bar{Y})^{2}(1-R^{2})  \n\\]\n\n\n10.5.2 General F Test\n\nSee also Section @ref(general-F).\n\nTwo nested models are similar if the p-value for the General F-test is non-significant at a .15 level. Nested: The list of variables in one model is a subset of the list of variables from a bigger model. Similar to all other ANOVA models, you are essentially comparing the difference in RSS between nested models.\n\n# Full model\nfull.employ.model &lt;- lm(cesd ~ age + chronill + employ, data=depress_clean)\n# Reduced model\nreduced.employ.model &lt;- lm(cesd ~ age, data=depress_clean)\nanova(reduced.employ.model, full.employ.model)\n\nAnalysis of Variance Table\n\nModel 1: cesd ~ age\nModel 2: cesd ~ age + chronill + employ\n  Res.Df   RSS Df Sum of Sq      F    Pr(&gt;F)    \n1    292 22197                                  \n2    290 20605  2    1592.8 11.209 2.046e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\nCaution: this uses anova() not aov().\n\n\nOther references: https://online.stat.psu.edu/stat501/lesson/6/6.2\n\n\n10.5.3 Likelihood function\nWhat is the likelihood that we observed the data \\(x\\), given parameter values \\(\\theta\\). \\[\n\\mathcal{L}(\\theta \\mid x)=p_{\\theta }(x)=P_{\\theta }(X=x)\n\\]\n\nFor strictly convenient mathematical matters, we tend to work with the log-likelihood (LL).\n\nGreat because \\(log\\) is a monotonic increasing function, maximizing the LL = maximizing the likelihood function.\n\nWe can compare between models using functions based off the LL.\n\nThere are several measures we can use to compare between competing models.\n\n\n10.5.4 Multiple \\(R^{2}\\)\nIf the model explains a large amount of variation in the outcome that’s good right? So we could consider using \\(R^{2}\\) as a selection criteria and trying to find the model that maximizes this value.\n\nProblem: The multiple \\(R^{2}\\) always increases as predictors are added to the model.\n\nEx. 1: N = 100, P = 1, E(\\(R^{2}\\)) = 0.01\nEx. 2: N = 21, P = 10, E(\\(R^{2}\\)) = 0.5\n\nProblem: \\(R^{2} = 1-\\frac{Model SS}{Total SS}\\) is biased: If population \\(R^{2}\\) is really zero, then E(\\(R^{2}\\)) = P/(N-1).\n\nReference PMA6 Figure 9.1\n\n\n10.5.5 Adjusted \\(R^{2}\\)\nTo alleviate bias use Mean squares instead of SS.\n\\(R^{2} = 1-\\frac{Model MS}{Total MS}\\)\nequivalently,\n\\(R^{2}_{adj} = R^{2} - \\frac{p(1-R^{2})}{n-p-1}\\)\nNow Adjusted \\(R^{2}\\) is approximately unbiased and won’t inflate as \\(p\\) increases.\n\n\n10.5.6 Mallows \\(C_{p}\\)\n\\[\n    C_{p} = (N-P-1)\\left(\\frac{RMSE}{\\hat{\\sigma}^{2}} -1 \\right) + (P+1)\n\\]\nwhere \\(RMSE = \\frac{RSS}{N-P-1}\\).\n\nSmaller is better\nWhen all variables are chosen, \\(P+1\\) is at it’s maximum but the other part of \\(C_{p}\\) is zero since \\(RMSE\\)==\\(\\hat{\\sigma}^{2}\\)\n\n\n\n10.5.7 Akaike Information Criterion (AIC)\n\nA penalty is applied to the deviance that increases as the number of parameters \\(p\\) increase.\nTries to find a parsimonious model that is closer to the “truth”.\n\nUses an information function, e.g., the likelihood function \\((LL)\\).\n\n\\[ AIC = -2LL + 2p\\]\n\nSmaller is better\nCan also be written as a function of the residual sum of squares (RSS) (in book)\nEstimates the information in one model relative to other models\n\nSo if all models suck, your AIC will just tell you which one sucks less.\n\nBuilt in AIC() function in R\nRule of thumb: Model 1 and Model 2 are considered to have significantly different fit if the difference in AIC values is greater than 2.\n\n\\[\\mid AIC_{1} - AIC_{2}\\mid &gt; 2\\]\n\n\n10.5.8 Bayesian Information Criterion (BIC)\n\nSimilar to AIC.\nBuilt in BIC() function in R\nTries to find a parsimonious model that is more likely to be the “truth”. The smaller BIC, the better.\n\n\\[ BIC = -2LL + ln(N)*(P+1)\\]\n\n\n10.5.9 AIC vs BIC\n\nBoth are “penalized likelihood” functions\nEach = -2log likelihood + penalty\nAIC: penalty = 2, BIC: penalty = ln(N)\nFor any N &gt; 7, ln(N) &gt; 2\nThus, BIC penalizes larger models more heavily.\nThey often agree.\n\nWhen they disagree, AIC chooses a larger model than BIC.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Model Building</span>"
    ]
  },
  {
    "objectID": "model_building.html#model-diagnostics",
    "href": "model_building.html#model-diagnostics",
    "title": "10  Model Building",
    "section": "10.6 Model Diagnostics",
    "text": "10.6 Model Diagnostics\nRecall from Section @ref(mathematical-model) the assumptions for linear regression model are;\n\nLinearity The relationship between \\(x_j\\) and \\(y\\) is linear, for all \\(j\\).\nNormality, Homogeneity of variance The residuals are identically distributed \\(\\epsilon_{i} \\sim N(0, \\sigma^{2})\\)\nUncorrelated/Independent Distinct error terms are uncorrelated: \\(\\text{Cov}(\\epsilon_{i},\\epsilon_{j})=0,\\forall i\\neq j.\\)\n\nThere are a few ways to visually assess these assumptions. We’ll look at this using a penguin model of body mass as an example.\n\npen.bmg.model &lt;- lm(body_mass_g ~ bill_length_mm + flipper_length_mm, data=pen)\n\n\n10.6.1 Linearity\nCreate a scatterplot with lowess AND linear regression line. See how close the lowess trend line is to the best fit line. Do this for all variables.\n\nbill.plot  &lt;- ggplot(pen, aes(y=body_mass_g, x=bill_length_mm)) + \n  geom_point() +   theme_bw() + \n  geom_smooth(col = \"red\") + \n  geom_smooth(method = \"lm\" , col = \"blue\")\n\nflipper.plot  &lt;- ggplot(pen, aes(y=body_mass_g, x=flipper_length_mm)) + \n  geom_point() +   theme_bw() + \n  geom_smooth(col = \"red\") + \n  geom_smooth(method = \"lm\" , col = \"blue\")\n\ngridExtra::grid.arrange(bill.plot, flipper.plot, ncol=2)\n\n\n\n\n\n\n\n\nBoth variables appear to have a mostly linear relationship with body mass. For penguins with bill length over 50mm the slope may decrease, but the data is sparse in the tails.\n\n\n10.6.2 Normality of residuals.\nThere are two common ways to assess normality.\n\nA histogram or density plot with a normal distribution curve overlaid.\nA qqplot. This is also known as a ‘normal probability plot’. It is used to compare the theoretical quantiles of the data if it were to come from a normal distribution to the observed quantiles. PMA6 Figure 5.4 has more examples and an explanation.\n\n\ngridExtra::grid.arrange(\n  plot(check_normality(pen.bmg.model)), \n  plot(check_normality(pen.bmg.model), type = \"qq\"),\n  ncol=2\n)\n\n\n\n\n\n\n\n\nIn both cases you want to assess how close the dots/distribution is to the reference curve/line.\n\n\n10.6.3 Homogeneity of variance\nThe variability of the residuals should be constant, and independent of the value of the fitted value \\(\\hat{y}\\).\n\nplot(check_heteroskedasticity(pen.bmg.model))\n\n\n\n\n\n\n\n\nThis assumption is often the hardest to be fully upheld. Here we see a slightly downward trend. However, this is not a massive violation of assumptions.\n\n\n10.6.4 Posterior Predictions\nNot really an assumption, but we can also assess the fit of a model by how well it does to predict the outcome. Using a Bayesian sampling method, the distribution of the predictions from the model should resemble the observed distribution.\n\nplot(check_posterior_predictions(pen.bmg.model))\n\n\n\n\n\n\n\n\nThis looks like a good fit.\n\n\n10.6.5 All at once\n\ncheck_model(pen.bmg.model)\n\n\n\n\n\n\n\n\nRefer to PMA6 8.8 to learn about leverage.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Model Building</span>"
    ]
  },
  {
    "objectID": "model_building.html#general-advice-pma6-9.9",
    "href": "model_building.html#general-advice-pma6-9.9",
    "title": "10  Model Building",
    "section": "10.7 General Advice (PMA6 9.9)",
    "text": "10.7 General Advice (PMA6 9.9)\n\nModel selection is not a hard science.\nSome criteria have “rules of thumb” that can guide your exploration (such as difference in AIC &lt; 2)\nUse common sense: A sub-optimal subset may make more sense than optimal one\np-values: When you compare two criteria, often the difference has a known distribution.\n\nWald F Test, the difference in RSS between the two models has a F distribution.\n\nAll criterion should be used as guides.\nPerform multiple methods of variable selection, find the commonalities.\nLet science and the purpose of your model be your ultimate guide\n\nIf the purpose of the model is for explanation/interpretation, error on the side of parsimony (smaller model) than being overly complex.\nIf the purpose is prediction, then as long as you’re not overfitting the model (as checked using cross-validation techniques), use as much information as possible.\n\nAutomated versions of variable selection processes should not be used blindly.\n“… perhaps the most serious source of error lies in letting statistical procedures make decisions for you.”…“Don’t be too quick to turn on the computer. Bypassing the brain to compute by reflex is a sure recipe for disaster.” Good and Hardin, Common Errors in Statistics (and How to Avoid Them), p. 3, p. 152",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Model Building</span>"
    ]
  },
  {
    "objectID": "model_building.html#what-to-watch-out-for-pma6-9.10",
    "href": "model_building.html#what-to-watch-out-for-pma6-9.10",
    "title": "10  Model Building",
    "section": "10.8 What to watch out for (PMA6 9.10)",
    "text": "10.8 What to watch out for (PMA6 9.10)\n\nMulticollinearity\nMissing Data\nUse previous research as a guide\nVariables not included can bias the results\nSignificance levels are only a guide\nPerform model diagnostics after selection to check model fit.",
    "crumbs": [
      "Regression Modeling",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Model Building</span>"
    ]
  },
  {
    "objectID": "appendix.html",
    "href": "appendix.html",
    "title": "Appendix",
    "section": "",
    "text": "Common error messages",
    "crumbs": [
      "Appendix"
    ]
  },
  {
    "objectID": "appendix.html#common-error-messages",
    "href": "appendix.html#common-error-messages",
    "title": "Appendix",
    "section": "",
    "text": "Function not found\n\nCheck the spelling and capitalization.\nDid you load the package in your first code chunk?\n\n\n\nObject not found\nR can’t find the object you are referring to. Here are some debugging steps:\n\nCheck the spelling and capitalization.\nIf you are referring to a variable inside a data set, did you use $ notation?\nCan you find this variable in some other manner? (i.e. )\nIf this piece of code works when you are working interactively, but not when you knit, then check where you created this variable. Is it written either in this current code file or your data management file?\nDid you create this variable in your data management file, and then forget to run the entire code document (hence recreating the analysis data set with this new variable)\nShut down and restart R studio entirely.\n\n\n\n\nObject of length 0\nThis object does not exist, or is empty. Check how you created this object initially.\n\n\nDiscrete scale applied to continuous object\nRead that error message carefully. It explains exactly what the problem is. It is up to you to problem solve to figure out which variable you are trying to apply a scale to (like color or fill), what it’s data type is.\n\n\nPackage inputenc error: Unicode char not set up for use with \nWhen you want to use certain symbols in math notation, such as Greek letters or the tilde (\\(\\sim\\)), it is important that you type in the commands for them (e.g., to write \\(\\sim\\), type or for the Greek letter \\(\\mu\\), type ). If you get this error message, there are a couple of possibilities. Either you omitted a around the notation, or you copied and pasted symbols straight from the course notes. In the latter case, find the symbol and replace it with its command (these are usually pretty self-explanatory but when in doubt, Google it).\n\n\nContinuous x aesthetic – did you forget aes(group=…)?\nThis ggplot2 error message will show up when the aesthetics of a plot don’t map to the geometry of your data. Try either of these solutions depending on your variable type:\n\nChange your x variable to a discrete data type, such as a factor.\nAdd the argument group=1 to the aesthetics of the plot, aes().",
    "crumbs": [
      "Appendix"
    ]
  }
]